{"ast":null,"code":"/**\n * Format a date object to a localized time string using the browser's default locale\n * @param date - Input date to format\n * @param showSeconds - Whether to show seconds in the formatted string\n * @param useHour12 - Whether to use 12-hour time\n */\nexport var formatTimeString = function (date, showSeconds, useHour12) {\n  return date.toLocaleTimeString([], {\n    hour: 'numeric',\n    minute: '2-digit',\n    second: showSeconds ? '2-digit' : undefined,\n    hour12: useHour12\n  });\n};","map":{"version":3,"sources":["timeFormatting/index.ts"],"names":[],"mappings":"AAAA;;;;;AAKG;AACH,OAAO,IAAM,gBAAgB,GAAG,UAAC,IAAD,EAAa,WAAb,EAAoC,SAApC,EAAuD;AACrF,SAAA,IAAI,CAAC,kBAAL,CAAwB,EAAxB,EAA4B;AAC1B,IAAA,IAAI,EAAE,SADoB;AAE1B,IAAA,MAAM,EAAE,SAFkB;AAG1B,IAAA,MAAM,EAAE,WAAW,GAAG,SAAH,GAAe,SAHR;AAI1B,IAAA,MAAM,EAAE;AAJkB,GAA5B,CAAA;AAKE,CANG","sourcesContent":["/**\n * Format a date object to a localized time string using the browser's default locale\n * @param date - Input date to format\n * @param showSeconds - Whether to show seconds in the formatted string\n * @param useHour12 - Whether to use 12-hour time\n */\nexport const formatTimeString = (date: Date, showSeconds?: boolean, useHour12?: boolean): string =>\n  date.toLocaleTimeString([], {\n    hour: 'numeric',\n    minute: '2-digit',\n    second: showSeconds ? '2-digit' : undefined,\n    hour12: useHour12,\n  });\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}