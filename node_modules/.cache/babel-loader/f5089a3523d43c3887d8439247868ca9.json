{"ast":null,"code":"function _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction BaseInput(props) {\n  // Note: since React 15.2.0 we can't forward unknown element attributes, so we\n  // exclude the \"options\" and \"schema\" ones here.\n  if (!props.id) {\n    console.log(\"No id for\", props);\n    throw new Error(\"no id for props \".concat(JSON.stringify(props)));\n  }\n\n  var value = props.value,\n      readonly = props.readonly,\n      disabled = props.disabled,\n      autofocus = props.autofocus,\n      onBlur = props.onBlur,\n      onFocus = props.onFocus,\n      options = props.options,\n      schema = props.schema,\n      uiSchema = props.uiSchema,\n      formContext = props.formContext,\n      registry = props.registry,\n      rawErrors = props.rawErrors,\n      inputProps = _objectWithoutProperties(props, [\"value\", \"readonly\", \"disabled\", \"autofocus\", \"onBlur\", \"onFocus\", \"options\", \"schema\", \"uiSchema\", \"formContext\", \"registry\", \"rawErrors\"]); // If options.inputType is set use that as the input type\n\n\n  if (options.inputType) {\n    inputProps.type = options.inputType;\n  } else if (!inputProps.type) {\n    // If the schema is of type number or integer, set the input type to number\n    if (schema.type === \"number\") {\n      inputProps.type = \"number\"; // Setting step to 'any' fixes a bug in Safari where decimals are not\n      // allowed in number inputs\n\n      inputProps.step = \"any\";\n    } else if (schema.type === \"integer\") {\n      inputProps.type = \"number\"; // Since this is integer, you always want to step up or down in multiples\n      // of 1\n\n      inputProps.step = \"1\";\n    } else {\n      inputProps.type = \"text\";\n    }\n  }\n\n  if (options.autocomplete) {\n    inputProps.autoComplete = options.autocomplete;\n  } // If multipleOf is defined, use this as the step value. This mainly improves\n  // the experience for keyboard users (who can use the up/down KB arrows).\n\n\n  if (schema.multipleOf) {\n    inputProps.step = schema.multipleOf;\n  }\n\n  if (typeof schema.minimum !== \"undefined\") {\n    inputProps.min = schema.minimum;\n  }\n\n  if (typeof schema.maximum !== \"undefined\") {\n    inputProps.max = schema.maximum;\n  }\n\n  var _onChange = function _onChange(_ref) {\n    var value = _ref.target.value;\n    return props.onChange(value === \"\" ? options.emptyValue : value);\n  };\n\n  return [React.createElement(\"input\", _extends({\n    key: inputProps.id,\n    className: \"form-control\",\n    readOnly: readonly,\n    disabled: disabled,\n    autoFocus: autofocus,\n    value: value == null ? \"\" : value\n  }, inputProps, {\n    list: schema.examples ? \"examples_\".concat(inputProps.id) : null,\n    onChange: _onChange,\n    onBlur: onBlur && function (event) {\n      return onBlur(inputProps.id, event.target.value);\n    },\n    onFocus: onFocus && function (event) {\n      return onFocus(inputProps.id, event.target.value);\n    }\n  })), schema.examples ? React.createElement(\"datalist\", {\n    key: \"datalist_\".concat(inputProps.id),\n    id: \"examples_\".concat(inputProps.id)\n  }, _toConsumableArray(new Set(schema.examples.concat(schema[\"default\"] ? [schema[\"default\"]] : []))).map(function (example) {\n    return React.createElement(\"option\", {\n      key: example,\n      value: example\n    });\n  })) : null];\n}\n\nBaseInput.defaultProps = {\n  required: false,\n  disabled: false,\n  readonly: false,\n  autofocus: false\n};\n\nif (process.env.NODE_ENV !== \"production\") {\n  BaseInput.propTypes = {\n    id: PropTypes.string.isRequired,\n    placeholder: PropTypes.string,\n    value: PropTypes.any,\n    required: PropTypes.bool,\n    disabled: PropTypes.bool,\n    readonly: PropTypes.bool,\n    autofocus: PropTypes.bool,\n    onChange: PropTypes.func,\n    onBlur: PropTypes.func,\n    onFocus: PropTypes.func\n  };\n}\n\nexport default BaseInput;","map":{"version":3,"sources":["C:/Users/Akshaj Bansal/json parser/my-app/node_modules/@rjsf/core/dist/es/components/widgets/BaseInput.js"],"names":["_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","TypeError","iter","Symbol","iterator","Object","prototype","toString","call","Array","from","isArray","i","arr2","length","_extends","assign","target","arguments","source","key","hasOwnProperty","apply","_objectWithoutProperties","excluded","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","indexOf","propertyIsEnumerable","sourceKeys","keys","React","PropTypes","BaseInput","props","id","console","log","Error","concat","JSON","stringify","value","readonly","disabled","autofocus","onBlur","onFocus","options","schema","uiSchema","formContext","registry","rawErrors","inputProps","inputType","type","step","autocomplete","autoComplete","multipleOf","minimum","min","maximum","max","_onChange","_ref","onChange","emptyValue","createElement","className","readOnly","autoFocus","list","examples","event","Set","map","example","defaultProps","required","process","env","NODE_ENV","propTypes","string","isRequired","placeholder","any","bool","func"],"mappings":"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","sourcesContent":["function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction BaseInput(props) {\n  // Note: since React 15.2.0 we can't forward unknown element attributes, so we\n  // exclude the \"options\" and \"schema\" ones here.\n  if (!props.id) {\n    console.log(\"No id for\", props);\n    throw new Error(\"no id for props \".concat(JSON.stringify(props)));\n  }\n\n  var value = props.value,\n      readonly = props.readonly,\n      disabled = props.disabled,\n      autofocus = props.autofocus,\n      onBlur = props.onBlur,\n      onFocus = props.onFocus,\n      options = props.options,\n      schema = props.schema,\n      uiSchema = props.uiSchema,\n      formContext = props.formContext,\n      registry = props.registry,\n      rawErrors = props.rawErrors,\n      inputProps = _objectWithoutProperties(props, [\"value\", \"readonly\", \"disabled\", \"autofocus\", \"onBlur\", \"onFocus\", \"options\", \"schema\", \"uiSchema\", \"formContext\", \"registry\", \"rawErrors\"]); // If options.inputType is set use that as the input type\n\n\n  if (options.inputType) {\n    inputProps.type = options.inputType;\n  } else if (!inputProps.type) {\n    // If the schema is of type number or integer, set the input type to number\n    if (schema.type === \"number\") {\n      inputProps.type = \"number\"; // Setting step to 'any' fixes a bug in Safari where decimals are not\n      // allowed in number inputs\n\n      inputProps.step = \"any\";\n    } else if (schema.type === \"integer\") {\n      inputProps.type = \"number\"; // Since this is integer, you always want to step up or down in multiples\n      // of 1\n\n      inputProps.step = \"1\";\n    } else {\n      inputProps.type = \"text\";\n    }\n  }\n\n  if (options.autocomplete) {\n    inputProps.autoComplete = options.autocomplete;\n  } // If multipleOf is defined, use this as the step value. This mainly improves\n  // the experience for keyboard users (who can use the up/down KB arrows).\n\n\n  if (schema.multipleOf) {\n    inputProps.step = schema.multipleOf;\n  }\n\n  if (typeof schema.minimum !== \"undefined\") {\n    inputProps.min = schema.minimum;\n  }\n\n  if (typeof schema.maximum !== \"undefined\") {\n    inputProps.max = schema.maximum;\n  }\n\n  var _onChange = function _onChange(_ref) {\n    var value = _ref.target.value;\n    return props.onChange(value === \"\" ? options.emptyValue : value);\n  };\n\n  return [React.createElement(\"input\", _extends({\n    key: inputProps.id,\n    className: \"form-control\",\n    readOnly: readonly,\n    disabled: disabled,\n    autoFocus: autofocus,\n    value: value == null ? \"\" : value\n  }, inputProps, {\n    list: schema.examples ? \"examples_\".concat(inputProps.id) : null,\n    onChange: _onChange,\n    onBlur: onBlur && function (event) {\n      return onBlur(inputProps.id, event.target.value);\n    },\n    onFocus: onFocus && function (event) {\n      return onFocus(inputProps.id, event.target.value);\n    }\n  })), schema.examples ? React.createElement(\"datalist\", {\n    key: \"datalist_\".concat(inputProps.id),\n    id: \"examples_\".concat(inputProps.id)\n  }, _toConsumableArray(new Set(schema.examples.concat(schema[\"default\"] ? [schema[\"default\"]] : []))).map(function (example) {\n    return React.createElement(\"option\", {\n      key: example,\n      value: example\n    });\n  })) : null];\n}\n\nBaseInput.defaultProps = {\n  required: false,\n  disabled: false,\n  readonly: false,\n  autofocus: false\n};\n\nif (process.env.NODE_ENV !== \"production\") {\n  BaseInput.propTypes = {\n    id: PropTypes.string.isRequired,\n    placeholder: PropTypes.string,\n    value: PropTypes.any,\n    required: PropTypes.bool,\n    disabled: PropTypes.bool,\n    readonly: PropTypes.bool,\n    autofocus: PropTypes.bool,\n    onChange: PropTypes.func,\n    onBlur: PropTypes.func,\n    onFocus: PropTypes.func\n  };\n}\n\nexport default BaseInput;"]},"metadata":{},"sourceType":"module"}