{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n/* eslint-disable react/prop-types */\n\n\nimport React from \"react\";\nimport _ from \"lodash\";\nimport { Form } from \"semantic-ui-react\";\nimport { utils } from '@rjsf/core';\nimport PropTypes from \"prop-types\";\nimport { getSemanticProps } from \"../util\";\nvar asNumber = utils.asNumber,\n    guessType = utils.guessType;\nvar nums = new Set([\"number\", \"integer\"]);\n/**\n * * Returns and creates an array format required for semantic drop down\n * @param {array} enumOptions- array of items for the dropdown\n * @param {array} enumDisabled - array of enum option values to disable\n * @returns {*}\n */\n\nfunction createDefaultValueOptionsForDropDown(enumOptions, enumDisabled) {\n  var disabledOptions = enumDisabled || [];\n  var options = []; // eslint-disable-next-line no-shadow\n\n  options = _.map(enumOptions, function (_ref) {\n    var label = _ref.label,\n        value = _ref.value;\n    return {\n      disabled: disabledOptions.indexOf(value) !== -1,\n      key: label,\n      text: label,\n      value: value\n    };\n  });\n  return options;\n}\n/**\n * This is a silly limitation in the DOM where option change event values are\n * always retrieved as strings.\n */\n\n\nvar processValue = function processValue(schema, value) {\n  // \"enum\" is a reserved word, so only \"type\" and \"items\" can be destructured\n  var type = schema.type,\n      items = schema.items;\n\n  if (value === \"\") {\n    return undefined;\n  } else if (type === \"array\" && items && nums.has(items.type)) {\n    return value.map(asNumber);\n  } else if (type === \"boolean\") {\n    return value === \"true\" || value === true;\n  } else if (type === \"number\") {\n    return asNumber(value);\n  } // If type is undefined, but an enum is present, try and infer the type from\n  // the enum values\n\n\n  if (schema.enum) {\n    if (schema.enum.every(function (x) {\n      return guessType(x) === \"number\";\n    })) {\n      return asNumber(value);\n    } else if (schema.enum.every(function (x) {\n      return guessType(x) === \"boolean\";\n    })) {\n      return value === \"true\";\n    }\n  }\n\n  return value;\n};\n\nfunction SelectWidget(_ref2) {\n  var schema = _ref2.schema,\n      id = _ref2.id,\n      options = _ref2.options,\n      name = _ref2.name,\n      required = _ref2.required,\n      disabled = _ref2.disabled,\n      readonly = _ref2.readonly,\n      value = _ref2.value,\n      multiple = _ref2.multiple,\n      placeholder = _ref2.placeholder,\n      autofocus = _ref2.autofocus,\n      onChange = _ref2.onChange,\n      onBlur = _ref2.onBlur,\n      onFocus = _ref2.onFocus;\n  var semanticProps = getSemanticProps({\n    options: options\n  });\n  var enumDisabled = options.enumDisabled,\n      enumOptions = options.enumOptions;\n  var emptyValue = multiple ? [] : \"\";\n  var dropdownOptions = createDefaultValueOptionsForDropDown(enumOptions, enumDisabled);\n\n  var _onChange = function _onChange(event, // eslint-disable-next-line no-shadow\n  _ref3) {\n    var value = _ref3.value;\n    return onChange && onChange(processValue(schema, value));\n  }; // eslint-disable-next-line no-shadow\n\n\n  var _onBlur = function _onBlur(_ref4) {\n    var value = _ref4.target.value;\n    return onBlur && onBlur(id, processValue(schema, value));\n  };\n\n  var _onFocus = function _onFocus(_ref5) {\n    var value = _ref5.target.value;\n    return onFocus && onFocus(id, processValue(schema, value));\n  };\n\n  return React.createElement(Form.Dropdown, _extends({\n    key: id,\n    name: name,\n    multiple: typeof multiple === \"undefined\" ? false : multiple,\n    value: typeof value === \"undefined\" ? emptyValue : value,\n    disabled: disabled,\n    placeholder: placeholder\n  }, semanticProps, {\n    required: required,\n    autoFocus: autofocus,\n    readOnly: readonly,\n    options: dropdownOptions,\n    onChange: _onChange,\n    onBlur: _onBlur,\n    onFocus: _onFocus\n  }));\n}\n\nSelectWidget.defaultProps = {\n  options: {\n    semantic: {\n      inverted: \"false\",\n      fluid: true,\n      selection: true,\n      scrolling: true,\n      upward: false\n    }\n  }\n};\nSelectWidget.propTypes = {\n  options: PropTypes.object\n};\nexport default SelectWidget;","map":{"version":3,"sources":["C:/Users/Akshaj Bansal/json parser/my-app/node_modules/@rjsf/semantic-ui/dist/es/SelectWidget/SelectWidget.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","React","_","Form","utils","PropTypes","getSemanticProps","asNumber","guessType","nums","Set","createDefaultValueOptionsForDropDown","enumOptions","enumDisabled","disabledOptions","options","map","_ref","label","value","disabled","indexOf","text","processValue","schema","type","items","undefined","has","enum","every","x","SelectWidget","_ref2","id","name","required","readonly","multiple","placeholder","autofocus","onChange","onBlur","onFocus","semanticProps","emptyValue","dropdownOptions","_onChange","event","_ref3","_onBlur","_ref4","_onFocus","_ref5","createElement","Dropdown","autoFocus","readOnly","defaultProps","semantic","inverted","fluid","selection","scrolling","upward","propTypes","object"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n/* eslint-disable react/prop-types */\nimport React from \"react\";\nimport _ from \"lodash\";\nimport { Form } from \"semantic-ui-react\";\nimport { utils } from '@rjsf/core';\nimport PropTypes from \"prop-types\";\nimport { getSemanticProps } from \"../util\";\nvar asNumber = utils.asNumber,\n    guessType = utils.guessType;\nvar nums = new Set([\"number\", \"integer\"]);\n/**\n * * Returns and creates an array format required for semantic drop down\n * @param {array} enumOptions- array of items for the dropdown\n * @param {array} enumDisabled - array of enum option values to disable\n * @returns {*}\n */\n\nfunction createDefaultValueOptionsForDropDown(enumOptions, enumDisabled) {\n  var disabledOptions = enumDisabled || [];\n  var options = []; // eslint-disable-next-line no-shadow\n\n  options = _.map(enumOptions, function (_ref) {\n    var label = _ref.label,\n        value = _ref.value;\n    return {\n      disabled: disabledOptions.indexOf(value) !== -1,\n      key: label,\n      text: label,\n      value: value\n    };\n  });\n  return options;\n}\n/**\n * This is a silly limitation in the DOM where option change event values are\n * always retrieved as strings.\n */\n\n\nvar processValue = function processValue(schema, value) {\n  // \"enum\" is a reserved word, so only \"type\" and \"items\" can be destructured\n  var type = schema.type,\n      items = schema.items;\n\n  if (value === \"\") {\n    return undefined;\n  } else if (type === \"array\" && items && nums.has(items.type)) {\n    return value.map(asNumber);\n  } else if (type === \"boolean\") {\n    return value === \"true\" || value === true;\n  } else if (type === \"number\") {\n    return asNumber(value);\n  } // If type is undefined, but an enum is present, try and infer the type from\n  // the enum values\n\n\n  if (schema.enum) {\n    if (schema.enum.every(function (x) {\n      return guessType(x) === \"number\";\n    })) {\n      return asNumber(value);\n    } else if (schema.enum.every(function (x) {\n      return guessType(x) === \"boolean\";\n    })) {\n      return value === \"true\";\n    }\n  }\n\n  return value;\n};\n\nfunction SelectWidget(_ref2) {\n  var schema = _ref2.schema,\n      id = _ref2.id,\n      options = _ref2.options,\n      name = _ref2.name,\n      required = _ref2.required,\n      disabled = _ref2.disabled,\n      readonly = _ref2.readonly,\n      value = _ref2.value,\n      multiple = _ref2.multiple,\n      placeholder = _ref2.placeholder,\n      autofocus = _ref2.autofocus,\n      onChange = _ref2.onChange,\n      onBlur = _ref2.onBlur,\n      onFocus = _ref2.onFocus;\n  var semanticProps = getSemanticProps({\n    options: options\n  });\n  var enumDisabled = options.enumDisabled,\n      enumOptions = options.enumOptions;\n  var emptyValue = multiple ? [] : \"\";\n  var dropdownOptions = createDefaultValueOptionsForDropDown(enumOptions, enumDisabled);\n\n  var _onChange = function _onChange(event, // eslint-disable-next-line no-shadow\n  _ref3) {\n    var value = _ref3.value;\n    return onChange && onChange(processValue(schema, value));\n  }; // eslint-disable-next-line no-shadow\n\n\n  var _onBlur = function _onBlur(_ref4) {\n    var value = _ref4.target.value;\n    return onBlur && onBlur(id, processValue(schema, value));\n  };\n\n  var _onFocus = function _onFocus(_ref5) {\n    var value = _ref5.target.value;\n    return onFocus && onFocus(id, processValue(schema, value));\n  };\n\n  return React.createElement(Form.Dropdown, _extends({\n    key: id,\n    name: name,\n    multiple: typeof multiple === \"undefined\" ? false : multiple,\n    value: typeof value === \"undefined\" ? emptyValue : value,\n    disabled: disabled,\n    placeholder: placeholder\n  }, semanticProps, {\n    required: required,\n    autoFocus: autofocus,\n    readOnly: readonly,\n    options: dropdownOptions,\n    onChange: _onChange,\n    onBlur: _onBlur,\n    onFocus: _onFocus\n  }));\n}\n\nSelectWidget.defaultProps = {\n  options: {\n    semantic: {\n      inverted: \"false\",\n      fluid: true,\n      selection: true,\n      scrolling: true,\n      upward: false\n    }\n  }\n};\nSelectWidget.propTypes = {\n  options: PropTypes.object\n};\nexport default SelectWidget;"]},"metadata":{},"sourceType":"module"}