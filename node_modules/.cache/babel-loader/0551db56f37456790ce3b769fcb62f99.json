{"ast":null,"code":"import { utils, withTheme } from '@rjsf/core';\nimport React from 'react';\nimport { CommandBarButton, IconButton as IconButton$1, MessageBar, MessageBarType, Text, Label, List, PrimaryButton, TextField, Checkbox, ColorPicker, getColorFromString, DatePicker, DayOfWeek, mergeStyleSets, ChoiceGroup, Slider, Dropdown, SpinButton, initializeIcons } from '@fluentui/react';\nimport _pick from 'lodash-es/pick';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure undefined\");\n}\n\nvar addIcon = {\n  iconName: \"Add\"\n};\n\nvar AddButton = function AddButton(props) {\n  return React.createElement(CommandBarButton, {\n    style: {\n      height: \"32px\"\n    },\n    iconProps: addIcon,\n    text: \"Add item\",\n    className: props.className,\n    onClick: function onClick(e) {\n      return props.onClick(e);\n    },\n    disabled: props.disabled\n  });\n};\n\nvar mappings = {\n  remove: \"Delete\",\n  \"arrow-up\": \"Up\",\n  \"arrow-down\": \"Down\"\n};\n\nvar IconButton = function (props) {\n  return React.createElement(IconButton$1, {\n    disabled: props.disabled,\n    onClick: function onClick(e) {\n      return props.onClick(e);\n    },\n    iconProps: {\n      iconName: mappings[props.icon]\n    },\n    color: \"secondary\"\n  });\n};\n\nvar rightJustify = {\n  \"float\": \"right\"\n};\nvar isMultiSelect = utils.isMultiSelect,\n    getDefaultRegistry = utils.getDefaultRegistry;\n\nvar ArrayFieldTemplate = function ArrayFieldTemplate(props) {\n  var schema = props.schema,\n      _props$registry = props.registry,\n      registry = _props$registry === void 0 ? getDefaultRegistry() : _props$registry; // TODO: update types so we don't have to cast registry as any\n\n  if (isMultiSelect(schema, registry.rootSchema)) {\n    return React.createElement(DefaultFixedArrayFieldTemplate, Object.assign({}, props));\n  } else {\n    return React.createElement(DefaultNormalArrayFieldTemplate, Object.assign({}, props));\n  }\n};\n\nvar ArrayFieldTitle = function ArrayFieldTitle(_ref) {\n  var TitleField = _ref.TitleField,\n      idSchema = _ref.idSchema,\n      title = _ref.title,\n      required = _ref.required;\n\n  if (!title) {\n    return null;\n  }\n\n  var id = idSchema.$id + \"__title\";\n  return React.createElement(TitleField, {\n    id: id,\n    title: title,\n    required: required\n  });\n};\n\nvar ArrayFieldDescription = function ArrayFieldDescription(_ref2) {\n  var DescriptionField = _ref2.DescriptionField,\n      idSchema = _ref2.idSchema,\n      description = _ref2.description;\n\n  if (!description) {\n    return null;\n  }\n\n  var id = idSchema.$id + \"__description\";\n  return React.createElement(DescriptionField, {\n    id: id,\n    description: description\n  });\n}; // Used in the two templates\n\n\nvar DefaultArrayItem = function DefaultArrayItem(props) {\n  return React.createElement(\"div\", {\n    key: props.key,\n    className: \"ms-Grid\",\n    dir: \"ltr\"\n  }, React.createElement(\"div\", {\n    className: \"ms-Grid-row\"\n  }, React.createElement(\"div\", {\n    className: \"ms-Grid-col ms-sm6 ms-md8 ms-lg9\"\n  }, React.createElement(\"div\", {\n    className: \"ms-Grid-row\"\n  }, props.children)), React.createElement(\"div\", {\n    className: \"ms-Grid-col ms-sm6 ms-md4 ms-lg3\",\n    style: {\n      textAlign: \"right\"\n    }\n  }, React.createElement(IconButton, {\n    icon: \"arrow-up\",\n    className: \"array-item-move-up\",\n    disabled: props.disabled || props.readonly || !props.hasMoveUp,\n    onClick: props.onReorderClick(props.index, props.index - 1)\n  }), React.createElement(IconButton, {\n    icon: \"arrow-down\",\n    className: \"array-item-move-down\",\n    disabled: props.disabled || props.readonly || !props.hasMoveDown,\n    onClick: props.onReorderClick(props.index, props.index + 1)\n  }), React.createElement(IconButton, {\n    icon: \"remove\",\n    className: \"array-item-remove\",\n    disabled: props.disabled || props.readonly,\n    onClick: props.onDropIndexClick(props.index)\n  }))));\n};\n\nvar DefaultFixedArrayFieldTemplate = function DefaultFixedArrayFieldTemplate(props) {\n  return React.createElement(\"fieldset\", {\n    className: props.className\n  }, React.createElement(ArrayFieldTitle, {\n    key: \"array-field-title-\" + props.idSchema.$id,\n    TitleField: props.TitleField,\n    idSchema: props.idSchema,\n    title: props.uiSchema[\"ui:title\"] || props.title,\n    required: props.required\n  }), (props.uiSchema[\"ui:description\"] || props.schema.description) && React.createElement(\"div\", {\n    className: \"field-description\",\n    key: \"field-description-\" + props.idSchema.$id\n  }, props.uiSchema[\"ui:description\"] || props.schema.description), React.createElement(\"div\", {\n    className: \"row array-item-list\",\n    key: \"array-item-list-\" + props.idSchema.$id\n  }, props.items && props.items.map(DefaultArrayItem)), props.canAdd && React.createElement(\"span\", {\n    style: rightJustify\n  }, React.createElement(AddButton, {\n    className: \"array-item-add\",\n    onClick: props.onAddClick,\n    disabled: props.disabled || props.readonly\n  })));\n};\n\nvar DefaultNormalArrayFieldTemplate = function DefaultNormalArrayFieldTemplate(props) {\n  return React.createElement(React.Fragment, null, React.createElement(ArrayFieldTitle, {\n    key: \"array-field-title-\" + props.idSchema.$id,\n    TitleField: props.TitleField,\n    idSchema: props.idSchema,\n    title: props.uiSchema[\"ui:title\"] || props.title,\n    required: props.required\n  }), (props.uiSchema[\"ui:description\"] || props.schema.description) && React.createElement(ArrayFieldDescription, {\n    key: \"array-field-description-\" + props.idSchema.$id,\n    DescriptionField: props.DescriptionField,\n    idSchema: props.idSchema,\n    description: props.uiSchema[\"ui:description\"] || props.schema.description\n  }), props.items && props.items.map(function (p) {\n    return DefaultArrayItem(p);\n  }), props.canAdd && React.createElement(\"span\", {\n    style: rightJustify\n  }, React.createElement(AddButton, {\n    className: \"array-item-add\",\n    onClick: props.onAddClick,\n    disabled: props.disabled || props.readonly\n  })));\n};\n\nvar ErrorList = function ErrorList(_ref) {\n  var errors = _ref.errors;\n  return React.createElement(React.Fragment, null, errors.map(function (error, i) {\n    return React.createElement(MessageBar, {\n      key: i,\n      messageBarType: MessageBarType.error,\n      isMultiline: false,\n      dismissButtonAriaLabel: \"Close\"\n    }, error.stack);\n  }));\n};\n\nvar DescriptionField = function DescriptionField(_ref) {\n  var description = _ref.description;\n\n  if (description) {\n    return React.createElement(Text, null, description);\n  }\n\n  return null;\n};\n\nvar styles = {\n  root: [{\n    fontSize: 24,\n    marginBottom: 20,\n    paddingBottom: 0\n  }]\n};\n\nvar TitleField = function TitleField(_ref) {\n  var title = _ref.title;\n  return React.createElement(React.Fragment, null, React.createElement(Label, {\n    styles: styles\n  }, title));\n};\n\nvar Fields = {\n  DescriptionField: DescriptionField,\n  TitleField: TitleField\n};\n\nvar FieldTemplate = function FieldTemplate(_ref) {\n  var id = _ref.id,\n      children = _ref.children,\n      _ref$rawErrors = _ref.rawErrors,\n      rawErrors = _ref$rawErrors === void 0 ? [] : _ref$rawErrors,\n      rawHelp = _ref.rawHelp,\n      rawDescription = _ref.rawDescription,\n      classNames = _ref.classNames,\n      hidden = _ref.hidden; // TODO: do this better by not returning the form-group class from master.\n\n  classNames = \"ms-Grid-col ms-sm12 \" + classNames.replace(\"form-group\", \"\");\n  return React.createElement(\"div\", {\n    className: classNames,\n    style: {\n      marginBottom: 15,\n      display: hidden ? \"none\" : undefined\n    }\n  }, children, rawDescription && React.createElement(Text, null, rawDescription), rawErrors.length > 0 && React.createElement(List, {\n    items: rawErrors\n  }), rawHelp && React.createElement(Text, {\n    id: id\n  }, rawHelp));\n};\n\nvar ObjectFieldTemplate = function ObjectFieldTemplate(_ref) {\n  var DescriptionField = _ref.DescriptionField,\n      description = _ref.description,\n      TitleField = _ref.TitleField,\n      title = _ref.title,\n      properties = _ref.properties,\n      required = _ref.required,\n      uiSchema = _ref.uiSchema,\n      idSchema = _ref.idSchema;\n  return React.createElement(React.Fragment, null, (uiSchema[\"ui:title\"] || title) && React.createElement(TitleField, {\n    id: idSchema.$id + \"-title\",\n    title: title,\n    required: required\n  }), description && React.createElement(DescriptionField, {\n    id: idSchema.$id + \"-description\",\n    description: description\n  }), React.createElement(\"div\", {\n    className: \"ms-Grid\",\n    dir: \"ltr\"\n  }, React.createElement(\"div\", {\n    className: \"ms-Grid-row\"\n  }, properties.map(function (element) {\n    return element.content;\n  }))));\n};\n\nvar SubmitButton = function () {\n  return React.createElement(\"div\", null, React.createElement(\"br\", null), React.createElement(\"div\", {\n    className: \"ms-Grid-col ms-sm12\"\n  }, React.createElement(PrimaryButton, {\n    text: \"Submit\",\n    type: \"submit\"\n  })));\n};\n\nvar allowedProps = [\"multiline\", \"resizable\", \"autoAdjustHeight\", \"underlined\", \"borderless\", \"label\", \"onRenderLabel\", \"description\", \"onRenderDescription\", \"prefix\", \"suffix\", \"onRenderPrefix\", \"onRenderSuffix\", \"iconProps\", \"defaultValue\", \"value\", \"disabled\", \"readOnly\", \"errorMessage\", \"onChange\", \"onNotifyValidationResult\", \"onGetErrorMessage\", \"deferredValidationTime\", \"className\", \"inputClassName\", \"ariaLabel\", \"validateOnFocusIn\", \"validateOnFocusOut\", \"validateOnLoad\", \"theme\", \"styles\", \"autoComplete\", \"mask\", \"maskChar\", \"maskFormat\", \"type\"];\n\nvar TextWidget = function TextWidget(_ref) {\n  var id = _ref.id,\n      placeholder = _ref.placeholder,\n      required = _ref.required,\n      readonly = _ref.readonly,\n      disabled = _ref.disabled,\n      label = _ref.label,\n      value = _ref.value,\n      onChange = _ref.onChange,\n      onBlur = _ref.onBlur,\n      onFocus = _ref.onFocus,\n      autofocus = _ref.autofocus,\n      options = _ref.options,\n      schema = _ref.schema,\n      rawErrors = _ref.rawErrors;\n\n  var _onChange = function _onChange(_ref2) {\n    var value = _ref2.target.value;\n    return onChange(value === \"\" ? options.emptyValue : value);\n  };\n\n  var _onBlur = function _onBlur(_ref3) {\n    var value = _ref3.target.value;\n    return onBlur(id, value);\n  };\n\n  var _onFocus = function _onFocus(_ref4) {\n    var value = _ref4.target.value;\n    return onFocus(id, value);\n  };\n\n  var uiProps = _pick(options.props || {}, allowedProps);\n\n  var inputType = schema.type === 'string' ? 'text' : \"\" + schema.type;\n  return React.createElement(TextField, Object.assign({\n    id: id,\n    placeholder: placeholder,\n    label: label || schema.title,\n    autoFocus: autofocus,\n    required: required,\n    disabled: disabled,\n    readOnly: readonly,\n    // TODO: once fluent-ui supports the name prop, we can add it back in here.\n    // name={name}\n    type: inputType,\n    value: value ? value : \"\",\n    onChange: _onChange,\n    onBlur: _onBlur,\n    onFocus: _onFocus,\n    errorMessage: (rawErrors || []).join(\"\\n\")\n  }, uiProps));\n};\n\nvar AltDateWidget = function (props) {\n  return React.createElement(TextWidget, Object.assign({}, props));\n};\n\nvar AltDateTimeWidget = function (props) {\n  return React.createElement(TextWidget, Object.assign({}, props));\n};\n\nvar allowedProps$1 = [\"ariaDescribedBy\", \"ariaLabel\", \"ariaPositionInSet\", \"ariaSetSize\", \"boxSide\", \"checked\", \"checkmarkIconProps\", \"className\", \"componentRef\", \"defaultChecked\", \"defaultIndeterminate\", \"disabled\", \"indeterminate\", \"inputProps\", \"keytipProps\", \"label\", \"onChange\", \"onRenderLabel\", \"styles\", \"theme\"];\n\nvar CheckboxWidget = function CheckboxWidget(props) {\n  var id = props.id,\n      value = props.value,\n      disabled = props.disabled,\n      readonly = props.readonly,\n      label = props.label,\n      schema = props.schema,\n      autofocus = props.autofocus,\n      onChange = props.onChange,\n      onBlur = props.onBlur,\n      onFocus = props.onFocus,\n      options = props.options;\n\n  var _onChange = React.useCallback(function (_ref, checked) {\n    _objectDestructuringEmpty(_ref);\n\n    onChange(checked);\n  }, []);\n\n  var _onBlur = function _onBlur(_ref2) {\n    var value = _ref2.target.value;\n    return onBlur(id, value);\n  };\n\n  var _onFocus = function _onFocus(_ref3) {\n    var value = _ref3.target.value;\n    return onFocus(id, value);\n  };\n\n  var uiProps = _pick(options.props || {}, allowedProps$1);\n\n  return React.createElement(React.Fragment, null, React.createElement(Checkbox, Object.assign({\n    id: id,\n    label: label || schema.title,\n    disabled: disabled || readonly,\n    autoFocus: autofocus,\n    onBlur: _onBlur,\n    onFocus: _onFocus,\n    checked: typeof value === \"undefined\" ? false : value,\n    onChange: _onChange\n  }, uiProps)));\n};\n\nvar styles_red = {\n  // TODO: get this color from theme.\n  color: \"rgb(164, 38, 44)\",\n  fontSize: 12,\n  fontWeight: \"normal\",\n  fontFamily: \"\\\"Segoe UI\\\", \\\"Segoe UI Web (West European)\\\", \\\"Segoe UI\\\", -apple-system, BlinkMacSystemFont, Roboto, \\\"Helvetica Neue\\\", sans-serif;\"\n};\n\nvar selectValue = function selectValue(value, selected, all) {\n  var at = all.indexOf(value);\n  var updated = selected.slice(0, at).concat(value, selected.slice(at)); // As inserting values at predefined index positions doesn't work with empty\n  // arrays, we need to reorder the updated selection to match the initial order\n\n  return updated.sort(function (a, b) {\n    return all.indexOf(a) > all.indexOf(b);\n  });\n};\n\nvar deselectValue = function deselectValue(value, selected) {\n  return selected.filter(function (v) {\n    return v !== value;\n  });\n};\n\nvar CheckboxesWidget = function CheckboxesWidget(_ref) {\n  var schema = _ref.schema,\n      label = _ref.label,\n      id = _ref.id,\n      disabled = _ref.disabled,\n      options = _ref.options,\n      value = _ref.value,\n      autofocus = _ref.autofocus,\n      readonly = _ref.readonly,\n      required = _ref.required,\n      onChange = _ref.onChange,\n      onBlur = _ref.onBlur,\n      onFocus = _ref.onFocus,\n      _ref$rawErrors = _ref.rawErrors,\n      rawErrors = _ref$rawErrors === void 0 ? [] : _ref$rawErrors;\n  var enumOptions = options.enumOptions,\n      enumDisabled = options.enumDisabled;\n\n  var _onChange = function _onChange(option) {\n    return function (_ev, checked) {\n      var all = enumOptions.map(function (_ref2) {\n        var value = _ref2.value;\n        return value;\n      });\n\n      if (checked) {\n        onChange(selectValue(option.value, value, all));\n      } else {\n        onChange(deselectValue(option.value, value));\n      }\n    };\n  };\n\n  var _onBlur = function _onBlur(_ref3) {\n    var value = _ref3.target.value;\n    return onBlur(id, value);\n  };\n\n  var _onFocus = function _onFocus(_ref4) {\n    var value = _ref4.target.value;\n    return onFocus(id, value);\n  };\n\n  var uiProps = _pick(options.props || {}, allowedProps$1);\n\n  return React.createElement(React.Fragment, null, React.createElement(Label, null, label || schema.title, required && React.createElement(\"span\", {\n    style: styles_red\n  }, \"\\xA0*\")), enumOptions.map(function (option, index) {\n    var checked = value.indexOf(option.value) !== -1;\n    var itemDisabled = enumDisabled && enumDisabled.indexOf(option.value) != -1;\n    return React.createElement(Checkbox, Object.assign({\n      id: id + \"_\" + index,\n      checked: checked,\n      label: option.label,\n      disabled: disabled || itemDisabled || readonly,\n      autoFocus: autofocus && index === 0,\n      onChange: _onChange(option),\n      onBlur: _onBlur,\n      onFocus: _onFocus,\n      key: index\n    }, uiProps));\n  }), React.createElement(\"span\", {\n    style: styles_red\n  }, (rawErrors || []).join(\"\\n\")));\n};\n\nvar styles_red$1 = {\n  // TODO: get this color from theme.\n  color: \"rgb(164, 38, 44)\",\n  fontSize: 12,\n  fontWeight: \"normal\",\n  fontFamily: \"\\\"Segoe UI\\\", \\\"Segoe UI Web (West European)\\\", \\\"Segoe UI\\\", -apple-system, BlinkMacSystemFont, Roboto, \\\"Helvetica Neue\\\", sans-serif;\"\n}; // Keys of IColorPickerProps from @fluentui/react\n\nvar allowedProps$2 = [\"componentRef\", \"color\", \"strings\", \"onChange\", \"alphaType\", \"alphaSliderHidden\", \"hexLabel\", \"redLabel\", \"greenLabel\", \"blueLabel\", \"alphaLabel\", \"className\", \"theme\", \"styles\", \"showPreview\"];\n\nvar ColorWidget = function ColorWidget(_ref) {\n  var schema = _ref.schema,\n      options = _ref.options,\n      value = _ref.value,\n      required = _ref.required,\n      label = _ref.label,\n      onChange = _ref.onChange;\n\n  var updateColor = function updateColor(ev, colorObj) {\n    onChange(colorObj.hex);\n  };\n\n  var uiProps = _pick(options.props || {}, allowedProps$2);\n\n  return React.createElement(React.Fragment, null, React.createElement(Label, null, label || schema.title, required && React.createElement(\"span\", {\n    style: styles_red$1\n  }, \"\\xA0*\")), React.createElement(ColorPicker, Object.assign({\n    color: getColorFromString(value),\n    onChange: updateColor,\n    alphaType: \"alpha\",\n    showPreview: true\n  }, uiProps)));\n};\n\nvar pad = utils.pad; // Keys of IDropdownProps from @fluentui/react\n\nvar allowedProps$3 = [\"componentRef\", \"styles\", \"theme\", \"calloutProps\", \"calendarProps\", \"textField\", \"calendarAs\", \"onSelectDate\", \"label\", \"isRequired\", \"disabled\", \"ariaLabel\", \"underlined\", \"pickerAriaLabel\", \"isMonthPickerVisible\", \"showMonthPickerAsOverlay\", \"allowTextInput\", \"disableAutoFocus\", \"placeholder\", \"today\", \"value\", \"formatDate\", \"parseDateFromString\", \"firstDayOfWeek\", \"strings\", \"highlightCurrentMonth\", \"highlightSelectedMonth\", \"showWeekNumbers\", \"firstWeekOfYear\", \"showGoToToday\", \"borderless\", \"className\", \"dateTimeFormatter\", \"minDate\", \"maxDate\", \"initialPickerDate\", \"allFocusable\", \"onAfterMenuDismiss\", \"showCloseButton\", \"tabIndex\"];\nvar controlClass = /*#__PURE__*/mergeStyleSets({\n  control: {\n    margin: \"0 0 15px 0\"\n  }\n}); // TODO: move to utils.\n// TODO: figure out a standard format for this, as well as\n// how we can get this to work with locales.\n\nvar formatDate = function formatDate(date) {\n  if (!date) {\n    return \"\";\n  }\n\n  var yyyy = pad(date.getFullYear(), 4);\n  var MM = pad(date.getMonth() + 1, 2);\n  var dd = pad(date.getDate(), 2);\n  return yyyy + \"-\" + MM + \"-\" + dd;\n};\n\nvar parseDate = function parseDate(dateStr) {\n  if (!dateStr) {\n    return undefined;\n  }\n\n  var _dateStr$split$map = dateStr.split(\"-\").map(function (e) {\n    return parseInt(e);\n  }),\n      year = _dateStr$split$map[0],\n      month = _dateStr$split$map[1],\n      day = _dateStr$split$map[2];\n\n  var dt = new Date(year, month - 1, day);\n  return dt;\n};\n\nvar DateWidget = function DateWidget(_ref) {\n  var id = _ref.id,\n      required = _ref.required,\n      label = _ref.label,\n      value = _ref.value,\n      onChange = _ref.onChange,\n      onBlur = _ref.onBlur,\n      onFocus = _ref.onFocus,\n      options = _ref.options,\n      placeholder = _ref.placeholder;\n\n  var _onSelectDate = function _onSelectDate(date) {\n    if (date) {\n      var formatted = formatDate(date);\n      formatted && onChange(formatted);\n    }\n  };\n\n  var _onBlur = function _onBlur(_ref2) {\n    var value = _ref2.target.value;\n    return onBlur(id, value);\n  };\n\n  var _onFocus = function _onFocus(_ref3) {\n    var value = _ref3.target.value;\n    return onFocus(id, value);\n  };\n\n  var uiProps = _pick(options.props || {}, allowedProps$3);\n\n  return React.createElement(DatePicker, Object.assign({\n    className: controlClass.control,\n    firstDayOfWeek: DayOfWeek.Sunday,\n    placeholder: placeholder,\n    ariaLabel: \"Select a date\",\n    isRequired: required,\n    label: label,\n    onSelectDate: _onSelectDate,\n    onBlur: _onBlur,\n    onFocus: _onFocus,\n    value: parseDate(value)\n  }, uiProps));\n};\n\nvar localToUTC = utils.localToUTC,\n    utcToLocal = utils.utcToLocal;\n\nvar DateTimeWidget = function DateTimeWidget(props) {\n  var uiProps = props.options[\"props\"] || {};\n  var value = utcToLocal(props.value);\n\n  var onChange = function onChange(value) {\n    props.onChange(localToUTC(value));\n  };\n\n  var options = _extends({}, props.options, {\n    props: _extends({\n      type: \"datetime-local\"\n    }, uiProps)\n  }); // TODO: rows and columns.\n\n\n  return React.createElement(TextWidget, Object.assign({}, props, {\n    options: options,\n    value: value,\n    onChange: onChange\n  }));\n};\n\nvar EmailWidget = function EmailWidget(props) {\n  var uiProps = props.options[\"props\"] || {};\n\n  var options = _extends({}, props.options, {\n    props: _extends({\n      type: \"email\"\n    }, uiProps)\n  });\n\n  return React.createElement(TextWidget, Object.assign({}, props, {\n    options: options,\n    value: props.value,\n    onChange: props.onChange\n  }, uiProps));\n};\n\nvar PasswordWidget = function PasswordWidget(props) {\n  var uiProps = props.options[\"props\"] || {};\n\n  var options = _extends({}, props.options, {\n    props: _extends({\n      type: \"password\"\n    }, uiProps)\n  });\n\n  return React.createElement(TextWidget, Object.assign({}, props, {\n    options: options,\n    value: props.value,\n    onChange: props.onChange\n  }, uiProps));\n};\n\nvar allowedProps$4 = [\"componentRef\", \"options\", \"defaultSelectedKey\", \"selectedKey\", \"onChange\", \"label\", \"onChanged\", \"theme\", \"styles\", \"ariaLabelledBy\"];\n\nvar RadioWidget = function RadioWidget(_ref) {\n  var id = _ref.id,\n      schema = _ref.schema,\n      options = _ref.options,\n      value = _ref.value,\n      required = _ref.required,\n      label = _ref.label,\n      onChange = _ref.onChange,\n      onBlur = _ref.onBlur,\n      onFocus = _ref.onFocus;\n  var enumOptions = options.enumOptions,\n      enumDisabled = options.enumDisabled;\n\n  function _onChange(ev, option) {\n    if (option) {\n      onChange(option.key);\n    }\n  }\n\n  var _onBlur = function _onBlur(_ref2) {\n    var value = _ref2.target.value;\n    return onBlur(id, value);\n  };\n\n  var _onFocus = function _onFocus(_ref3) {\n    var value = _ref3.target.value;\n    return onFocus(id, value);\n  };\n\n  var newOptions = enumOptions.map(function (option) {\n    return {\n      key: option.value,\n      text: option.label,\n      disabled: (enumDisabled || []).indexOf(option.value) !== -1\n    };\n  });\n\n  var uiProps = _pick(options.props || {}, allowedProps$4);\n\n  return React.createElement(ChoiceGroup, Object.assign({\n    options: newOptions,\n    onChange: _onChange,\n    onFocus: _onFocus,\n    onBlur: _onBlur,\n    label: label || schema.title,\n    required: required,\n    selectedKey: value\n  }, uiProps));\n};\n\nvar rangeSpec = utils.rangeSpec;\nvar styles_red$2 = {\n  // TODO: get this color from theme.\n  color: \"rgb(164, 38, 44)\",\n  fontSize: 12,\n  fontWeight: \"normal\",\n  fontFamily: \"\\\"Segoe UI\\\", \\\"Segoe UI Web (West European)\\\", \\\"Segoe UI\\\", -apple-system, BlinkMacSystemFont, Roboto, \\\"Helvetica Neue\\\", sans-serif;\"\n}; // Keys of ISliderProps from @fluentui/react\n\nvar allowedProps$5 = [\"componentRef\", \"styles?\", \"theme\", \"label\", \"defaultValue\", \"value\", \"min\", \"max\", \"step\", \"showValue\", \"onChange\", \"ariaLabel\", \"ariaValueText\", \"vertical\", \"disabled\", \"snapToStep\", \"className\", \"buttonProps\", \"valueFormat\", \"originFromZero\"];\n\nvar RangeWidget = function RangeWidget(_ref) {\n  var value = _ref.value,\n      readonly = _ref.readonly,\n      disabled = _ref.disabled,\n      options = _ref.options,\n      schema = _ref.schema,\n      onChange = _ref.onChange,\n      required = _ref.required,\n      label = _ref.label,\n      id = _ref.id;\n\n  var sliderProps = _extends({\n    value: value,\n    label: label,\n    id: id\n  }, rangeSpec(schema));\n\n  var _onChange = function _onChange(value) {\n    return onChange(value);\n  };\n\n  var uiProps = _pick(options.props || {}, allowedProps$5);\n\n  return React.createElement(React.Fragment, null, React.createElement(Label, null, label || schema.title, required && React.createElement(\"span\", {\n    style: styles_red$2\n  }, \"\\xA0*\")), React.createElement(Slider, Object.assign({\n    disabled: disabled || readonly,\n    min: sliderProps.min,\n    max: sliderProps.max,\n    step: sliderProps.step,\n    onChange: _onChange,\n    snapToStep: true\n  }, uiProps)));\n};\n\nvar allowedProps$6 = [\"placeHolder\", \"options\", \"onChange\", \"onChanged\", \"onRenderLabel\", \"onRenderPlaceholder\", \"onRenderPlaceHolder\", \"onRenderTitle\", \"onRenderCaretDown\", \"dropdownWidth\", \"responsiveMode\", \"defaultSelectedKeys\", \"selectedKeys\", \"multiselectDelimiter\", \"notifyOnReselect\", \"isDisabled\", \"keytipProps\", \"theme\", \"styles\", // ISelectableDroppableTextProps\n\"componentRef\", \"label\", \"ariaLabel\", \"id\", \"className\", \"defaultSelectedKey\", \"selectedKey\", \"multiSelect\", \"options\", \"onRenderContainer\", \"onRenderList\", \"onRenderItem\", \"onRenderOption\", \"onDismiss\", \"disabled\", \"required\", \"calloutProps\", \"panelProps\", \"errorMessage\", \"placeholder\", \"openOnKeyboardFocus\"];\n\nvar SelectWidget = function SelectWidget(_ref) {\n  var schema = _ref.schema,\n      id = _ref.id,\n      options = _ref.options,\n      label = _ref.label,\n      required = _ref.required,\n      disabled = _ref.disabled,\n      readonly = _ref.readonly,\n      value = _ref.value,\n      multiple = _ref.multiple,\n      onChange = _ref.onChange,\n      onBlur = _ref.onBlur,\n      onFocus = _ref.onFocus;\n  var enumOptions = options.enumOptions,\n      enumDisabled = options.enumDisabled;\n\n  var _onChange = function _onChange(_ev, item) {\n    if (!item) {\n      return;\n    }\n\n    if (multiple) {\n      var valueOrDefault = value || [];\n\n      if (item.selected) {\n        onChange([].concat(valueOrDefault, [item.key]));\n      } else {\n        onChange(valueOrDefault.filter(function (key) {\n          return key !== item.key;\n        }));\n      }\n    } else {\n      onChange(item.key);\n    }\n  };\n\n  var _onBlur = function _onBlur(e) {\n    return onBlur(id, e.target.value);\n  };\n\n  var _onFocus = function _onFocus(e) {\n    return onFocus(id, e.target.value);\n  };\n\n  var newOptions = enumOptions.map(function (option) {\n    return {\n      key: option.value,\n      text: option.label,\n      disabled: (enumDisabled || []).indexOf(option.value) !== -1\n    };\n  });\n\n  var uiProps = _pick(options.props || {}, allowedProps$6);\n\n  return React.createElement(React.Fragment, null, React.createElement(Label, null, label || schema.title), React.createElement(Dropdown, Object.assign({\n    multiSelect: multiple,\n    defaultSelectedKey: value,\n    required: required,\n    options: newOptions,\n    disabled: disabled || readonly,\n    onChange: _onChange,\n    onBlur: _onBlur,\n    onFocus: _onFocus\n  }, uiProps)));\n};\n\nvar TextareaWidget = function TextareaWidget(props) {\n  var uiProps = props.options[\"props\"] || {};\n\n  var options = _extends({}, props.options, {\n    \"props\": _extends({\n      multiline: true\n    }, uiProps)\n  }); // TODO: rows and columns.\n\n\n  return React.createElement(TextWidget, Object.assign({}, props, {\n    options: options\n  }));\n};\n\nvar rangeSpec$1 = utils.rangeSpec; // Keys of ISpinButtonProps from @fluentui/react\n\nvar allowedProps$7 = [\"ariaDescribedBy\", \"ariaLabel\", \"ariaPositionInSet\", \"ariaSetSize\", \"ariaValueNow\", \"ariaValueText\", \"className\", \"componentRef\", \"decrementButtonAriaLabel\", \"decrementButtonIcon\", \"defaultValue\", \"disabled\", \"downArrowButtonStyles\", \"getClassNames\", \"iconButtonProps\", \"iconProps\", \"incrementButtonAriaLabel\", \"incrementButtonIcon\", \"inputProps\", \"keytipProps\", \"label\", \"labelPosition\", \"max\", \"min\", \"onBlur\", \"onDecrement\", \"onFocus\", \"onIncrement\", \"onValidate\", \"precision\", \"step\", \"styles\", \"theme\", \"title\", \"upArrowButtonStyles\", \"value\"];\n\nvar UpDownWidget = function UpDownWidget(_ref) {\n  var id = _ref.id,\n      required = _ref.required,\n      readonly = _ref.readonly,\n      disabled = _ref.disabled,\n      label = _ref.label,\n      value = _ref.value,\n      onChange = _ref.onChange,\n      onBlur = _ref.onBlur,\n      onFocus = _ref.onFocus,\n      options = _ref.options,\n      schema = _ref.schema;\n\n  var _onChange = function _onChange(_ref2) {\n    var value = _ref2.target.value;\n    return onChange(Number(value));\n  };\n\n  var _rangeSpec = rangeSpec$1(schema),\n      min = _rangeSpec.min,\n      max = _rangeSpec.max,\n      step = _rangeSpec.step;\n\n  if (min === undefined) {\n    min = -1 * Infinity;\n  }\n\n  if (max === undefined) {\n    max = Infinity;\n  }\n\n  if (step === undefined) {\n    step = 1;\n  }\n\n  var _onIncrement = function _onIncrement(value) {\n    if (Number(value) + step <= max) onChange(Number(value) + step);\n  };\n\n  var _onDecrement = function _onDecrement(value) {\n    if (Number(value) - step >= min) onChange(Number(value) - step);\n  };\n\n  var _onBlur = function _onBlur(_ref3) {\n    var value = _ref3.target.value;\n    return onBlur(id, value);\n  };\n\n  var _onFocus = function _onFocus(_ref4) {\n    var value = _ref4.target.value;\n    return onFocus(id, value);\n  };\n\n  var requiredSymbol = required ? \"*\" : \"\";\n\n  var uiProps = _pick(options.props || {}, allowedProps$7);\n\n  return React.createElement(React.Fragment, null, React.createElement(Label, {\n    htmlFor: id\n  }, label + requiredSymbol), React.createElement(SpinButton, Object.assign({\n    id: id,\n    min: min,\n    max: max,\n    step: step,\n    incrementButtonAriaLabel: \"Increase value by 1\",\n    decrementButtonAriaLabel: \"Decrease value by 1\",\n    disabled: disabled || readonly,\n    value: value || value === 0 ? value : \"\",\n    onBlur: _onBlur,\n    onFocus: _onFocus,\n    onChange: _onChange,\n    onIncrement: _onIncrement,\n    onDecrement: _onDecrement,\n    \"for\": \"\"\n  }, uiProps)));\n};\n\nvar URLWidget = function URLWidget(props) {\n  var uiProps = props.options[\"props\"] || {};\n\n  var options = _extends({}, props.options, {\n    props: _extends({\n      type: \"url\"\n    }, uiProps)\n  });\n\n  return React.createElement(TextWidget, Object.assign({}, props, {\n    options: options,\n    value: props.value,\n    onChange: props.onChange\n  }, uiProps));\n};\n\nvar Widgets = {\n  AltDateWidget: AltDateWidget,\n  AltDateTimeWidget: AltDateTimeWidget,\n  CheckboxWidget: CheckboxWidget,\n  CheckboxesWidget: CheckboxesWidget,\n  ColorWidget: ColorWidget,\n  DateWidget: DateWidget,\n  DateTimeWidget: DateTimeWidget,\n  EmailWidget: EmailWidget,\n  PasswordWidget: PasswordWidget,\n  RadioWidget: RadioWidget,\n  RangeWidget: RangeWidget,\n  SelectWidget: SelectWidget,\n  TextareaWidget: TextareaWidget,\n  TextWidget: TextWidget,\n  UpDownWidget: UpDownWidget,\n  URLWidget: URLWidget\n};\nvar getDefaultRegistry$1 = utils.getDefaultRegistry;\n\nvar _getDefaultRegistry = /*#__PURE__*/getDefaultRegistry$1(),\n    fields = _getDefaultRegistry.fields,\n    widgets = _getDefaultRegistry.widgets;\n\nvar Theme = {\n  ArrayFieldTemplate: ArrayFieldTemplate,\n  fields: /*#__PURE__*/_extends({}, fields, Fields),\n  FieldTemplate: FieldTemplate,\n  ObjectFieldTemplate: ObjectFieldTemplate,\n  widgets: /*#__PURE__*/_extends({}, widgets, Widgets),\n  ErrorList: ErrorList,\n  children: /*#__PURE__*/React.createElement(SubmitButton)\n};\nvar FuiForm = /*#__PURE__*/withTheme(Theme);\ninitializeIcons();\nexport default FuiForm;\nexport { FieldTemplate, Fields, FuiForm, ObjectFieldTemplate, Theme, Widgets };","map":{"version":3,"sources":["../src/AddButton/AddButton.tsx","../src/IconButton/IconButton.tsx","../src/ArrayFieldTemplate/ArrayFieldTemplate.tsx","../src/ErrorList/ErrorList.tsx","../src/DescriptionField/DescriptionField.tsx","../src/TitleField/TitleField.tsx","../src/Fields/Fields.ts","../src/FieldTemplate/FieldTemplate.tsx","../src/ObjectFieldTemplate/ObjectFieldTemplate.tsx","../src/SubmitButton/SubmitButton.tsx","../src/TextWidget/TextWidget.tsx","../src/AltDateWidget/AltDateWidget.tsx","../src/AltDateTimeWidget/AltDateTimeWidget.tsx","../src/CheckboxWidget/CheckboxWidget.tsx","../src/CheckboxesWidget/CheckboxesWidget.tsx","../src/ColorWidget/ColorWidget.tsx","../src/DateWidget/DateWidget.tsx","../src/DateTimeWidget/DateTimeWidget.tsx","../src/EmailWidget/EmailWidget.tsx","../src/PasswordWidget/PasswordWidget.tsx","../src/RadioWidget/RadioWidget.tsx","../src/RangeWidget/RangeWidget.tsx","../src/SelectWidget/SelectWidget.tsx","../src/TextareaWidget/TextareaWidget.tsx","../src/UpDownWidget/UpDownWidget.tsx","../src/URLWidget/URLWidget.tsx","../src/Widgets/Widgets.ts","../src/Theme/Theme.ts","../src/FuiForm/FuiForm.tsx","../src/index.ts"],"names":["addIcon","iconName","AddButton","style","height","iconProps","text","className","props","onClick","disabled","mappings","remove","color","rightJustify","isMultiSelect","getDefaultRegistry","utils","ArrayFieldTemplate","schema","registry","React","ArrayFieldTitle","TitleField","idSchema","title","required","id","ArrayFieldDescription","DescriptionField","description","DefaultArrayItem","key","dir","textAlign","icon","hasMoveUp","hasMoveDown","readonly","DefaultFixedArrayFieldTemplate","$id","onAddClick","DefaultNormalArrayFieldTemplate","ErrorList","errors","i","messageBarType","MessageBarType","error","isMultiline","dismissButtonAriaLabel","styles","root","fontSize","marginBottom","paddingBottom","FieldTemplate","children","displayLabel","rawErrors","rawHelp","rawDescription","classNames","hidden","display","undefined","items","ObjectFieldTemplate","properties","uiSchema","element","type","allowedProps","TextWidget","placeholder","label","value","onChange","onBlur","onFocus","autofocus","options","_onChange","_onBlur","_onFocus","uiProps","_pick","inputType","autoFocus","readOnly","errorMessage","CheckboxWidget","checked","styles_red","fontWeight","fontFamily","selectValue","at","all","updated","selected","deselectValue","v","CheckboxesWidget","enumOptions","enumDisabled","option","itemDisabled","index","ColorWidget","updateColor","colorObj","getColorFromString","alphaType","showPreview","pad","controlClass","mergeStyleSets","control","margin","formatDate","yyyy","date","MM","dd","parseDate","year","month","day","parseInt","dt","DateWidget","_onSelectDate","formatted","firstDayOfWeek","DayOfWeek","Sunday","ariaLabel","isRequired","onSelectDate","localToUTC","utcToLocal","DateTimeWidget","EmailWidget","PasswordWidget","RadioWidget","newOptions","selectedKey","rangeSpec","RangeWidget","sliderProps","min","max","step","snapToStep","SelectWidget","multiple","valueOrDefault","item","e","multiSelect","defaultSelectedKey","TextareaWidget","multiline","UpDownWidget","Number","_onIncrement","_onDecrement","requiredSymbol","htmlFor","incrementButtonAriaLabel","decrementButtonAriaLabel","onIncrement","onDecrement","URLWidget","AltDateWidget","AltDateTimeWidget","fields","widgets","Theme","FuiForm","withTheme","initializeIcons"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport { AddButtonProps } from \"@rjsf/core\";\n\nimport { IIconProps, CommandBarButton } from \"@fluentui/react\";\n\nconst addIcon: IIconProps = { iconName: \"Add\" };\n\nconst AddButton = (props: AddButtonProps) => (\n  <CommandBarButton\n    style={{ height: \"32px\" }}\n    iconProps={addIcon}\n    text=\"Add item\"\n    className={props.className}\n    onClick={e => props.onClick(e as any)}\n    disabled={props.disabled}\n    />\n\n);\n\nexport default AddButton;\n","import React from \"react\";\n\nimport { IconButton, IIconProps } from \"@fluentui/react\";\nimport { AddButtonProps as FuiIconButtonProps } from \"@rjsf/core\";\n\nconst mappings: {[x: string]: string} = {\n  remove: \"Delete\",\n  \"arrow-up\": \"Up\",\n  \"arrow-down\": \"Down\",\n};\n\ntype IconButtonProps = FuiIconButtonProps & {\n  icon: string;\n};\n\nexport default (props: IconButtonProps) => (\n <IconButton\n    disabled={props.disabled}\n    onClick={e => props.onClick(e as any)}\n    iconProps={{\n      iconName: mappings[props.icon]\n    }}\n    color=\"secondary\" />\n);\n","import React from \"react\";\n\nimport { utils } from \"@rjsf/core\";\n\nimport { ArrayFieldTemplateProps, IdSchema } from \"@rjsf/core\";\n\nimport AddButton from \"../AddButton/AddButton\";\nimport IconButton from \"../IconButton/IconButton\";\n\nconst rightJustify = {\n  float: \"right\"\n} as React.CSSProperties;\n\nconst { isMultiSelect, getDefaultRegistry } = utils;\n\nconst ArrayFieldTemplate = (props: ArrayFieldTemplateProps) => {\n  const { schema, registry = getDefaultRegistry() } = props;\n\n  // TODO: update types so we don't have to cast registry as any\n  if (isMultiSelect(schema, (registry as any).rootSchema)) {\n    return <DefaultFixedArrayFieldTemplate {...props} />;\n  } else {\n    return <DefaultNormalArrayFieldTemplate {...props} />;\n  }\n};\n\ntype ArrayFieldTitleProps = {\n  TitleField: any;\n  idSchema: IdSchema;\n  title: string;\n  required: boolean;\n};\n\nconst ArrayFieldTitle = ({\n  TitleField,\n  idSchema,\n  title,\n  required,\n}: ArrayFieldTitleProps) => {\n  if (!title) {\n    return null;\n  }\n\n  const id = `${idSchema.$id}__title`;\n  return <TitleField id={id} title={title} required={required} />;\n};\n\ntype ArrayFieldDescriptionProps = {\n  DescriptionField: any;\n  idSchema: IdSchema;\n  description: string;\n};\n\nconst ArrayFieldDescription = ({\n  DescriptionField,\n  idSchema,\n  description,\n}: ArrayFieldDescriptionProps) => {\n  if (!description) {\n    return null;\n  }\n\n  const id = `${idSchema.$id}__description`;\n  return <DescriptionField id={id} description={description} />;\n};\n\n// Used in the two templates\nconst DefaultArrayItem = (props: any) => {\n  return (\n    <div key={props.key} className=\"ms-Grid\" dir=\"ltr\">\n      <div className=\"ms-Grid-row\">\n        <div className=\"ms-Grid-col ms-sm6 ms-md8 ms-lg9\">\n          <div className=\"ms-Grid-row\">\n          {props.children}\n          </div>\n        </div>\n        <div className=\"ms-Grid-col ms-sm6 ms-md4 ms-lg3\" style={{textAlign: \"right\"}}>\n          <IconButton\n            icon=\"arrow-up\"\n            className=\"array-item-move-up\"\n            disabled={props.disabled || props.readonly || !props.hasMoveUp}\n            onClick={props.onReorderClick(props.index, props.index - 1)}\n          />\n          <IconButton\n            icon=\"arrow-down\"\n            className=\"array-item-move-down\"\n            disabled={props.disabled || props.readonly || !props.hasMoveDown}\n            onClick={props.onReorderClick(props.index, props.index + 1)}\n          />\n          <IconButton\n            icon=\"remove\"\n            className=\"array-item-remove\"\n            disabled={props.disabled || props.readonly}\n            onClick={props.onDropIndexClick(props.index)}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst DefaultFixedArrayFieldTemplate = (props: ArrayFieldTemplateProps) => {\n  return (\n    <fieldset className={props.className}>\n      <ArrayFieldTitle\n        key={`array-field-title-${props.idSchema.$id}`}\n        TitleField={props.TitleField}\n        idSchema={props.idSchema}\n        title={props.uiSchema[\"ui:title\"] || props.title}\n        required={props.required}\n      />\n\n      {(props.uiSchema[\"ui:description\"] || props.schema.description) && (\n        <div\n          className=\"field-description\"\n          key={`field-description-${props.idSchema.$id}`}>\n          {props.uiSchema[\"ui:description\"] || props.schema.description}\n        </div>\n      )}\n\n      <div\n        className=\"row array-item-list\"\n        key={`array-item-list-${props.idSchema.$id}`}>\n        {props.items && props.items.map(DefaultArrayItem)}\n      </div>\n\n      {props.canAdd && (\n        <span style={rightJustify}>\n          <AddButton\n            className=\"array-item-add\"\n            onClick={props.onAddClick}\n            disabled={props.disabled || props.readonly}\n          />\n        </span>\n      )}\n    </fieldset>\n  );\n};\n\nconst DefaultNormalArrayFieldTemplate = (props: ArrayFieldTemplateProps) => {\n  return (\n    <>\n      <ArrayFieldTitle\n        key={`array-field-title-${props.idSchema.$id}`}\n        TitleField={props.TitleField}\n        idSchema={props.idSchema}\n        title={props.uiSchema[\"ui:title\"] || props.title}\n        required={props.required}\n      />\n\n      {(props.uiSchema[\"ui:description\"] || props.schema.description) && (\n        <ArrayFieldDescription\n          key={`array-field-description-${props.idSchema.$id}`}\n          DescriptionField={props.DescriptionField}\n          idSchema={props.idSchema}\n          description={\n            props.uiSchema[\"ui:description\"] || props.schema.description\n          }\n        />\n      )}\n\n      {props.items && props.items.map(p => DefaultArrayItem(p))}\n\n      {props.canAdd && (\n        <span style={rightJustify}>\n          <AddButton\n            className=\"array-item-add\"\n            onClick={props.onAddClick}\n            disabled={props.disabled || props.readonly}\n          />\n        </span>\n      )}\n    </>\n  );\n};\n\nexport default ArrayFieldTemplate;\n","import React from \"react\";\nimport { MessageBar, MessageBarType } from \"@fluentui/react\";\nimport { Label } from \"@fluentui/react\";\nimport { ErrorListProps } from \"@rjsf/core\";\nconst styles = {\n  root: [\n    {\n      fontSize: 24,\n    },\n  ],\n};\n\nconst ErrorList = ({ errors }: ErrorListProps) => (\n  <>\n    {errors.map((error, i) => {\n      return (\n        <MessageBar\n          key={i}\n          messageBarType={MessageBarType.error}\n          isMultiline={false}\n          dismissButtonAriaLabel=\"Close\">\n          {error.stack}\n        </MessageBar>\n      );\n    })}\n  </>\n);\n\nexport default ErrorList;\n","import React from \"react\";\n\nimport { FieldProps } from \"@rjsf/core\";\n\nimport { Text } from \"@fluentui/react\";\n\nconst DescriptionField = ({ description }: FieldProps) => {\n  if (description) {\n    return <Text>{description}</Text>;\n  }\n\n  return null;\n};\n\nexport default DescriptionField;\n","import React from \"react\";\nimport { FieldProps } from \"@rjsf/core\";\nimport { Label } from \"@fluentui/react\";\n\nconst styles = {\n  root: [\n    {\n      fontSize: 24,\n      marginBottom: 20,\n      paddingBottom: 0\n    },\n  ],\n};\n\nconst TitleField = ({ title }: FieldProps) => (\n  <>\n    <Label styles={styles}>{title}</Label>\n  </>\n);\n\nexport default TitleField;\n","import DescriptionField from '../DescriptionField/DescriptionField';\nimport TitleField from '../TitleField/TitleField';\n\nexport default {\n  DescriptionField,\n  TitleField,\n};\n","import React from \"react\";\nimport { FieldTemplateProps } from \"@rjsf/core\";\nimport { Text, Label } from \"@fluentui/react\";\nimport { List } from \"@fluentui/react\";\n\nconst styles = {\n  root: [\n    {\n      fontSize: 24,\n    },\n  ],\n};\n\nconst FieldTemplate = ({\n  id,\n  children,\n  displayLabel,\n  rawErrors = [],\n  rawHelp,\n  rawDescription,\n  classNames,\n  label,\n  required,\n  hidden,\n}: FieldTemplateProps) => {\n  // TODO: do this better by not returning the form-group class from master.\n  classNames = \"ms-Grid-col ms-sm12 \" + classNames.replace(\"form-group\", \"\");\n  return (\n    <div\n      className={classNames}\n      style={{ marginBottom: 15, display: hidden ? \"none\" : undefined }}>\n      {children}\n      {/* {displayLabel && <Label>\n        {label}\n        {required && <span style={{color: \"rgb(164, 38, 44)\", fontSize: \"12px\", fontWeight: \"normal\"}}>*</span>}\n      </Label>} */}\n      {rawDescription && <Text>{rawDescription}</Text>}\n      {rawErrors.length > 0 && <List items={rawErrors} />}\n      {rawHelp && <Text id={id}>{rawHelp}</Text>}\n    </div>\n  );\n};\n\nexport default FieldTemplate;\n","import React from \"react\";\nimport { ObjectFieldTemplateProps } from \"@rjsf/core\";\n\nconst ObjectFieldTemplate = ({\n  DescriptionField,\n  description,\n  TitleField,\n  title,\n  properties,\n  required,\n  uiSchema,\n  idSchema,\n}: ObjectFieldTemplateProps) => {\n  return (\n    <>\n      {(uiSchema[\"ui:title\"] || title) && (\n        <TitleField\n          id={`${idSchema.$id}-title`}\n          title={title}\n          required={required}\n        />\n      )}\n      {description && (\n        <DescriptionField\n          id={`${idSchema.$id}-description`}\n          description={description}\n        />\n      )}\n\n      <div className=\"ms-Grid\" dir=\"ltr\">\n        <div className=\"ms-Grid-row\">\n          {properties.map((element) => element.content)}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ObjectFieldTemplate;\n","import React from \"react\";\nimport { PrimaryButton } from \"@fluentui/react\";\nexport default () => (\n  <div>\n    <br />\n    <div className=\"ms-Grid-col ms-sm12\">\n      <PrimaryButton text=\"Submit\" type=\"submit\" />\n    </div>\n  </div>\n);\n","import React from \"react\";\nimport { TextField } from \"@fluentui/react\";\nimport { WidgetProps } from \"@rjsf/core\";\nimport _pick from \"lodash/pick\";\n\n// Keys of ITextFieldProps from @fluentui/react\nconst allowedProps = [\n  \"multiline\",\n  \"resizable\",\n  \"autoAdjustHeight\",\n  \"underlined\",\n  \"borderless\",\n  \"label\",\n  \"onRenderLabel\",\n  \"description\",\n  \"onRenderDescription\",\n  \"prefix\",\n  \"suffix\",\n  \"onRenderPrefix\",\n  \"onRenderSuffix\",\n  \"iconProps\",\n  \"defaultValue\",\n  \"value\",\n  \"disabled\",\n  \"readOnly\",\n  \"errorMessage\",\n  \"onChange\",\n  \"onNotifyValidationResult\",\n  \"onGetErrorMessage\",\n  \"deferredValidationTime\",\n  \"className\",\n  \"inputClassName\",\n  \"ariaLabel\",\n  \"validateOnFocusIn\",\n  \"validateOnFocusOut\",\n  \"validateOnLoad\",\n  \"theme\",\n  \"styles\",\n  \"autoComplete\",\n  \"mask\",\n  \"maskChar\",\n  \"maskFormat\",\n  \"type\",\n];\n\nconst TextWidget = ({\n  id,\n  placeholder,\n  required,\n  readonly,\n  disabled,\n  label,\n  value,\n  onChange,\n  onBlur,\n  onFocus,\n  autofocus,\n  options,\n  schema,\n  rawErrors,\n}: WidgetProps) => {\n  const _onChange = ({\n    target: { value },\n  }: React.ChangeEvent<HTMLInputElement>) =>\n    onChange(value === \"\" ? options.emptyValue : value);\n  const _onBlur = ({ target: { value } }: React.FocusEvent<HTMLInputElement>) =>\n    onBlur(id, value);\n  const _onFocus = ({\n    target: { value },\n  }: React.FocusEvent<HTMLInputElement>) => onFocus(id, value);\n\n  const uiProps = _pick(options.props || {}, allowedProps);\n  const inputType = schema.type === 'string' ?  'text' : `${schema.type}`\n\n  return (\n    <TextField\n      id={id}\n      placeholder={placeholder}\n      label={label || schema.title}\n      autoFocus={autofocus}\n      required={required}\n      disabled={disabled}\n      readOnly={readonly}\n      // TODO: once fluent-ui supports the name prop, we can add it back in here.\n      // name={name}\n      type={inputType as string}\n      value={value ? value : \"\"}\n      onChange={_onChange as any}\n      onBlur={_onBlur}\n      onFocus={_onFocus}\n      errorMessage={(rawErrors || []).join(\"\\n\")}\n      {...uiProps}\n    />\n  );\n};\n\nexport default TextWidget;\n","import React from \"react\";\nimport { WidgetProps } from \"@rjsf/core\";\nimport TextWidget from '../TextWidget';\n\nexport default (props: WidgetProps) => <TextWidget {...props} />;","import React from \"react\";\nimport { WidgetProps } from \"@rjsf/core\";\nimport TextWidget from '../TextWidget';\n\nexport default (props: WidgetProps) => <TextWidget {...props} />;","import React from \"react\";\nimport { Checkbox, Label } from \"@fluentui/react\";\nimport { WidgetProps } from \"@rjsf/core\";\nimport _pick from \"lodash/pick\";\n\n// Keys of ICheckboxProps from @fluentui/react\nexport const allowedProps = [\n  \"ariaDescribedBy\",\n  \"ariaLabel\",\n  \"ariaPositionInSet\",\n  \"ariaSetSize\",\n  \"boxSide\",\n  \"checked\",\n  \"checkmarkIconProps\",\n  \"className\",\n  \"componentRef\",\n  \"defaultChecked\",\n  \"defaultIndeterminate\",\n  \"disabled\",\n  \"indeterminate\",\n  \"inputProps\",\n  \"keytipProps\",\n  \"label\",\n  \"onChange\",\n  \"onRenderLabel\",\n  \"styles\",\n  \"theme\"\n];\n\nconst CheckboxWidget = (props: WidgetProps) => {\n  const {\n    id,\n    value,\n    // required,\n    disabled,\n    readonly,\n    label,\n    schema,\n    autofocus,\n    onChange,\n    onBlur,\n    onFocus,\n    options,\n  } = props;\n\n  const _onChange = React.useCallback(({}, checked?: boolean): void => {\n    onChange(checked);\n  }, []);\n\n  const _onBlur = ({\n    target: { value },\n  }: React.FocusEvent<HTMLButtonElement>) => onBlur(id, value);\n  const _onFocus = ({\n    target: { value },\n  }: React.FocusEvent<HTMLButtonElement>) => onFocus(id, value);\n\n  const uiProps = _pick(options.props || {}, allowedProps);\n\n  return (\n    <>\n        <Checkbox\n          id={id}\n          label={label || schema.title}\n          disabled={disabled || readonly}\n          autoFocus={autofocus}\n          onBlur={_onBlur}\n          onFocus={_onFocus}\n          checked={typeof value === \"undefined\" ? false : value}\n          onChange={_onChange}\n          {...uiProps}\n        />\n    </>\n  );\n};\n\nexport default CheckboxWidget;\n","import React from \"react\";\nimport { Checkbox, Label } from \"@fluentui/react\";\nimport { WidgetProps } from \"@rjsf/core\";\nimport { allowedProps } from \"../CheckboxWidget\";\nimport _pick from \"lodash/pick\";\n\nconst styles_red = {\n      // TODO: get this color from theme.\n      color: \"rgb(164, 38, 44)\",\n      fontSize: 12,\n      fontWeight: \"normal\" as any,\n      fontFamily: `\"Segoe UI\", \"Segoe UI Web (West European)\", \"Segoe UI\", -apple-system, BlinkMacSystemFont, Roboto, \"Helvetica Neue\", sans-serif;`\n    };\n\nconst selectValue = (value: any, selected: any, all: any) => {\n  const at = all.indexOf(value);\n  const updated = selected.slice(0, at).concat(value, selected.slice(at));\n\n  // As inserting values at predefined index positions doesn't work with empty\n  // arrays, we need to reorder the updated selection to match the initial order\n  return updated.sort((a: any, b: any) => all.indexOf(a) > all.indexOf(b));\n};\n\nconst deselectValue = (value: any, selected: any) => {\n  return selected.filter((v: any) => v !== value);\n};\n\nconst CheckboxesWidget = ({\n  schema,\n  label,\n  id,\n  disabled,\n  options,\n  value,\n  autofocus,\n  readonly,\n  required,\n  onChange,\n  onBlur,\n  onFocus,\n  rawErrors = [],\n}: WidgetProps) => {\n  const { enumOptions, enumDisabled } = options;\n\n  const _onChange = (option: any) => (\n    _ev?: React.FormEvent<HTMLElement>,\n    checked?: boolean\n  ) => {\n    const all = (enumOptions as any).map(({ value }: any) => value);\n\n    if (checked) {\n      onChange(selectValue(option.value, value, all));\n    } else {\n      onChange(deselectValue(option.value, value));\n    }\n  };\n\n  const _onBlur = ({\n    target: { value },\n  }: React.FocusEvent<HTMLButtonElement>) => onBlur(id, value);\n\n  const _onFocus = ({\n    target: { value },\n  }: React.FocusEvent<HTMLButtonElement>) => onFocus(id, value);\n\n  const uiProps = _pick(options.props || {}, allowedProps);\n\n  return (\n    <>\n      <Label>\n        {label || schema.title}\n        {required && <span style={styles_red}>&nbsp;*</span>}\n      </Label>\n      {(enumOptions as any).map((option: any, index: number) => {\n        const checked = value.indexOf(option.value) !== -1;\n        const itemDisabled =\n          enumDisabled && (enumDisabled as any).indexOf(option.value) != -1;\n        return (\n          <Checkbox\n            id={`${id}_${index}`}\n            checked={checked}\n            label={option.label}\n            disabled={disabled || itemDisabled || readonly}\n            autoFocus={autofocus && index === 0}\n            onChange={_onChange(option)}\n            onBlur={_onBlur}\n            onFocus={_onFocus}\n            key={index}\n            {...uiProps}\n          />\n        );\n      })}\n      <span style={styles_red}>{(rawErrors || []).join(\"\\n\")}</span>\n    </>\n  );\n};\n\nexport default CheckboxesWidget;\n","import React from \"react\";\nimport {\n  ColorPicker,\n  IColorPickerProps,\n  IColor,\n  IColorPickerStyles,\n  getColorFromString,\n  Label,\n} from \"@fluentui/react\";\nimport { WidgetProps } from \"@rjsf/core\";\nimport _pick from \"lodash/pick\";\nimport { useConstCallback } from \"@uifabric/react-hooks\";\n\nconst styles_red = {\n  // TODO: get this color from theme.\n  color: \"rgb(164, 38, 44)\",\n  fontSize: 12,\n  fontWeight: \"normal\" as any,\n  fontFamily: `\"Segoe UI\", \"Segoe UI Web (West European)\", \"Segoe UI\", -apple-system, BlinkMacSystemFont, Roboto, \"Helvetica Neue\", sans-serif;`,\n};\n\n// Keys of IColorPickerProps from @fluentui/react\nconst allowedProps = [\n  \"componentRef\",\n  \"color\",\n  \"strings\",\n  \"onChange\",\n  \"alphaType\",\n  \"alphaSliderHidden\",\n  \"hexLabel\",\n  \"redLabel\",\n  \"greenLabel\",\n  \"blueLabel\",\n  \"alphaLabel\",\n  \"className\",\n  \"theme\",\n  \"styles\",\n  \"showPreview\",\n];\n\nconst ColorWidget = ({\n  id,\n  schema,\n  options,\n  value,\n  required,\n  disabled,\n  readonly,\n  label,\n  onChange,\n  onBlur,\n  onFocus,\n}: WidgetProps) => {\n  const { enumOptions, enumDisabled } = options;\n\n  const updateColor = (ev: any, colorObj: IColor) => {\n    onChange(colorObj.hex);\n  };\n\n  const uiProps = _pick(options.props || {}, allowedProps);\n\n  return (\n    <>\n      <Label>\n        {label || schema.title}\n        {required && <span style={styles_red}>&nbsp;*</span>}\n      </Label>\n      <ColorPicker\n        color={getColorFromString(value) as any}\n        onChange={updateColor}\n        alphaType={\"alpha\"}\n        showPreview={true}\n        {...uiProps}\n      />\n    </>\n  );\n};\nexport default ColorWidget;\n","import React from \"react\";\nimport { WidgetProps } from \"@rjsf/core\";\nimport {\n  DatePicker,\n  DayOfWeek,\n  IDatePickerStrings,\n  mergeStyleSets,\n} from \"@fluentui/react\";\nimport _pick from \"lodash/pick\";\nimport { utils } from \"@rjsf/core\";\n\nconst { pad } = utils;\n\n// Keys of IDropdownProps from @fluentui/react\nconst allowedProps = [\n  \"componentRef\",\n  \"styles\",\n  \"theme\",\n  \"calloutProps\",\n  \"calendarProps\",\n  \"textField\",\n  \"calendarAs\",\n  \"onSelectDate\",\n  \"label\",\n  \"isRequired\",\n  \"disabled\",\n  \"ariaLabel\",\n  \"underlined\",\n  \"pickerAriaLabel\",\n  \"isMonthPickerVisible\",\n  \"showMonthPickerAsOverlay\",\n  \"allowTextInput\",\n  \"disableAutoFocus\",\n  \"placeholder\",\n  \"today\",\n  \"value\",\n  \"formatDate\",\n  \"parseDateFromString\",\n  \"firstDayOfWeek\",\n  \"strings\",\n  \"highlightCurrentMonth\",\n  \"highlightSelectedMonth\",\n  \"showWeekNumbers\",\n  \"firstWeekOfYear\",\n  \"showGoToToday\",\n  \"borderless\",\n  \"className\",\n  \"dateTimeFormatter\",\n  \"minDate\",\n  \"maxDate\",\n  \"initialPickerDate\",\n  \"allFocusable\",\n  \"onAfterMenuDismiss\",\n  \"showCloseButton\",\n  \"tabIndex\"\n];\n\nconst controlClass = mergeStyleSets({\n  control: {\n    margin: \"0 0 15px 0\",\n  },\n});\n\n// TODO: move to utils.\n// TODO: figure out a standard format for this, as well as\n// how we can get this to work with locales.\nconst formatDate = (date?: Date) => {\n  if (!date) {\n    return \"\";\n  }\n  const yyyy = pad(date.getFullYear(), 4);\t\n  const MM = pad(date.getMonth() + 1, 2);\t\n  const dd = pad(date.getDate(), 2);\n  return `${yyyy}-${MM}-${dd}`\n}\n\nconst parseDate = (dateStr?: string) => {\n  if (!dateStr) {\n    return undefined;\n  }\n  const [year, month, day] = dateStr.split(\"-\").map(e => parseInt(e));\n  var dt = new Date(year, month - 1, day);\n  return dt;\n}\n\nconst DateWidget = ({\n  id,\n  required,\n  readonly,\n  disabled,\n  label,\n  value,\n  onChange,\n  onBlur,\n  onFocus,\n  autofocus,\n  options,\n  placeholder,\n  schema,\n  rawErrors,\n}: WidgetProps) => {\n  const _onSelectDate = (date: Date | null | undefined) => {\n    if (date) {\n      const formatted = formatDate(date);\n      formatted && onChange(formatted);\n    }\n  }\n  const _onBlur = ({ target: { value } }: React.FocusEvent<HTMLInputElement>) =>\n    onBlur(id, value);\n  const _onFocus = ({\n    target: { value },\n  }: React.FocusEvent<HTMLInputElement>) => onFocus(id, value);\n\n  const uiProps = _pick(options.props || {}, allowedProps);\n  return (\n    <DatePicker\n      className={controlClass.control}\n      firstDayOfWeek={DayOfWeek.Sunday}\n      placeholder={placeholder}\n      ariaLabel=\"Select a date\"\n      isRequired={required}\n      label={label}\n      onSelectDate={_onSelectDate}\n      onBlur={_onBlur}\n      onFocus={_onFocus}\n      value={parseDate(value)}\n      {...uiProps}\n    />\n  );\n};\n\nexport default DateWidget;\n","import React from \"react\";\n\nimport { WidgetProps, utils } from \"@rjsf/core\";\n\nimport TextWidget from \"../TextWidget\";\n\nconst { localToUTC, utcToLocal } = utils;\n\n\nconst DateTimeWidget = (props: WidgetProps) => {\n  const uiProps: any = props.options[\"props\"] || {};\n\n  const value = utcToLocal(props.value);\n  const onChange = (value: any) => {\n    props.onChange(localToUTC(value));\n  };\n  let options = {\n    ...props.options,\n    props: {\n      type: \"datetime-local\",\n      ...uiProps,\n    },\n  };\n  // TODO: rows and columns.\n  return <TextWidget {...props} options={options} value={value} onChange={onChange} />;\n};\n\nexport default DateTimeWidget;\n","import React from \"react\";\n\nimport { WidgetProps } from \"@rjsf/core\";\n\nimport TextWidget from \"../TextWidget\";\n\nconst EmailWidget = (props: WidgetProps) => {\n  const uiProps: any = props.options[\"props\"] || {};\n  let options = {\n    ...props.options,\n    props: {\n      type: \"email\",\n      ...uiProps,\n    },\n  };\n  return (\n    <TextWidget\n      {...props}\n      options={options}\n      value={props.value}\n      onChange={props.onChange}\n      {...uiProps}\n    />\n  );\n};\n\nexport default EmailWidget;\n","import React from \"react\";\n\nimport { WidgetProps, utils } from \"@rjsf/core\";\n\nimport TextWidget from \"../TextWidget\";\n\nconst PasswordWidget = (props: WidgetProps) => {\n  const uiProps: any = props.options[\"props\"] || {};\n  let options = {\n    ...props.options,\n    props: {\n      type: \"password\",\n      ...uiProps,\n    },\n  };\n  return (\n    <TextWidget\n      {...props}\n      options={options}\n      value={props.value}\n      onChange={props.onChange}\n      {...uiProps}\n    />\n  );\n};\n\nexport default PasswordWidget;\n","import React from \"react\";\nimport { ChoiceGroup, IChoiceGroupOption } from \"@fluentui/react\";\nimport { WidgetProps } from \"@rjsf/core\";\nimport _pick from \"lodash/pick\";\n\n// Keys of IChoiceGroupProps from @fluentui/react\nconst allowedProps = [\n  \"componentRef\",\n  \"options\",\n  \"defaultSelectedKey\",\n  \"selectedKey\",\n  \"onChange\",\n  \"label\",\n  \"onChanged\",\n  \"theme\",\n  \"styles\",\n  \"ariaLabelledBy\"\n];\n\nconst RadioWidget = ({\n  id,\n  schema,\n  options,\n  value,\n  required,\n  disabled,\n  readonly,\n  label,\n  onChange,\n  onBlur,\n  onFocus,\n}: WidgetProps) => {\n  const { enumOptions, enumDisabled } = options;\n\n  function _onChange(\n    ev?: React.FormEvent<HTMLElement | HTMLInputElement>,\n    option?: IChoiceGroupOption\n  ): void {\n    if (option) {\n      onChange(option.key);\n    }\n  }\n\n  const _onBlur = ({ target: { value } }: React.FocusEvent<HTMLInputElement>) =>\n    onBlur(id, value);\n  const _onFocus = ({\n    target: { value },\n  }: React.FocusEvent<HTMLInputElement>) => onFocus(id, value);\n\n  const row = options ? options.inline : false;\n\n  const newOptions = (enumOptions as {value: any, label: any}[]).map(option => ({\n    key: option.value,\n    text: option.label,\n    disabled: (enumDisabled as any[] || []).indexOf(option.value) !== -1\n  }));\n\n  const uiProps = _pick(options.props || {}, allowedProps);\n  return (\n    <ChoiceGroup\n      options={newOptions as any}\n      onChange={_onChange}\n      onFocus={_onFocus}\n      onBlur={_onBlur}\n      label={label || schema.title}\n      required={required}\n      selectedKey={value}\n      {...uiProps}\n    />\n  );\n};\n\nexport default RadioWidget;\n","import React from \"react\";\nimport { Slider, Label } from \"@fluentui/react\";\n\nimport { utils } from \"@rjsf/core\";\nimport { WidgetProps } from \"@rjsf/core\";\nimport _pick from \"lodash/pick\";\n\nconst { rangeSpec } = utils;\n\nconst styles_red = {\n  // TODO: get this color from theme.\n  color: \"rgb(164, 38, 44)\",\n  fontSize: 12,\n  fontWeight: \"normal\" as any,\n  fontFamily: `\"Segoe UI\", \"Segoe UI Web (West European)\", \"Segoe UI\", -apple-system, BlinkMacSystemFont, Roboto, \"Helvetica Neue\", sans-serif;`,\n};\n\n// Keys of ISliderProps from @fluentui/react\nconst allowedProps = [\n  \"componentRef\",\n  \"styles?\",\n  \"theme\",\n  \"label\",\n  \"defaultValue\",\n  \"value\",\n  \"min\",\n  \"max\",\n  \"step\",\n  \"showValue\",\n  \"onChange\",\n  \"ariaLabel\",\n  \"ariaValueText\",\n  \"vertical\",\n  \"disabled\",\n  \"snapToStep\",\n  \"className\",\n  \"buttonProps\",\n  \"valueFormat\",\n  \"originFromZero\",\n];\n\nconst RangeWidget = ({\n  value,\n  readonly,\n  disabled,\n  onBlur,\n  onFocus,\n  options,\n  schema,\n  //formContext,\n  //registry,\n  //rawErrors,\n  onChange,\n  required,\n  label,\n  id,\n}: WidgetProps) => {\n  let sliderProps = { value, label, id, ...rangeSpec(schema) };\n\n  const _onChange = (value: number) => onChange(value);\n\n  const uiProps = _pick(options.props || {}, allowedProps);\n  return (\n    <>\n      <Label>\n        {label || schema.title}\n        {required && <span style={styles_red}>&nbsp;*</span>}\n      </Label>\n      <Slider\n        disabled={disabled || readonly}\n        min={sliderProps.min}\n        max={sliderProps.max}\n        step={sliderProps.step}\n        onChange={_onChange}\n        snapToStep\n        {...uiProps}\n      />\n    </>\n  );\n};\n\nexport default RangeWidget;\n","import React, { useState } from \"react\";\nimport { Label, Dropdown, IDropdownOption } from \"@fluentui/react\";\nimport { WidgetProps } from \"@rjsf/core\";\nimport _pick from \"lodash/pick\";\n\n// Keys of IDropdownProps from @fluentui/react\nconst allowedProps = [\n  \"placeHolder\",\n  \"options\",\n  \"onChange\",\n  \"onChanged\",\n  \"onRenderLabel\",\n  \"onRenderPlaceholder\",\n  \"onRenderPlaceHolder\",\n  \"onRenderTitle\",\n  \"onRenderCaretDown\",\n  \"dropdownWidth\",\n  \"responsiveMode\",\n  \"defaultSelectedKeys\",\n  \"selectedKeys\",\n  \"multiselectDelimiter\",\n  \"notifyOnReselect\",\n  \"isDisabled\",\n  \"keytipProps\",\n  \"theme\",\n  \"styles\",\n\n  // ISelectableDroppableTextProps\n  \"componentRef\",\n  \"label\",\n  \"ariaLabel\",\n  \"id\",\n  \"className\",\n  \"defaultSelectedKey\",\n  \"selectedKey\",\n  \"multiSelect\",\n  \"options\",\n  \"onRenderContainer\",\n  \"onRenderList\",\n  \"onRenderItem\",\n  \"onRenderOption\",\n  \"onDismiss\",\n  \"disabled\",\n  \"required\",\n  \"calloutProps\",\n  \"panelProps\",\n  \"errorMessage\",\n  \"placeholder\",\n  \"openOnKeyboardFocus\"\n];\n\nconst SelectWidget = ({\n  schema,\n  id,\n  options,\n  label,\n  required,\n  disabled,\n  readonly,\n  value,\n  multiple,\n  autofocus,\n  onChange,\n  onBlur,\n  onFocus,\n}: WidgetProps) => {\n  const { enumOptions, enumDisabled } = options;\n\n  const _onChange = (\n    _ev?: React.FormEvent<HTMLElement>,\n    item?: IDropdownOption\n  ) => {\n    if (!item) {\n      return;\n    }\n    if (multiple) {\n      const valueOrDefault = value || [];\n      if (item.selected) {\n        onChange([...valueOrDefault, item.key]);\n      } else {\n        onChange(valueOrDefault.filter((key: any) => key !== item.key));\n      }\n    } else {\n      onChange(item.key);\n    }\n  };\n  const _onBlur = (e: any) => onBlur(id, e.target.value);\n\n  const _onFocus = (e: any) => onFocus(id, e.target.value);\n\n  const newOptions = (enumOptions as {value: any, label: any}[]).map(option => ({\n    key: option.value,\n    text: option.label,\n    disabled: (enumDisabled as any[] || []).indexOf(option.value) !== -1\n  }));\n\n  const uiProps = _pick(options.props || {}, allowedProps);\n  return (\n    <>\n      <Label>{label || schema.title}</Label>\n      <Dropdown\n        multiSelect={multiple}\n        defaultSelectedKey={value}\n        required={required}\n        options={newOptions}\n        disabled={disabled || readonly}\n        onChange={_onChange}\n        onBlur={_onBlur}\n        onFocus={_onFocus}\n        {...uiProps}\n      />\n    </>\n  );\n};\n\nexport default SelectWidget;\n","import React from \"react\";\n\nimport { WidgetProps } from \"@rjsf/core\";\n\nimport TextWidget from '../TextWidget';\n\nconst TextareaWidget = (props: WidgetProps) => {\n  const uiProps: any = props.options[\"props\"] || {};\n  let options = {\n    ...props.options,\n    \"props\": {\n      multiline: true,\n      ...uiProps\n    }\n  };\n  // TODO: rows and columns.\n  return (\n    <TextWidget {...props} options={options} />\n  );\n}\n\nexport default TextareaWidget;","import React from \"react\";\nimport { Label } from \"@fluentui/react\";\nimport { SpinButton } from \"@fluentui/react\";\nimport { WidgetProps } from \"@rjsf/core\";\nimport _pick from \"lodash/pick\";\nimport { utils } from \"@rjsf/core\";\n\nconst { rangeSpec } = utils;\n\n// Keys of ISpinButtonProps from @fluentui/react\nconst allowedProps = [\n  \"ariaDescribedBy\",\n  \"ariaLabel\",\n  \"ariaPositionInSet\",\n  \"ariaSetSize\",\n  \"ariaValueNow\",\n  \"ariaValueText\",\n  \"className\",\n  \"componentRef\",\n  \"decrementButtonAriaLabel\",\n  \"decrementButtonIcon\",\n  \"defaultValue\",\n  \"disabled\",\n  \"downArrowButtonStyles\",\n  \"getClassNames\",\n  \"iconButtonProps\",\n  \"iconProps\",\n  \"incrementButtonAriaLabel\",\n  \"incrementButtonIcon\",\n  \"inputProps\",\n  \"keytipProps\",\n  \"label\",\n  \"labelPosition\",\n  \"max\",\n  \"min\",\n  \"onBlur\",\n  \"onDecrement\",\n  \"onFocus\",\n  \"onIncrement\",\n  \"onValidate\",\n  \"precision\",\n  \"step\",\n  \"styles\",\n  \"theme\",\n  \"title\",\n  \"upArrowButtonStyles\",\n  \"value\",\n];\n\nconst UpDownWidget = ({\n  id,\n  required,\n  readonly,\n  disabled,\n  label,\n  value,\n  onChange,\n  onBlur,\n  onFocus,\n  options,\n  schema,\n}: // autofocus,\nWidgetProps) => {\n  const _onChange = ({\n    target: { value },\n  }: React.ChangeEvent<HTMLInputElement>) => onChange(Number(value));\n\n  let { min, max, step } = rangeSpec(schema);\n  if (min === undefined) {\n    min = -1 * Infinity;\n  }\n  if (max === undefined) {\n    max = Infinity;\n  }\n  if (step === undefined) {\n    step = 1;\n  }\n\n  const _onIncrement = (value: string) => {\n    if (Number(value) + step! <= max!) onChange(Number(value) + step!);\n  };\n\n  const _onDecrement = (value: string) => {\n    if (Number(value) - step! >= min!) onChange(Number(value) - step!);\n  };\n\n  const _onBlur = ({ target: { value } }: React.FocusEvent<HTMLInputElement>) =>\n    onBlur(id, value);\n  const _onFocus = ({\n    target: { value },\n  }: React.FocusEvent<HTMLInputElement>) => onFocus(id, value);\n\n  const requiredSymbol = required ? \"*\" : \"\";\n\n  const uiProps = _pick(options.props || {}, allowedProps);\n\n  return (\n    <>\n      {/* TODO: add label for= attribute */}\n      <Label htmlFor={id}>{label + requiredSymbol}</Label>\n      <SpinButton\n        id={id}\n        min={min}\n        max={max}\n        step={step}\n        incrementButtonAriaLabel={\"Increase value by 1\"}\n        decrementButtonAriaLabel={\"Decrease value by 1\"}\n        disabled={disabled || readonly}\n        value={value || value === 0 ? value : \"\"}\n        onBlur={_onBlur}\n        onFocus={_onFocus}\n        onChange={_onChange}\n        onIncrement={_onIncrement}\n        onDecrement={_onDecrement}\n        for=\"\"\n        {...uiProps}\n      />\n    </>\n  );\n};\n\nexport default UpDownWidget;\n","import React from \"react\";\n\nimport { WidgetProps, utils } from \"@rjsf/core\";\n\nimport TextWidget from \"../TextWidget\";\n\nconst URLWidget = (props: WidgetProps) => {\n  const uiProps: any = props.options[\"props\"] || {};\n  let options = {\n    ...props.options,\n    props: {\n      type: \"url\",\n      ...uiProps,\n    },\n  };\n  return (\n    <TextWidget\n      {...props}\n      options={options}\n      value={props.value}\n      onChange={props.onChange}\n      {...uiProps}\n    />\n  );\n};\n\nexport default URLWidget;\n","import AltDateWidget from \"../AltDateWidget/AltDateWidget\";\nimport AltDateTimeWidget from \"../AltDateTimeWidget/AltDateTimeWidget\";\nimport CheckboxWidget from \"../CheckboxWidget/CheckboxWidget\";\nimport CheckboxesWidget from \"../CheckboxesWidget/CheckboxesWidget\";\nimport ColorWidget from \"../ColorWidget/ColorWidget\";\nimport DateWidget from \"../DateWidget/DateWidget\";\nimport DateTimeWidget from \"../DateTimeWidget/DateTimeWidget\";\nimport EmailWidget from \"../EmailWidget/EmailWidget\";\nimport PasswordWidget from \"../PasswordWidget/PasswordWidget\";\nimport RadioWidget from \"../RadioWidget/RadioWidget\";\nimport RangeWidget from \"../RangeWidget/RangeWidget\";\nimport SelectWidget from \"../SelectWidget/SelectWidget\";\nimport TextareaWidget from \"../TextareaWidget/TextareaWidget\";\nimport TextWidget from \"../TextWidget/TextWidget\";\nimport UpDownWidget from \"../UpDownWidget/UpDownWidget\";\nimport URLWidget from \"../URLWidget/URLWidget\";\n\nexport default {\n  AltDateWidget,\n  AltDateTimeWidget,\n  CheckboxWidget,\n  CheckboxesWidget,\n  ColorWidget,\n  DateWidget,\n  DateTimeWidget,\n  EmailWidget,\n  PasswordWidget,\n  RadioWidget,\n  RangeWidget,\n  SelectWidget,\n  TextareaWidget,\n  TextWidget,\n  UpDownWidget,\n  URLWidget,\n};\n","import React from 'react';\nimport ArrayFieldTemplate from '../ArrayFieldTemplate';\nimport ErrorList from '../ErrorList';\nimport Fields from '../Fields';\nimport FieldTemplate from '../FieldTemplate';\nimport ObjectFieldTemplate from '../ObjectFieldTemplate';\nimport SubmitButton from '../SubmitButton';\nimport Widgets from '../Widgets';\n\nimport { ThemeProps } from '@rjsf/core';\nimport { utils } from '@rjsf/core';\nconst { getDefaultRegistry } = utils;\n\nconst { fields, widgets } = getDefaultRegistry();\n\nconst Theme: ThemeProps = {\n  ArrayFieldTemplate,\n  fields: { ...fields, ...Fields },\n  FieldTemplate,\n  ObjectFieldTemplate,\n  widgets: { ...widgets, ...Widgets },\n  ErrorList,\n  children: React.createElement(SubmitButton)\n};\n\nexport default Theme;\n","import { withTheme, FormProps } from '@rjsf/core';\n\nimport Theme from '../Theme';\nimport { StatelessComponent } from 'react';\n\nconst FuiForm: React.ComponentClass<FormProps<any>> | StatelessComponent<FormProps<any>>  = withTheme(Theme);\n\nexport default FuiForm;\n","import FuiForm from \"./FuiForm/FuiForm\";\nimport { initializeIcons } from \"@fluentui/react\";\n\nexport { default as Fields } from \"./Fields\";\nexport { default as FieldTemplate } from \"./FieldTemplate\";\nexport { default as FuiForm } from \"./FuiForm\";\nexport { default as ObjectFieldTemplate } from \"./ObjectFieldTemplate\";\nexport { default as Theme } from \"./Theme\";\nexport { default as Widgets } from \"./Widgets\";\n\ninitializeIcons();\n\nexport default FuiForm;\n"]},"metadata":{},"sourceType":"module"}