{"ast":null,"code":"import { utils, withTheme } from '@rjsf/core';\nimport React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport { BsPlus } from 'react-icons/bs';\nimport { IoIosRemove } from 'react-icons/io';\nimport { GrAdd } from 'react-icons/gr';\nimport { AiOutlineArrowUp, AiOutlineArrowDown } from 'react-icons/ai';\nimport Card from 'react-bootstrap/Card';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Form$1 from 'react-bootstrap/Form';\nimport FormControl from 'react-bootstrap/FormControl';\nimport InputGroup from 'react-bootstrap/InputGroup';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar AddButton = function AddButton(props) {\n  return React.createElement(Button, Object.assign({}, props, {\n    color: \"primary\",\n    style: {\n      width: \"100%\"\n    },\n    className: \"ml-1\"\n  }), React.createElement(BsPlus, null));\n};\n\nvar mappings = {\n  remove: /*#__PURE__*/React.createElement(IoIosRemove, null),\n  plus: /*#__PURE__*/React.createElement(GrAdd, null),\n  \"arrow-up\": /*#__PURE__*/React.createElement(AiOutlineArrowUp, null),\n  \"arrow-down\": /*#__PURE__*/React.createElement(AiOutlineArrowDown, null)\n};\n\nvar IconButton = function IconButton(props) {\n  var icon = props.icon,\n      otherProps = _objectWithoutPropertiesLoose(props, [\"icon\", \"className\"]);\n\n  return React.createElement(Button, Object.assign({}, otherProps, {\n    variant: \"light\",\n    size: \"sm\"\n  }), mappings[icon]);\n};\n\nvar isMultiSelect = utils.isMultiSelect,\n    getDefaultRegistry = utils.getDefaultRegistry;\n\nvar ArrayFieldTemplate = function ArrayFieldTemplate(props) {\n  var schema = props.schema,\n      _props$registry = props.registry,\n      registry = _props$registry === void 0 ? getDefaultRegistry() : _props$registry; // TODO: update types so we don't have to cast registry as any\n\n  if (isMultiSelect(schema, registry.rootSchema)) {\n    return React.createElement(DefaultFixedArrayFieldTemplate, Object.assign({}, props));\n  } else {\n    return React.createElement(DefaultNormalArrayFieldTemplate, Object.assign({}, props));\n  }\n};\n\nvar ArrayFieldTitle = function ArrayFieldTitle(_ref) {\n  var TitleField = _ref.TitleField,\n      idSchema = _ref.idSchema,\n      title = _ref.title,\n      required = _ref.required;\n\n  if (!title) {\n    return null;\n  }\n\n  var id = idSchema.$id + \"__title\";\n  return React.createElement(TitleField, {\n    id: id,\n    title: title,\n    required: required\n  });\n};\n\nvar ArrayFieldDescription = function ArrayFieldDescription(_ref2) {\n  var DescriptionField = _ref2.DescriptionField,\n      idSchema = _ref2.idSchema,\n      description = _ref2.description;\n\n  if (!description) {\n    return null;\n  }\n\n  var id = idSchema.$id + \"__description\";\n  return React.createElement(DescriptionField, {\n    id: id,\n    description: description\n  });\n}; // Used in the two templates\n\n\nvar DefaultArrayItem = function DefaultArrayItem(props) {\n  var btnStyle = {\n    flex: 1,\n    paddingLeft: 6,\n    paddingRight: 6,\n    fontWeight: \"bold\"\n  };\n  return React.createElement(\"div\", {\n    key: props.key\n  }, React.createElement(Row, {\n    className: \"mb-2  d-flex align-items-center\"\n  }, React.createElement(Col, {\n    xs: \"9\",\n    lg: \"9\"\n  }, props.children), React.createElement(Col, {\n    xs: \"3\",\n    lg: \"3\",\n    className: \"py-4\"\n  }, props.hasToolbar && React.createElement(\"div\", {\n    className: \"d-flex flex-row\"\n  }, (props.hasMoveUp || props.hasMoveDown) && React.createElement(\"div\", {\n    className: \"m-0 p-0\"\n  }, React.createElement(IconButton, {\n    icon: \"arrow-up\",\n    className: \"array-item-move-up\",\n    tabIndex: -1,\n    style: btnStyle,\n    disabled: props.disabled || props.readonly || !props.hasMoveUp,\n    onClick: props.onReorderClick(props.index, props.index - 1)\n  })), (props.hasMoveUp || props.hasMoveDown) && React.createElement(\"div\", {\n    className: \"m-0 p-0\"\n  }, React.createElement(IconButton, {\n    icon: \"arrow-down\",\n    tabIndex: -1,\n    style: btnStyle,\n    disabled: props.disabled || props.readonly || !props.hasMoveDown,\n    onClick: props.onReorderClick(props.index, props.index + 1)\n  })), props.hasRemove && React.createElement(\"div\", {\n    className: \"m-0 p-0\"\n  }, React.createElement(IconButton, {\n    icon: \"remove\",\n    tabIndex: -1,\n    style: btnStyle,\n    disabled: props.disabled || props.readonly,\n    onClick: props.onDropIndexClick(props.index)\n  }))))));\n};\n\nvar DefaultFixedArrayFieldTemplate = function DefaultFixedArrayFieldTemplate(props) {\n  return React.createElement(\"fieldset\", {\n    className: props.className\n  }, React.createElement(ArrayFieldTitle, {\n    key: \"array-field-title-\" + props.idSchema.$id,\n    TitleField: props.TitleField,\n    idSchema: props.idSchema,\n    title: props.uiSchema[\"ui:title\"] || props.title,\n    required: props.required\n  }), (props.uiSchema[\"ui:description\"] || props.schema.description) && React.createElement(\"div\", {\n    className: \"field-description\",\n    key: \"field-description-\" + props.idSchema.$id\n  }, props.uiSchema[\"ui:description\"] || props.schema.description), React.createElement(\"div\", {\n    className: \"row array-item-list\",\n    key: \"array-item-list-\" + props.idSchema.$id\n  }, props.items && props.items.map(DefaultArrayItem)), props.canAdd && React.createElement(AddButton, {\n    className: \"array-item-add\",\n    onClick: props.onAddClick,\n    disabled: props.disabled || props.readonly\n  }));\n};\n\nvar DefaultNormalArrayFieldTemplate = function DefaultNormalArrayFieldTemplate(props) {\n  return React.createElement(\"div\", null, React.createElement(Row, {\n    className: \"p-0 m-0\"\n  }, React.createElement(Col, {\n    className: \"p-0 m-0\"\n  }, React.createElement(ArrayFieldTitle, {\n    key: \"array-field-title-\" + props.idSchema.$id,\n    TitleField: props.TitleField,\n    idSchema: props.idSchema,\n    title: props.uiSchema[\"ui:title\"] || props.title,\n    required: props.required\n  }), (props.uiSchema[\"ui:description\"] || props.schema.description) && React.createElement(ArrayFieldDescription, {\n    key: \"array-field-description-\" + props.idSchema.$id,\n    DescriptionField: props.DescriptionField,\n    idSchema: props.idSchema,\n    description: props.uiSchema[\"ui:description\"] || props.schema.description\n  }), React.createElement(Container, {\n    fluid: true,\n    key: \"array-item-list-\" + props.idSchema.$id,\n    className: \"p-0 m-0\"\n  }, props.items && props.items.map(function (p) {\n    return DefaultArrayItem(p);\n  }), props.canAdd && React.createElement(Container, {\n    className: \"\"\n  }, React.createElement(Row, {\n    className: \"mt-2\"\n  }, React.createElement(Col, {\n    xs: 9\n  }), React.createElement(Col, {\n    xs: 3,\n    className: \"py-4 col-lg-3 col-3\"\n  }, \" \", React.createElement(AddButton, {\n    className: \"array-item-add\",\n    onClick: props.onAddClick,\n    disabled: props.disabled || props.readonly\n  }))))))));\n};\n\nvar ErrorList = function ErrorList(_ref) {\n  var errors = _ref.errors;\n  return React.createElement(Card, {\n    border: \"danger\",\n    className: \"mb-4\"\n  }, React.createElement(Card.Header, {\n    className: \"alert-danger\"\n  }, \"Errors\"), React.createElement(Card.Body, {\n    className: \"p-0\"\n  }, React.createElement(ListGroup, null, errors.map(function (error, i) {\n    return React.createElement(ListGroup.Item, {\n      key: i,\n      className: \"border-0\"\n    }, React.createElement(\"span\", null, error.stack));\n  }))));\n};\n\nvar DescriptionField = function DescriptionField(_ref) {\n  var description = _ref.description;\n\n  if (description) {\n    return React.createElement(\"div\", null, React.createElement(\"div\", {\n      className: \"mb-3\"\n    }, description));\n  }\n\n  return null;\n};\n\nvar TitleField = function TitleField(_ref) {\n  var title = _ref.title;\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"my-1\"\n  }, React.createElement(\"h5\", null, title), React.createElement(\"hr\", {\n    className: \"border-0 bg-secondary\",\n    style: {\n      height: \"1px\"\n    }\n  })));\n};\n\nvar Fields = {\n  DescriptionField: DescriptionField,\n  TitleField: TitleField\n};\n\nvar FieldTemplate = function FieldTemplate(_ref) {\n  var id = _ref.id,\n      children = _ref.children,\n      displayLabel = _ref.displayLabel,\n      _ref$rawErrors = _ref.rawErrors,\n      rawErrors = _ref$rawErrors === void 0 ? [] : _ref$rawErrors,\n      rawHelp = _ref.rawHelp,\n      rawDescription = _ref.rawDescription;\n  return React.createElement(Form$1.Group, null, children, displayLabel && rawDescription ? React.createElement(Form$1.Text, {\n    className: rawErrors.length > 0 ? \"text-danger\" : \"text-muted\"\n  }, rawDescription) : null, rawErrors.length > 0 && React.createElement(ListGroup, {\n    as: \"ul\"\n  }, rawErrors.map(function (error) {\n    return React.createElement(ListGroup.Item, {\n      as: \"li\",\n      key: error,\n      className: \"border-0 m-0 p-0\"\n    }, React.createElement(\"small\", {\n      className: \"m-0 text-danger\"\n    }, error));\n  })), rawHelp && React.createElement(Form$1.Text, {\n    className: rawErrors.length > 0 ? \"text-danger\" : \"text-muted\",\n    id: id\n  }, rawHelp));\n};\n\nvar ObjectFieldTemplate = function ObjectFieldTemplate(_ref) {\n  var DescriptionField = _ref.DescriptionField,\n      description = _ref.description,\n      TitleField = _ref.TitleField,\n      title = _ref.title,\n      properties = _ref.properties,\n      required = _ref.required,\n      uiSchema = _ref.uiSchema,\n      idSchema = _ref.idSchema;\n  return React.createElement(React.Fragment, null, (uiSchema[\"ui:title\"] || title) && React.createElement(TitleField, {\n    id: idSchema.$id + \"-title\",\n    title: title,\n    required: required\n  }), description && React.createElement(DescriptionField, {\n    id: idSchema.$id + \"-description\",\n    description: description\n  }), React.createElement(Container, {\n    fluid: true,\n    className: \"p-0\"\n  }, properties.map(function (element, index) {\n    return React.createElement(Row, {\n      key: index,\n      style: {\n        marginBottom: \"10px\"\n      },\n      className: element.hidden ? \"d-none\" : undefined\n    }, React.createElement(Col, {\n      xs: 12\n    }, \" \", element.content));\n  })));\n};\n\nvar CheckboxWidget = function CheckboxWidget(props) {\n  var id = props.id,\n      value = props.value,\n      required = props.required,\n      disabled = props.disabled,\n      readonly = props.readonly,\n      label = props.label,\n      schema = props.schema,\n      autofocus = props.autofocus,\n      onChange = props.onChange,\n      onBlur = props.onBlur,\n      onFocus = props.onFocus;\n\n  var _onChange = function _onChange(_ref) {\n    var checked = _ref.target.checked;\n    return onChange(checked);\n  };\n\n  var _onBlur = function _onBlur(_ref2) {\n    var checked = _ref2.target.checked;\n    return onBlur(id, checked);\n  };\n\n  var _onFocus = function _onFocus(_ref3) {\n    var checked = _ref3.target.checked;\n    return onFocus(id, checked);\n  };\n\n  var desc = label || schema.description;\n  return React.createElement(Form$1.Group, {\n    className: \"checkbox \" + (disabled || readonly ? \"disabled\" : \"\")\n  }, React.createElement(Form$1.Check, {\n    id: id,\n    label: desc,\n    checked: typeof value === \"undefined\" ? false : value,\n    required: required,\n    disabled: disabled || readonly,\n    autoFocus: autofocus,\n    onChange: _onChange,\n    type: \"checkbox\",\n    onBlur: _onBlur,\n    onFocus: _onFocus\n  }));\n};\n\nvar selectValue = function selectValue(value, selected, all) {\n  var at = all.indexOf(value);\n  var updated = selected.slice(0, at).concat(value, selected.slice(at)); // As inserting values at predefined index positions doesn't work with empty\n  // arrays, we need to reorder the updated selection to match the initial order\n\n  return updated.sort(function (a, b) {\n    return all.indexOf(a) > all.indexOf(b);\n  });\n};\n\nvar deselectValue = function deselectValue(value, selected) {\n  return selected.filter(function (v) {\n    return v !== value;\n  });\n};\n\nvar CheckboxesWidget = function CheckboxesWidget(_ref) {\n  var schema = _ref.schema,\n      label = _ref.label,\n      id = _ref.id,\n      disabled = _ref.disabled,\n      options = _ref.options,\n      value = _ref.value,\n      autofocus = _ref.autofocus,\n      readonly = _ref.readonly,\n      required = _ref.required,\n      onChange = _ref.onChange,\n      onBlur = _ref.onBlur,\n      onFocus = _ref.onFocus;\n  var enumOptions = options.enumOptions,\n      enumDisabled = options.enumDisabled,\n      inline = options.inline;\n\n  var _onChange = function _onChange(option) {\n    return function (_ref2) {\n      var checked = _ref2.target.checked;\n      var all = enumOptions.map(function (_ref3) {\n        var value = _ref3.value;\n        return value;\n      });\n\n      if (checked) {\n        onChange(selectValue(option.value, value, all));\n      } else {\n        onChange(deselectValue(option.value, value));\n      }\n    };\n  };\n\n  var _onBlur = function _onBlur(_ref4) {\n    var value = _ref4.target.value;\n    return onBlur(id, value);\n  };\n\n  var _onFocus = function _onFocus(_ref5) {\n    var value = _ref5.target.value;\n    return onFocus(id, value);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(Form$1.Label, {\n    htmlFor: id\n  }, label || schema.title), React.createElement(Form$1.Group, null, enumOptions.map(function (option, index) {\n    var checked = value.indexOf(option.value) !== -1;\n    var itemDisabled = enumDisabled && enumDisabled.indexOf(option.value) != -1;\n    return inline ? React.createElement(Form$1, {\n      key: index\n    }, React.createElement(Form$1.Check, {\n      required: required,\n      inline: true,\n      className: \"bg-transparent border-0\",\n      custom: true,\n      checked: checked,\n      type: \"checkbox\",\n      id: id + \"_\" + index,\n      label: option.label,\n      autoFocus: autofocus && index === 0,\n      onChange: _onChange(option),\n      onBlur: _onBlur,\n      onFocus: _onFocus,\n      disabled: disabled || itemDisabled || readonly\n    })) : React.createElement(Form$1, {\n      key: index\n    }, React.createElement(Form$1.Check, {\n      custom: true,\n      required: required,\n      checked: checked,\n      className: \"bg-transparent border-0\",\n      type: \"checkbox\",\n      id: id + \"_\" + index,\n      label: option.label,\n      autoFocus: autofocus && index === 0,\n      onChange: _onChange(option),\n      onBlur: _onBlur,\n      onFocus: _onFocus,\n      disabled: disabled || itemDisabled || readonly\n    }));\n  })));\n};\n\nvar TextWidget = function TextWidget(_ref) {\n  var id = _ref.id,\n      placeholder = _ref.placeholder,\n      required = _ref.required,\n      readonly = _ref.readonly,\n      disabled = _ref.disabled,\n      type = _ref.type,\n      label = _ref.label,\n      value = _ref.value,\n      onChange = _ref.onChange,\n      onBlur = _ref.onBlur,\n      onFocus = _ref.onFocus,\n      autofocus = _ref.autofocus,\n      options = _ref.options,\n      schema = _ref.schema,\n      _ref$rawErrors = _ref.rawErrors,\n      rawErrors = _ref$rawErrors === void 0 ? [] : _ref$rawErrors;\n\n  var _onChange = function _onChange(_ref2) {\n    var value = _ref2.target.value;\n    return onChange(value === \"\" ? options.emptyValue : value);\n  };\n\n  var _onBlur = function _onBlur(_ref3) {\n    var value = _ref3.target.value;\n    return onBlur(id, value);\n  };\n\n  var _onFocus = function _onFocus(_ref4) {\n    var value = _ref4.target.value;\n    return onFocus(id, value);\n  };\n\n  var inputType = (type || schema.type) === 'string' ? 'text' : \"\" + (type || schema.type); // const classNames = [rawErrors.length > 0 ? \"is-invalid\" : \"\", type === 'file' ? 'custom-file-label': \"\"]\n\n  return React.createElement(Form$1.Group, {\n    className: \"mb-0\"\n  }, React.createElement(Form$1.Label, {\n    className: rawErrors.length > 0 ? \"text-danger\" : \"\"\n  }, label || schema.title, (label || schema.title) && required ? \"*\" : null), React.createElement(Form$1.Control, {\n    id: id,\n    placeholder: placeholder,\n    autoFocus: autofocus,\n    required: required,\n    disabled: disabled,\n    readOnly: readonly,\n    className: rawErrors.length > 0 ? \"is-invalid\" : \"\",\n    list: schema.examples ? \"examples_\" + id : undefined,\n    type: inputType,\n    value: value || value === 0 ? value : \"\",\n    onChange: _onChange,\n    onBlur: _onBlur,\n    onFocus: _onFocus\n  }), schema.examples ? React.createElement(\"datalist\", {\n    id: \"examples_\" + id\n  }, schema.examples.concat(schema[\"default\"] ? [schema[\"default\"]] : []).map(function (example) {\n    return React.createElement(\"option\", {\n      key: example,\n      value: example\n    });\n  })) : null);\n};\n\nvar ColorWidget = function ColorWidget(props) {\n  return React.createElement(TextWidget, Object.assign({}, props, {\n    type: \"color\"\n  }));\n};\n\nvar DateWidget = function DateWidget(props) {\n  return React.createElement(TextWidget, Object.assign({}, props, {\n    type: \"date\"\n  }));\n};\n\nvar localToUTC = utils.localToUTC,\n    utcToLocal = utils.utcToLocal;\n\nvar DateTimeWidget = function DateTimeWidget(props) {\n  var value = utcToLocal(props.value);\n\n  var onChange = function onChange(value) {\n    props.onChange(localToUTC(value));\n  };\n\n  return React.createElement(TextWidget, Object.assign({}, props, {\n    type: \"datetime-local\",\n    value: value,\n    onChange: onChange\n  }));\n};\n\nvar EmailWidget = function EmailWidget(props) {\n  return React.createElement(TextWidget, Object.assign({}, props, {\n    type: \"email\"\n  }));\n};\n\nvar PasswordWidget = function PasswordWidget(_ref) {\n  var id = _ref.id,\n      required = _ref.required,\n      readonly = _ref.readonly,\n      disabled = _ref.disabled,\n      value = _ref.value,\n      label = _ref.label,\n      onFocus = _ref.onFocus,\n      onBlur = _ref.onBlur,\n      onChange = _ref.onChange,\n      options = _ref.options,\n      autofocus = _ref.autofocus,\n      schema = _ref.schema,\n      _ref$rawErrors = _ref.rawErrors,\n      rawErrors = _ref$rawErrors === void 0 ? [] : _ref$rawErrors;\n\n  var _onChange = function _onChange(_ref2) {\n    var value = _ref2.target.value;\n    return onChange(value === \"\" ? options.emptyValue : value);\n  };\n\n  var _onBlur = function _onBlur(_ref3) {\n    var value = _ref3.target.value;\n    return onBlur(id, value);\n  };\n\n  var _onFocus = function _onFocus(_ref4) {\n    var value = _ref4.target.value;\n    return onFocus(id, value);\n  };\n\n  return React.createElement(Form$1.Group, {\n    className: \"mb-0\"\n  }, React.createElement(Form$1.Label, {\n    className: rawErrors.length > 0 ? \"text-danger\" : \"\"\n  }, label || schema.title, (label || schema.title) && required ? \"*\" : null), React.createElement(Form$1.Control, {\n    id: id,\n    autoFocus: autofocus,\n    className: rawErrors.length > 0 ? \"is-invalid\" : \"\",\n    required: required,\n    disabled: disabled,\n    readOnly: readonly,\n    type: \"password\",\n    value: value ? value : \"\",\n    onFocus: _onFocus,\n    onBlur: _onBlur,\n    onChange: _onChange\n  }));\n};\n\nvar RadioWidget = function RadioWidget(_ref) {\n  var id = _ref.id,\n      schema = _ref.schema,\n      options = _ref.options,\n      value = _ref.value,\n      required = _ref.required,\n      disabled = _ref.disabled,\n      readonly = _ref.readonly,\n      label = _ref.label,\n      onChange = _ref.onChange,\n      onBlur = _ref.onBlur,\n      onFocus = _ref.onFocus;\n  var enumOptions = options.enumOptions,\n      enumDisabled = options.enumDisabled;\n\n  var _onChange = function _onChange(_ref2) {\n    var value = _ref2.target.value;\n    return onChange(schema.type == \"boolean\" ? value !== \"false\" : value);\n  };\n\n  var _onBlur = function _onBlur(_ref3) {\n    var value = _ref3.target.value;\n    return onBlur(id, value);\n  };\n\n  var _onFocus = function _onFocus(_ref4) {\n    var value = _ref4.target.value;\n    return onFocus(id, value);\n  };\n\n  var inline = Boolean(options && options.inline);\n  return React.createElement(Form$1.Group, {\n    className: \"mb-0\"\n  }, React.createElement(Form$1.Label, {\n    className: \"d-block\"\n  }, label || schema.title, (label || schema.title) && required ? \"*\" : null), enumOptions.map(function (option, i) {\n    var itemDisabled = Array.isArray(enumDisabled) && enumDisabled.indexOf(option.value) !== -1;\n    var checked = option.value == value;\n    var radio = React.createElement(Form$1.Check, {\n      inline: inline,\n      label: option.label,\n      id: option.label,\n      key: i,\n      name: id,\n      type: \"radio\",\n      disabled: disabled || itemDisabled || readonly,\n      checked: checked,\n      required: required,\n      value: option.value,\n      onChange: _onChange,\n      onBlur: _onBlur,\n      onFocus: _onFocus\n    });\n    return radio;\n  }));\n};\n\nvar rangeSpec = utils.rangeSpec;\n\nvar RangeWidget = function RangeWidget(_ref) {\n  var value = _ref.value,\n      readonly = _ref.readonly,\n      disabled = _ref.disabled,\n      onBlur = _ref.onBlur,\n      onFocus = _ref.onFocus,\n      options = _ref.options,\n      schema = _ref.schema,\n      onChange = _ref.onChange,\n      required = _ref.required,\n      label = _ref.label,\n      id = _ref.id;\n\n  var sliderProps = _extends({\n    value: value,\n    label: label,\n    id: id\n  }, rangeSpec(schema));\n\n  var _onChange = function _onChange(_ref2) {\n    var value = _ref2.target.value;\n    return onChange(value === \"\" ? options.emptyValue : value);\n  };\n\n  var _onBlur = function _onBlur(_ref3) {\n    var value = _ref3.target.value;\n    return onBlur(id, value);\n  };\n\n  var _onFocus = function _onFocus(_ref4) {\n    var value = _ref4.target.value;\n    return onFocus(id, value);\n  };\n\n  return React.createElement(Form$1.Group, {\n    className: \"mb-0\"\n  }, React.createElement(Form$1.Label, null, label, label && required ? \"*\" : null), React.createElement(Form$1.Control, Object.assign({\n    type: \"range\",\n    required: required,\n    disabled: disabled,\n    readOnly: readonly,\n    onChange: _onChange,\n    onBlur: _onBlur,\n    onFocus: _onFocus\n  }, sliderProps)), React.createElement(\"span\", {\n    className: \"range-view\"\n  }, value));\n};\n\nvar asNumber = utils.asNumber,\n    guessType = utils.guessType;\nvar nums = /*#__PURE__*/new Set([\"number\", \"integer\"]);\n/**\r\n * This is a silly limitation in the DOM where option change event values are\r\n * always retrieved as strings.\r\n */\n\nvar processValue = function processValue(schema, value) {\n  // \"enum\" is a reserved word, so only \"type\" and \"items\" can be destructured\n  var type = schema.type,\n      items = schema.items;\n\n  if (value === \"\") {\n    return undefined;\n  } else if (type === \"array\" && items && nums.has(items.type)) {\n    return value.map(asNumber);\n  } else if (type === \"boolean\") {\n    return value === \"true\";\n  } else if (type === \"number\") {\n    return asNumber(value);\n  } // If type is undefined, but an enum is present, try and infer the type from\n  // the enum values\n\n\n  if (schema[\"enum\"]) {\n    if (schema[\"enum\"].every(function (x) {\n      return guessType(x) === \"number\";\n    })) {\n      return asNumber(value);\n    } else if (schema[\"enum\"].every(function (x) {\n      return guessType(x) === \"boolean\";\n    })) {\n      return value === \"true\";\n    }\n  }\n\n  return value;\n};\n\nvar SelectWidget = function SelectWidget(_ref) {\n  var schema = _ref.schema,\n      id = _ref.id,\n      options = _ref.options,\n      label = _ref.label,\n      required = _ref.required,\n      disabled = _ref.disabled,\n      readonly = _ref.readonly,\n      value = _ref.value,\n      multiple = _ref.multiple,\n      autofocus = _ref.autofocus,\n      _onChange = _ref.onChange,\n      onBlur = _ref.onBlur,\n      onFocus = _ref.onFocus,\n      placeholder = _ref.placeholder,\n      _ref$rawErrors = _ref.rawErrors,\n      rawErrors = _ref$rawErrors === void 0 ? [] : _ref$rawErrors;\n  var enumOptions = options.enumOptions,\n      enumDisabled = options.enumDisabled;\n  var emptyValue = multiple ? [] : \"\";\n\n  function getValue(event, multiple) {\n    if (multiple) {\n      return [].slice.call(event.target.options).filter(function (o) {\n        return o.selected;\n      }).map(function (o) {\n        return o.value;\n      });\n    } else {\n      return event.target.value;\n    }\n  }\n\n  return React.createElement(Form$1.Group, null, React.createElement(Form$1.Label, {\n    className: rawErrors.length > 0 ? \"text-danger\" : \"\"\n  }, label || schema.title, (label || schema.title) && required ? \"*\" : null), React.createElement(Form$1.Control, {\n    as: \"select\",\n    custom: true,\n    id: id,\n    value: typeof value === \"undefined\" ? emptyValue : value,\n    required: required,\n    multiple: multiple,\n    disabled: disabled,\n    readOnly: readonly,\n    autoFocus: autofocus,\n    className: rawErrors.length > 0 ? \"is-invalid\" : \"\",\n    onBlur: onBlur && function (event) {\n      var newValue = getValue(event, multiple);\n      onBlur(id, processValue(schema, newValue));\n    },\n    onFocus: onFocus && function (event) {\n      var newValue = getValue(event, multiple);\n      onFocus(id, processValue(schema, newValue));\n    },\n    onChange: function onChange(event) {\n      var newValue = getValue(event, multiple);\n\n      _onChange(processValue(schema, newValue));\n    }\n  }, !multiple && schema[\"default\"] === undefined && React.createElement(\"option\", {\n    value: \"\"\n  }, placeholder), enumOptions.map(function (_ref2, i) {\n    var value = _ref2.value,\n        label = _ref2.label;\n    var disabled = Array.isArray(enumDisabled) && enumDisabled.indexOf(value) != -1;\n    return React.createElement(\"option\", {\n      key: i,\n      id: label,\n      value: value,\n      disabled: disabled\n    }, label);\n  })));\n};\n\nvar TextareaWidget = function TextareaWidget(_ref) {\n  var id = _ref.id,\n      placeholder = _ref.placeholder,\n      value = _ref.value,\n      required = _ref.required,\n      disabled = _ref.disabled,\n      autofocus = _ref.autofocus,\n      label = _ref.label,\n      readonly = _ref.readonly,\n      onBlur = _ref.onBlur,\n      onFocus = _ref.onFocus,\n      onChange = _ref.onChange,\n      options = _ref.options,\n      schema = _ref.schema,\n      _ref$rawErrors = _ref.rawErrors,\n      rawErrors = _ref$rawErrors === void 0 ? [] : _ref$rawErrors;\n\n  var _onChange = function _onChange(_ref2) {\n    var value = _ref2.target.value;\n    return onChange(value === \"\" ? options.emptyValue : value);\n  };\n\n  var _onBlur = function _onBlur(_ref3) {\n    var value = _ref3.target.value;\n    return onBlur(id, value);\n  };\n\n  var _onFocus = function _onFocus(_ref4) {\n    var value = _ref4.target.value;\n    return onFocus(id, value);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"label\", {\n    htmlFor: id\n  }, label || schema.title, required && React.createElement(\"span\", {\n    \"aria-hidden\": true,\n    className: rawErrors.length > 0 ? \"text-danger ml-1\" : \"ml-1\"\n  }, \"\\u2009\", \"*\")), React.createElement(InputGroup, null, React.createElement(FormControl, {\n    id: id,\n    as: \"textarea\",\n    placeholder: placeholder,\n    disabled: disabled,\n    readOnly: readonly,\n    value: value,\n    required: required,\n    autoFocus: autofocus,\n    rows: options.rows || 5,\n    onChange: _onChange,\n    onBlur: _onBlur,\n    onFocus: _onFocus\n  })));\n};\n\nvar UpDownWidget = function UpDownWidget(_ref) {\n  var id = _ref.id,\n      required = _ref.required,\n      readonly = _ref.readonly,\n      disabled = _ref.disabled,\n      label = _ref.label,\n      value = _ref.value,\n      onChange = _ref.onChange,\n      onBlur = _ref.onBlur,\n      onFocus = _ref.onFocus,\n      autofocus = _ref.autofocus;\n\n  var _onChange = function _onChange(_ref2) {\n    var value = _ref2.target.value;\n    return onChange(value);\n  };\n\n  var _onBlur = function _onBlur(_ref3) {\n    var value = _ref3.target.value;\n    return onBlur(id, value);\n  };\n\n  var _onFocus = function _onFocus(_ref4) {\n    var value = _ref4.target.value;\n    return onFocus(id, value);\n  };\n\n  return React.createElement(Form$1.Group, {\n    className: \"mb-0\"\n  }, React.createElement(Form$1.Label, null, label, label && required ? \"*\" : null), React.createElement(Form$1.Control, {\n    id: id,\n    autoFocus: autofocus,\n    required: required,\n    type: \"number\",\n    disabled: disabled,\n    readOnly: readonly,\n    value: value || value === 0 ? value : \"\",\n    onChange: _onChange,\n    onBlur: _onBlur,\n    onFocus: _onFocus\n  }));\n};\n\nvar URLWidget = function URLWidget(props) {\n  return React.createElement(TextWidget, Object.assign({}, props, {\n    type: \"url\"\n  }));\n};\n\nvar FileWidget = function FileWidget(props) {\n  return React.createElement(TextWidget, Object.assign({}, props, {\n    type: \"file\"\n  }));\n};\n\nvar Widgets = {\n  CheckboxWidget: CheckboxWidget,\n  CheckboxesWidget: CheckboxesWidget,\n  ColorWidget: ColorWidget,\n  DateWidget: DateWidget,\n  DateTimeWidget: DateTimeWidget,\n  EmailWidget: EmailWidget,\n  PasswordWidget: PasswordWidget,\n  RadioWidget: RadioWidget,\n  RangeWidget: RangeWidget,\n  SelectWidget: SelectWidget,\n  TextareaWidget: TextareaWidget,\n  TextWidget: TextWidget,\n  UpDownWidget: UpDownWidget,\n  URLWidget: URLWidget,\n  FileWidget: FileWidget\n};\nvar getDefaultRegistry$1 = utils.getDefaultRegistry;\n\nvar _getDefaultRegistry = /*#__PURE__*/getDefaultRegistry$1(),\n    fields = _getDefaultRegistry.fields,\n    widgets = _getDefaultRegistry.widgets;\n\nvar DefaultChildren = function DefaultChildren() {\n  return React.createElement(\"div\", null, React.createElement(Button, {\n    variant: \"primary\",\n    type: \"submit\"\n  }, \"Submit\"));\n};\n\nvar Theme = {\n  children: /*#__PURE__*/React.createElement(DefaultChildren, null),\n  ArrayFieldTemplate: ArrayFieldTemplate,\n  fields: /*#__PURE__*/_extends({}, fields, Fields),\n  FieldTemplate: FieldTemplate,\n  ObjectFieldTemplate: ObjectFieldTemplate,\n  widgets: /*#__PURE__*/_extends({}, widgets, Widgets),\n  ErrorList: ErrorList\n};\nvar Form = /*#__PURE__*/withTheme(Theme);\nexport default Form;\nexport { FieldTemplate, Fields, Form, ObjectFieldTemplate, Theme, Widgets };","map":{"version":3,"sources":["../src/AddButton/AddButton.tsx","../src/IconButton/IconButton.tsx","../src/ArrayFieldTemplate/ArrayFieldTemplate.tsx","../src/ErrorList/ErrorList.tsx","../src/DescriptionField/DescriptionField.tsx","../src/TitleField/TitleField.tsx","../src/Fields/Fields.ts","../src/FieldTemplate/FieldTemplate.tsx","../src/ObjectFieldTemplate/ObjectFieldTemplate.tsx","../src/CheckboxWidget/CheckboxWidget.tsx","../src/CheckboxesWidget/CheckboxesWidget.tsx","../src/TextWidget/TextWidget.tsx","../src/ColorWidget/ColorWidget.tsx","../src/DateWidget/DateWidget.tsx","../src/DateTimeWidget/DateTimeWidget.tsx","../src/EmailWidget/EmailWidget.tsx","../src/PasswordWidget/PasswordWidget.tsx","../src/RadioWidget/RadioWidget.tsx","../src/RangeWidget/RangeWidget.tsx","../src/SelectWidget/SelectWidget.tsx","../src/TextareaWidget/TextareaWidget.tsx","../src/UpDownWidget/UpDownWidget.tsx","../src/URLWidget/URLWidget.tsx","../src/FileWidget/FileWidget.tsx","../src/Widgets/Widgets.ts","../src/Theme/Theme.tsx","../src/Form/Form.tsx"],"names":["AddButton","props","color","style","width","className","React","mappings","remove","plus","IconButton","icon","otherProps","variant","size","isMultiSelect","getDefaultRegistry","utils","ArrayFieldTemplate","schema","registry","ArrayFieldTitle","TitleField","idSchema","title","required","id","ArrayFieldDescription","DescriptionField","description","DefaultArrayItem","btnStyle","flex","paddingLeft","paddingRight","fontWeight","key","xs","lg","tabIndex","disabled","hasMoveUp","onClick","hasMoveDown","readonly","DefaultFixedArrayFieldTemplate","$id","onAddClick","DefaultNormalArrayFieldTemplate","fluid","ErrorList","errors","border","Card","ListGroup","i","error","height","FieldTemplate","children","displayLabel","rawErrors","rawHelp","rawDescription","Form","as","ObjectFieldTemplate","properties","uiSchema","index","marginBottom","element","undefined","CheckboxWidget","value","label","autofocus","onChange","onBlur","onFocus","_onChange","checked","_onBlur","_onFocus","desc","autoFocus","type","selectValue","at","all","updated","selected","deselectValue","v","CheckboxesWidget","options","enumOptions","enumDisabled","inline","target","option","htmlFor","itemDisabled","custom","TextWidget","placeholder","inputType","readOnly","list","example","ColorWidget","DateWidget","localToUTC","utcToLocal","DateTimeWidget","EmailWidget","PasswordWidget","RadioWidget","Boolean","Array","radio","name","rangeSpec","RangeWidget","sliderProps","asNumber","guessType","nums","processValue","items","SelectWidget","multiple","emptyValue","event","o","newValue","getValue","TextareaWidget","rows","UpDownWidget","URLWidget","FileWidget","fields","widgets","DefaultChildren","Theme","withTheme"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport { AddButtonProps } from \"@rjsf/core\";\nimport Button from \"react-bootstrap/Button\";\nimport { BsPlus } from \"react-icons/bs\";\n\nconst AddButton: React.FC<AddButtonProps> = props => (\n  <Button {...props} color=\"primary\" style={{width: \"100%\"}} className=\"ml-1\">\n    <BsPlus/>\n  </Button>\n);\n\nexport default AddButton;\n","import React from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport { IoIosRemove } from \"react-icons/io\";\nimport { GrAdd } from \"react-icons/gr\";\nimport { AiOutlineArrowUp, AiOutlineArrowDown } from \"react-icons/ai\";\n\nconst mappings: any = {\n  remove: <IoIosRemove />,\n  plus: <GrAdd />,\n  \"arrow-up\": <AiOutlineArrowUp />,\n  \"arrow-down\": <AiOutlineArrowDown />,\n};\n\ntype IconButtonProps = {\n  icon: string;\n  className?: string;\n  tabIndex?: number;\n  style?: any;\n  disabled?: any;\n  onClick?: any;\n};\n\nconst IconButton = (props: IconButtonProps) => {\n  const { icon, className, ...otherProps } = props;\n  return (\n    <Button {...otherProps} variant=\"light\" size=\"sm\">\n      {mappings[icon]}\n    </Button>\n  );\n};\n\nexport default IconButton;\n","import React from \"react\";\nimport { utils } from \"@rjsf/core\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport { ArrayFieldTemplateProps, IdSchema } from \"@rjsf/core\";\n\nimport AddButton from \"../AddButton/AddButton\";\nimport IconButton from \"../IconButton/IconButton\";\n\nconst { isMultiSelect, getDefaultRegistry } = utils;\n\nconst ArrayFieldTemplate = (props: ArrayFieldTemplateProps) => {\n  const { schema, registry = getDefaultRegistry() } = props;\n\n  // TODO: update types so we don't have to cast registry as any\n  if (isMultiSelect(schema, (registry as any).rootSchema)) {\n    return <DefaultFixedArrayFieldTemplate {...props} />;\n  } else {\n    return <DefaultNormalArrayFieldTemplate {...props} />;\n  }\n};\n\ntype ArrayFieldTitleProps = {\n  TitleField: any;\n  idSchema: IdSchema;\n  title: string;\n  required: boolean;\n};\n\nconst ArrayFieldTitle = ({\n  TitleField,\n  idSchema,\n  title,\n  required,\n}: ArrayFieldTitleProps) => {\n  if (!title) {\n    return null;\n  }\n\n  const id = `${idSchema.$id}__title`;\n  return <TitleField id={id} title={title} required={required} />;\n};\n\ntype ArrayFieldDescriptionProps = {\n  DescriptionField: any;\n  idSchema: IdSchema;\n  description: string;\n};\n\nconst ArrayFieldDescription = ({\n  DescriptionField,\n  idSchema,\n  description,\n}: ArrayFieldDescriptionProps) => {\n  if (!description) {\n    return null;\n  }\n\n  const id = `${idSchema.$id}__description`;\n  return <DescriptionField id={id} description={description} />;\n};\n\n// Used in the two templates\nconst DefaultArrayItem = (props: any) => {\n  const btnStyle = {\n    flex: 1,\n    paddingLeft: 6,\n    paddingRight: 6,\n    fontWeight: \"bold\",\n  };\n  return (\n    <div key={props.key}>\n      <Row className=\"mb-2  d-flex align-items-center\">\n        <Col xs=\"9\" lg=\"9\">{props.children}</Col>\n\n        <Col xs=\"3\" lg=\"3\" className=\"py-4\">\n          {props.hasToolbar && (\n            <div className=\"d-flex flex-row\">\n              {(props.hasMoveUp || props.hasMoveDown) && (\n                <div className=\"m-0 p-0\">\n                  <IconButton\n                    icon=\"arrow-up\"\n                    className=\"array-item-move-up\"\n                    tabIndex={-1}\n                    style={btnStyle as any}\n                    disabled={\n                      props.disabled || props.readonly || !props.hasMoveUp\n                    }\n                    onClick={props.onReorderClick(props.index, props.index - 1)}\n                  />\n                </div>\n              )}\n\n              {(props.hasMoveUp || props.hasMoveDown) && (\n                <div className=\"m-0 p-0\">\n                  <IconButton\n                    icon=\"arrow-down\"\n                    tabIndex={-1}\n                    style={btnStyle as any}\n                    disabled={\n                      props.disabled || props.readonly || !props.hasMoveDown\n                    }\n                    onClick={props.onReorderClick(props.index, props.index + 1)}\n                  />\n                </div>\n              )}\n\n              {props.hasRemove && (\n                <div className=\"m-0 p-0\">\n                  <IconButton\n                    icon=\"remove\"\n                    tabIndex={-1}\n                    style={btnStyle as any}\n                    disabled={props.disabled || props.readonly}\n                    onClick={props.onDropIndexClick(props.index)}\n                  />\n                </div>\n              )}\n            </div>\n          )}\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nconst DefaultFixedArrayFieldTemplate = (props: ArrayFieldTemplateProps) => {\n  return (\n    <fieldset className={props.className}>\n      <ArrayFieldTitle\n        key={`array-field-title-${props.idSchema.$id}`}\n        TitleField={props.TitleField}\n        idSchema={props.idSchema}\n        title={props.uiSchema[\"ui:title\"] || props.title}\n        required={props.required}\n      />\n\n      {(props.uiSchema[\"ui:description\"] || props.schema.description) && (\n        <div\n          className=\"field-description\"\n          key={`field-description-${props.idSchema.$id}`}>\n          {props.uiSchema[\"ui:description\"] || props.schema.description}\n        </div>\n      )}\n\n      <div\n        className=\"row array-item-list\"\n        key={`array-item-list-${props.idSchema.$id}`}>\n        {props.items && props.items.map(DefaultArrayItem)}\n      </div>\n\n      {props.canAdd && (\n        <AddButton\n          className=\"array-item-add\"\n          onClick={props.onAddClick}\n          disabled={props.disabled || props.readonly}\n        />\n      )}\n    </fieldset>\n  );\n};\n\nconst DefaultNormalArrayFieldTemplate = (props: ArrayFieldTemplateProps) => {\n  return (\n    <div>\n      <Row className=\"p-0 m-0\">\n        <Col className=\"p-0 m-0\">\n        <ArrayFieldTitle\n          key={`array-field-title-${props.idSchema.$id}`}\n          TitleField={props.TitleField}\n          idSchema={props.idSchema}\n          title={props.uiSchema[\"ui:title\"] || props.title}\n          required={props.required}\n        />\n\n        {(props.uiSchema[\"ui:description\"] || props.schema.description) && (\n          <ArrayFieldDescription\n            key={`array-field-description-${props.idSchema.$id}`}\n            DescriptionField={props.DescriptionField}\n            idSchema={props.idSchema}\n            description={\n              props.uiSchema[\"ui:description\"] || props.schema.description\n            }\n          />\n        )}\n\n        <Container fluid key={`array-item-list-${props.idSchema.$id}`} className=\"p-0 m-0\">\n          {props.items && props.items.map(p => DefaultArrayItem(p))}\n\n          {props.canAdd && (\n            <Container className=\"\">\n              <Row className=\"mt-2\">\n                <Col xs={9}></Col>\n                <Col xs={3} className=\"py-4 col-lg-3 col-3\"> <AddButton\n                  className=\"array-item-add\"\n                  onClick={props.onAddClick}\n                  disabled={props.disabled || props.readonly}\n                /></Col>\n\n              </Row>\n            </Container>\n          )}\n        </Container></Col>\n\n      </Row>\n    </div>\n  );\n};\n\nexport default ArrayFieldTemplate;\n","import React from \"react\";\n\nimport Card from \"react-bootstrap/Card\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\n\nimport { ErrorListProps } from \"@rjsf/core\";\n\nconst ErrorList = ({ errors }: ErrorListProps) => (\n  <Card border=\"danger\" className=\"mb-4\">\n    <Card.Header className=\"alert-danger\">Errors</Card.Header>\n    <Card.Body className=\"p-0\">\n      <ListGroup >\n        {errors.map((error, i: number) => {\n          return (\n            <ListGroup.Item key={i} className=\"border-0\">\n              <span>{error.stack}</span>\n            </ListGroup.Item>\n          );\n        })}\n      </ListGroup>\n    </Card.Body>\n  </Card>\n);\n\nexport default ErrorList;\n","import React from \"react\";\nimport { FieldProps } from \"@rjsf/core\";\n\nexport interface DescriptionFieldProps extends Partial<FieldProps> {\n  description?: string;\n}\n\nconst DescriptionField = ({ description }: Partial<FieldProps>) => {\n  if (description) {\n    return <div><div className=\"mb-3\">{description}</div></div>;\n  }\n\n  return null;\n};\n\nexport default DescriptionField;\n","import React from \"react\";\nimport { FieldProps } from \"@rjsf/core\";\n\nexport interface TitleFieldProps extends Partial<FieldProps> {\n  title: string;\n}\n\nconst TitleField = ({ title }: Partial<FieldProps>) => (\n  <>\n    <div className=\"my-1\">\n      <h5>{title}</h5>\n      <hr className=\"border-0 bg-secondary\" style={{ height: \"1px\" }} />\n    </div>\n  </>\n);\n\nexport default TitleField;\n","import DescriptionField from '../DescriptionField/DescriptionField';\nimport TitleField from '../TitleField/TitleField';\n\nexport default {\n  DescriptionField,\n  TitleField,\n};\n","import React from \"react\";\n\nimport { FieldTemplateProps } from \"@rjsf/core\";\n\nimport Form from \"react-bootstrap/Form\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\n\nconst FieldTemplate = ({\n  id,\n  children,\n  displayLabel,\n  rawErrors = [],\n  rawHelp,\n  rawDescription,\n}: FieldTemplateProps) => {\n  return (\n    <Form.Group>\n      {children}\n      {displayLabel && rawDescription ? (\n        <Form.Text className={rawErrors.length > 0 ? \"text-danger\" : \"text-muted\"}>\n          {rawDescription}\n        </Form.Text>\n      ) : null}\n      {rawErrors.length > 0 && (\n        <ListGroup as=\"ul\">\n          {rawErrors.map((error: string) => {\n            return (\n              <ListGroup.Item as=\"li\" key={error} className=\"border-0 m-0 p-0\">\n                <small className=\"m-0 text-danger\">\n                  {error}\n                </small>\n              </ListGroup.Item>\n            );\n          })}\n        </ListGroup>\n      )}\n      {rawHelp && (\n        <Form.Text\n          className={rawErrors.length > 0 ? \"text-danger\" : \"text-muted\"}\n          id={id}>\n          {rawHelp}\n        </Form.Text>\n      )}\n    </Form.Group>\n  );\n};\n\nexport default FieldTemplate;\n","import React from \"react\";\n\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nimport { ObjectFieldTemplateProps } from \"@rjsf/core\";\n\nconst ObjectFieldTemplate = ({\n  DescriptionField,\n  description,\n  TitleField,\n  title,\n  properties,\n  required,\n  uiSchema,\n  idSchema,\n}: ObjectFieldTemplateProps) => {\n  return (\n    <>\n      {(uiSchema[\"ui:title\"] || title) && (\n        <TitleField\n          id={`${idSchema.$id}-title`}\n          title={title}\n          required={required}\n        />\n      )}\n      {description && (\n        <DescriptionField\n          id={`${idSchema.$id}-description`}\n          description={description}\n        />\n      )}\n      <Container fluid className=\"p-0\">\n        {properties.map((element: any, index: number) => (\n          <Row\n            key={index}\n            style={{ marginBottom: \"10px\" }}\n            className={element.hidden ? \"d-none\" : undefined}>\n            <Col xs={12}> {element.content}</Col>\n          </Row>\n        ))}\n      </Container>\n    </>\n  );\n};\n\nexport default ObjectFieldTemplate;\n","import React from \"react\";\n\nimport { WidgetProps } from \"@rjsf/core\";\nimport Form from \"react-bootstrap/Form\";\n\nconst CheckboxWidget = (props: WidgetProps) => {\n  const {\n    id,\n    value,\n    required,\n    disabled,\n    readonly,\n    label,\n    schema,\n    autofocus,\n    onChange,\n    onBlur,\n    onFocus,\n  } = props;\n\n  const _onChange = ({\n    target: { checked },\n  }: React.FocusEvent<HTMLInputElement>) => onChange(checked);\n  const _onBlur = ({\n    target: { checked },\n  }: React.FocusEvent<HTMLInputElement>) => onBlur(id, checked);\n  const _onFocus = ({\n    target: { checked },\n  }: React.FocusEvent<HTMLInputElement>) => onFocus(id, checked);\n\n  const desc = label || schema.description;\n  return (\n    <Form.Group  className={`checkbox ${disabled || readonly ? \"disabled\" : \"\"}`}>\n        <Form.Check\n          id={id}\n          label={desc}\n          checked={typeof value === \"undefined\" ? false : value}\n          required={required}\n          disabled={disabled || readonly}\n          autoFocus={autofocus}\n          onChange={_onChange}\n          type=\"checkbox\"\n          onBlur={_onBlur}\n          onFocus={_onFocus}\n        />\n        </Form.Group>\n  );\n};\n\nexport default CheckboxWidget;\n","import React from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport { WidgetProps } from \"@rjsf/core\";\n\nconst selectValue = (value: any, selected: any, all: any) => {\n  const at = all.indexOf(value);\n  const updated = selected.slice(0, at).concat(value, selected.slice(at));\n\n  // As inserting values at predefined index positions doesn't work with empty\n  // arrays, we need to reorder the updated selection to match the initial order\n  return updated.sort((a: any, b: any) => all.indexOf(a) > all.indexOf(b));\n};\n\nconst deselectValue = (value: any, selected: any) => {\n  return selected.filter((v: any) => v !== value);\n};\n\nconst CheckboxesWidget = ({\n  schema,\n  label,\n  id,\n  disabled,\n  options,\n  value,\n  autofocus,\n  readonly,\n  required,\n  onChange,\n  onBlur,\n  onFocus,\n}: WidgetProps) => {\n  const { enumOptions, enumDisabled, inline } = options;\n\n  const _onChange = (option: any) => ({\n    target: { checked },\n  }: React.ChangeEvent<HTMLInputElement>) => {\n    const all = (enumOptions as any).map(({ value }: any) => value);\n\n    if (checked) {\n      onChange(selectValue(option.value, value, all));\n    } else {\n      onChange(deselectValue(option.value, value));\n    }\n  };\n\n  const _onBlur = ({ target: { value } }: React.FocusEvent<HTMLInputElement>) =>\n    onBlur(id, value);\n  const _onFocus = ({\n    target: { value },\n  }: React.FocusEvent<HTMLInputElement>) => onFocus(id, value);\n\n  return (\n    <>\n      <Form.Label htmlFor={id}>{label || schema.title}</Form.Label>\n      <Form.Group>\n        {(enumOptions as any).map((option: any, index: number) => {\n          const checked = value.indexOf(option.value) !== -1;\n          const itemDisabled =\n            enumDisabled && (enumDisabled as any).indexOf(option.value) != -1;\n\n          return inline ? (\n            <Form key={index}>\n              <Form.Check\n                required={required}\n                inline\n                className=\"bg-transparent border-0\"\n                custom\n                checked={checked}\n                type={\"checkbox\"}\n                id={`${id}_${index}`}\n                label={option.label}\n                autoFocus={autofocus && index === 0}\n                onChange={_onChange(option)}\n                onBlur={_onBlur}\n                onFocus={_onFocus}\n                disabled={disabled || itemDisabled || readonly}\n              />\n            </Form>\n          ) : (\n            <Form key={index}>\n              <Form.Check\n                custom\n                required={required}\n                checked={checked}\n                className=\"bg-transparent border-0\"\n                type={\"checkbox\"}\n                id={`${id}_${index}`}\n                label={option.label}\n                autoFocus={autofocus && index === 0}\n                onChange={_onChange(option)}\n                onBlur={_onBlur}\n                onFocus={_onFocus}\n                disabled={disabled || itemDisabled || readonly}\n              />\n            </Form>\n          );\n        })}\n      </Form.Group>\n    </>\n  );\n};\n\nexport default CheckboxesWidget;\n","import React from \"react\";\n\nimport Form from \"react-bootstrap/Form\";\n\nimport { WidgetProps } from \"@rjsf/core\";\n\nexport interface TextWidgetProps extends WidgetProps {\n  type?: string;\n}\n\nconst TextWidget = ({\n  id,\n  placeholder,\n  required,\n  readonly,\n  disabled,\n  type,\n  label,\n  value,\n  onChange,\n  onBlur,\n  onFocus,\n  autofocus,\n  options,\n  schema,\n  rawErrors = [],\n\n}: TextWidgetProps) => {\n  const _onChange = ({\n    target: { value },\n  }: React.ChangeEvent<HTMLInputElement>) =>\n    onChange(value === \"\" ? options.emptyValue : value);\n  const _onBlur = ({ target: { value } }: React.FocusEvent<HTMLInputElement>) =>\n    onBlur(id, value);\n  const _onFocus = ({\n    target: { value },\n  }: React.FocusEvent<HTMLInputElement>) => onFocus(id, value);\n  const inputType = (type || schema.type) === 'string' ?  'text' : `${type || schema.type}`\n  \n  // const classNames = [rawErrors.length > 0 ? \"is-invalid\" : \"\", type === 'file' ? 'custom-file-label': \"\"]\n  return (\n    <Form.Group className=\"mb-0\">\n      <Form.Label className={rawErrors.length > 0 ? \"text-danger\" : \"\"}>\n        {label || schema.title}\n        {(label || schema.title) && required ? \"*\" : null}\n      </Form.Label>\n      <Form.Control\n        id={id}\n        placeholder={placeholder}\n        autoFocus={autofocus}\n        required={required}\n        disabled={disabled}\n        readOnly={readonly}\n        className={rawErrors.length > 0 ? \"is-invalid\" : \"\"}\n        list={schema.examples ? `examples_${id}` : undefined}\n        type={inputType}\n        value={value || value === 0 ? value : \"\"}\n        onChange={_onChange}\n        onBlur={_onBlur}\n        onFocus={_onFocus}\n\n      />\n      {schema.examples ? (\n        <datalist id={`examples_${id}`}>\n          {(schema.examples as string[])\n            .concat(schema.default ? ([schema.default] as string[]) : [])\n            .map((example: any) => {\n              return <option key={example} value={example} />;\n            })}\n        </datalist>\n      ) : null}\n    </Form.Group>\n  );\n};\n\nexport default TextWidget;\n","import React from \"react\";\nimport TextWidget, { TextWidgetProps } from \"../TextWidget\";\n\nconst ColorWidget = (props: TextWidgetProps) => {\n  return <TextWidget {...props} type=\"color\" />;\n};\n\nexport default ColorWidget;\n","import React from \"react\";\nimport TextWidget, { TextWidgetProps } from \"../TextWidget\";\n\nconst DateWidget = (props: TextWidgetProps) => {\n  return (\n    <TextWidget\n      {...props}   \n      type=\"date\"\n    />\n  );\n};\n\nexport default DateWidget;","import React from \"react\";\nimport { utils } from \"@rjsf/core\";\nimport TextWidget, { TextWidgetProps } from \"../TextWidget\";\n\nconst { localToUTC, utcToLocal } = utils;\n\nconst DateTimeWidget = (props: TextWidgetProps) => {\n  const value = utcToLocal(props.value);\n  const onChange = (value: any) => {\n    props.onChange(localToUTC(value));\n  };\n\n  return (\n    <TextWidget  \n      {...props}\n      type=\"datetime-local\"\n      value={value}\n      onChange={onChange}\n    />\n  );\n};\n\nexport default DateTimeWidget;\n","import React from \"react\";\nimport TextWidget, { TextWidgetProps } from \"../TextWidget\";\n\nconst EmailWidget = (props: TextWidgetProps) => {\n  return <TextWidget {...props} type=\"email\" />;\n};\n\nexport default EmailWidget;\n","import React from \"react\";\n\nimport Form from \"react-bootstrap/Form\";\n\nimport { WidgetProps } from \"@rjsf/core\";\n\nconst PasswordWidget = ({\n  id,\n  required,\n  readonly,\n  disabled,\n  value,\n  label,\n  onFocus,\n  onBlur,\n  onChange,\n  options,\n  autofocus,\n  schema,\n  rawErrors = [],\n}: WidgetProps) => {\n  const _onChange = ({\n    target: { value },\n  }: React.ChangeEvent<HTMLInputElement>) =>\n    onChange(value === \"\" ? options.emptyValue : value);\n  const _onBlur = ({ target: { value } }: React.FocusEvent<HTMLInputElement>) =>\n    onBlur(id, value);\n  const _onFocus = ({\n    target: { value },\n  }: React.FocusEvent<HTMLInputElement>) => onFocus(id, value);\n\n  return (\n    <Form.Group  className=\"mb-0\">\n      <Form.Label className={rawErrors.length > 0 ? \"text-danger\" : \"\"}>\n        {label || schema.title}\n        {(label || schema.title) && required ? \"*\" : null}\n      </Form.Label>\n      <Form.Control\n        id={id}\n        autoFocus={autofocus}\n        className={rawErrors.length > 0 ? \"is-invalid\" : \"\"}\n        required={required}\n        disabled={disabled}\n        readOnly={readonly}\n        type=\"password\"\n        value={value ? value : \"\"}\n        onFocus={_onFocus}\n        onBlur={_onBlur}\n        onChange={_onChange}\n      />\n    </Form.Group>\n  );\n};\n\nexport default PasswordWidget;\n","import React from \"react\";\n\nimport Form from \"react-bootstrap/Form\";\n\nimport { WidgetProps } from \"@rjsf/core\";\n\nconst RadioWidget = ({\n  id,\n  schema,\n  options,\n  value,\n  required,\n  disabled,\n  readonly,\n  label,\n  onChange,\n  onBlur,\n  onFocus,\n}: WidgetProps) => {\n  const { enumOptions, enumDisabled } = options;\n\n  const _onChange = ({\n    target: { value },\n  }: React.ChangeEvent<HTMLInputElement>) =>\n    onChange(schema.type == \"boolean\" ? value !== \"false\" : value);\n  const _onBlur = ({ target: { value } }: React.FocusEvent<HTMLInputElement>) =>\n    onBlur(id, value);\n  const _onFocus = ({\n    target: { value },\n  }: React.FocusEvent<HTMLInputElement>) => onFocus(id, value);\n\n  const inline = Boolean(options && options.inline);\n\n  return (\n    <Form.Group className=\"mb-0\">\n      <Form.Label className=\"d-block\">\n        {label || schema.title}\n        {(label || schema.title) && required ? \"*\" : null}\n      </Form.Label>\n      {(enumOptions as any).map((option: any, i: number) => {\n        const itemDisabled =\n          Array.isArray(enumDisabled) &&\n          enumDisabled.indexOf(option.value) !== -1;\n        const checked = option.value == value;\n\n        const radio = (\n          <Form.Check\n            inline={inline}\n            label={option.label}\n            id={option.label}\n            key={i}\n            name={id}\n            type=\"radio\"\n            disabled={disabled || itemDisabled || readonly}\n            checked={checked}\n            required={required}\n            value={option.value}\n            onChange={_onChange}\n            onBlur={_onBlur}\n            onFocus={_onFocus}\n          />\n        );\n        return radio;\n      })}\n    </Form.Group>\n  );\n};\n\nexport default RadioWidget;\n","import React from \"react\";\n\nimport Form from \"react-bootstrap/Form\";\n\nimport { utils } from \"@rjsf/core\";\nimport { WidgetProps } from \"@rjsf/core\";\n\nconst { rangeSpec } = utils;\n\nconst RangeWidget = ({\n  value,\n  readonly,\n  disabled,\n  onBlur,\n  onFocus,\n  options,\n  schema,\n  onChange,\n  required,\n  label,\n  id,\n}: WidgetProps) => {\n  let sliderProps = { value, label, id, ...rangeSpec(schema) };\n\n  const _onChange = ({\n    target: { value },\n  }: React.ChangeEvent<HTMLInputElement>) =>\n    onChange(value === \"\" ? options.emptyValue : value);\n  const _onBlur = ({ target: { value } }: React.FocusEvent<HTMLInputElement>) =>\n    onBlur(id, value);\n  const _onFocus = ({\n    target: { value },\n  }: React.FocusEvent<HTMLInputElement>) => onFocus(id, value);\n\n  return (\n    <Form.Group className=\"mb-0\">\n      <Form.Label>\n        {label}\n        {label && required ? \"*\" : null}\n      </Form.Label>\n      <Form.Control\n        type=\"range\"\n        required={required}\n        disabled={disabled}\n        readOnly={readonly}\n        onChange={_onChange}\n        onBlur={_onBlur}\n        onFocus={_onFocus}\n        {...sliderProps}\n      />\n      <span className=\"range-view\">{value}</span>\n    </Form.Group>\n  );\n};\n\nexport default RangeWidget;\n","import React from \"react\";\n\nimport Form from \"react-bootstrap/Form\";\n\nimport { WidgetProps } from \"@rjsf/core\";\nimport { utils } from \"@rjsf/core\";\n\nconst { asNumber, guessType } = utils;\n\nconst nums = new Set([\"number\", \"integer\"]);\n\n/**\n * This is a silly limitation in the DOM where option change event values are\n * always retrieved as strings.\n */\nconst processValue = (schema: any, value: any) => {\n  // \"enum\" is a reserved word, so only \"type\" and \"items\" can be destructured\n  const { type, items } = schema;\n  if (value === \"\") {\n    return undefined;\n  } else if (type === \"array\" && items && nums.has(items.type)) {\n    return value.map(asNumber);\n  } else if (type === \"boolean\") {\n    return value === \"true\";\n  } else if (type === \"number\") {\n    return asNumber(value);\n  }\n\n  // If type is undefined, but an enum is present, try and infer the type from\n  // the enum values\n  if (schema.enum) {\n    if (schema.enum.every((x: any) => guessType(x) === \"number\")) {\n      return asNumber(value);\n    } else if (schema.enum.every((x: any) => guessType(x) === \"boolean\")) {\n      return value === \"true\";\n    }\n  }\n\n  return value;\n};\n\nconst SelectWidget = ({\n  schema,\n  id,\n  options,\n  label,\n  required,\n  disabled,\n  readonly,\n  value,\n  multiple,\n  autofocus,\n  onChange,\n  onBlur,\n  onFocus,\n  placeholder,\n  rawErrors = [],\n}: WidgetProps) => {\n  const { enumOptions, enumDisabled } = options;\n\n  const emptyValue = multiple ? [] : \"\";\n\n  function getValue(\n    event: React.FocusEvent | React.ChangeEvent | any,\n    multiple: Boolean\n  ) {\n    if (multiple) {\n      return [].slice\n        .call(event.target.options as any)\n        .filter((o: any) => o.selected)\n        .map((o: any) => o.value);\n    } else {\n      return event.target.value;\n    }\n  }\n\n  return (\n    <Form.Group>\n      <Form.Label className={rawErrors.length > 0 ? \"text-danger\" : \"\"}>\n        {label || schema.title}\n        {(label || schema.title) && required ? \"*\" : null}\n      </Form.Label>\n      <Form.Control\n        as=\"select\"\n        custom\n        id={id}\n        value={typeof value === \"undefined\" ? emptyValue : value}\n        required={required}\n        multiple={multiple}\n        disabled={disabled}\n        readOnly={readonly}\n        autoFocus={autofocus}\n        className={rawErrors.length > 0 ? \"is-invalid\" : \"\"}\n        onBlur={\n          onBlur &&\n          ((event: React.FocusEvent) => {\n            const newValue = getValue(event, multiple);\n            onBlur(id, processValue(schema, newValue));\n          })\n        }\n        onFocus={\n          onFocus &&\n          ((event: React.FocusEvent) => {\n            const newValue = getValue(event, multiple);\n            onFocus(id, processValue(schema, newValue));\n          })\n        }\n        onChange={(event: React.ChangeEvent) => {\n          const newValue = getValue(event, multiple);\n          onChange(processValue(schema, newValue));\n        }}>\n        {!multiple && schema.default === undefined && (\n          <option value=\"\">{placeholder}</option>\n        )}\n        {(enumOptions as any).map(({ value, label }: any, i: number) => {\n          const disabled: any =\n            Array.isArray(enumDisabled) &&\n            (enumDisabled as any).indexOf(value) != -1;\n          return (\n            <option key={i} id={label} value={value} disabled={disabled}>\n              {label}\n            </option>\n          );\n        })}\n      </Form.Control>\n    </Form.Group>\n  );\n};\n\nexport default SelectWidget;\n","import React from \"react\";\n\nimport { WidgetProps } from \"@rjsf/core\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\n\ntype CustomWidgetProps = WidgetProps & {\n  options: any;\n};\n\nconst TextareaWidget = ({\n  id,\n  placeholder,\n  value,\n  required,\n  disabled,\n  autofocus,\n  label,\n  readonly,\n  onBlur,\n  onFocus,\n  onChange,\n  options,\n  schema,\n  rawErrors = [],\n}: CustomWidgetProps) => {\n  const _onChange = ({\n    target: { value },\n  }: React.ChangeEvent<HTMLTextAreaElement>) =>\n    onChange(value === \"\" ? options.emptyValue : value);\n  const _onBlur = ({\n    target: { value },\n  }: React.FocusEvent<HTMLTextAreaElement>) => onBlur(id, value);\n  const _onFocus = ({\n    target: { value },\n  }: React.FocusEvent<HTMLTextAreaElement>) => onFocus(id, value);\n\n  return (\n    <>\n      <label htmlFor={id}>\n        {label || schema.title}\n        {required && (\n          <span\n            aria-hidden\n            className={rawErrors.length > 0 ? \"text-danger ml-1\" : \"ml-1\"}>\n            &thinsp;{\"*\"}\n          </span>\n        )}\n      </label>\n      <InputGroup>\n        <FormControl\n          id={id}\n          as=\"textarea\"\n          placeholder={placeholder}\n          disabled={disabled}\n          readOnly={readonly}\n          value={value}\n          required={required}\n          autoFocus={autofocus}\n          rows={options.rows || 5}\n          onChange={_onChange}\n          onBlur={_onBlur}\n          onFocus={_onFocus}\n        />\n      </InputGroup>\n    </>\n  );\n};\n\nexport default TextareaWidget;\n","import React from \"react\";\n\nimport Form from \"react-bootstrap/Form\";\n\nimport { WidgetProps } from \"@rjsf/core\";\n\nconst UpDownWidget = ({\n  id,\n  required,\n  readonly,\n  disabled,\n  label,\n  value,\n  onChange,\n  onBlur,\n  onFocus,\n  autofocus,\n}: WidgetProps) => {\n  const _onChange = ({\n    target: { value },\n  }: React.ChangeEvent<HTMLInputElement>) => onChange(value);\n  const _onBlur = ({ target: { value } }: React.FocusEvent<HTMLInputElement>) =>\n    onBlur(id, value);\n  const _onFocus = ({\n    target: { value },\n  }: React.FocusEvent<HTMLInputElement>) => onFocus(id, value);\n\n  return (\n    <Form.Group  className=\"mb-0\">\n      <Form.Label>\n        {label}\n        {label && required ? \"*\" : null}\n      </Form.Label>\n      <Form.Control\n        id={id}\n        autoFocus={autofocus}\n        required={required}\n        type=\"number\"\n        disabled={disabled}\n        readOnly={readonly}\n        value={value || value === 0 ? value : \"\"}\n        onChange={_onChange}\n        onBlur={_onBlur}\n        onFocus={_onFocus}\n      />\n    </Form.Group>\n  );\n};\n\nexport default UpDownWidget;\n","import React from \"react\";\nimport TextWidget, { TextWidgetProps } from \"../TextWidget\";\n\nconst URLWidget = (props: TextWidgetProps) => {\n  return <TextWidget {...props} type=\"url\" />;\n};\n\nexport default URLWidget;\n","import React from \"react\";\nimport TextWidget, { TextWidgetProps } from \"../TextWidget\";\n\nconst FileWidget = (props: TextWidgetProps) => {\n  return <TextWidget {...props} type=\"file\"/>;\n};\n\nexport default FileWidget;\n","import CheckboxWidget from \"../CheckboxWidget/CheckboxWidget\";\nimport CheckboxesWidget from \"../CheckboxesWidget/CheckboxesWidget\";\nimport ColorWidget from \"../ColorWidget/ColorWidget\";\nimport DateWidget from \"../DateWidget/DateWidget\";\nimport DateTimeWidget from \"../DateTimeWidget/DateTimeWidget\";\nimport EmailWidget from \"../EmailWidget/EmailWidget\";\nimport PasswordWidget from \"../PasswordWidget/PasswordWidget\";\nimport RadioWidget from \"../RadioWidget/RadioWidget\";\nimport RangeWidget from \"../RangeWidget/RangeWidget\";\nimport SelectWidget from \"../SelectWidget/SelectWidget\";\nimport TextareaWidget from \"../TextareaWidget/TextareaWidget\";\nimport TextWidget from \"../TextWidget/TextWidget\";\nimport UpDownWidget from \"../UpDownWidget/UpDownWidget\";\nimport URLWidget from \"../URLWidget/URLWidget\";\nimport FileWidget from \"../FileWidget/FileWidget\";\n\nexport default {\n  CheckboxWidget,\n  CheckboxesWidget,\n  ColorWidget,\n  DateWidget,\n  DateTimeWidget,\n  EmailWidget,\n  PasswordWidget,\n  RadioWidget,\n  RangeWidget,\n  SelectWidget,\n  TextareaWidget,\n  TextWidget,\n  UpDownWidget,\n  URLWidget,\n  FileWidget\n};\n","import React from \"react\";\n\nimport Button from \"react-bootstrap/Button\";\n\nimport ArrayFieldTemplate from \"../ArrayFieldTemplate\";\nimport ErrorList from \"../ErrorList\";\nimport Fields from \"../Fields\";\nimport FieldTemplate from \"../FieldTemplate\";\nimport ObjectFieldTemplate from \"../ObjectFieldTemplate\";\nimport Widgets from \"../Widgets\";\n\nimport { ThemeProps } from \"@rjsf/core\";\nimport { utils } from \"@rjsf/core\";\nconst { getDefaultRegistry } = utils;\n\nconst { fields, widgets } = getDefaultRegistry();\n\nconst DefaultChildren = () => (\n  <div>\n    <Button variant=\"primary\" type=\"submit\">\n      Submit\n    </Button>\n  </div>\n);\n\nconst Theme: ThemeProps = {\n  children: <DefaultChildren />,\n  ArrayFieldTemplate,\n  fields: { ...fields, ...Fields },\n  FieldTemplate,\n  ObjectFieldTemplate,\n  widgets: { ...widgets, ...Widgets },\n  ErrorList,\n};\n\nexport default Theme;\n","import { withTheme, FormProps } from \"@rjsf/core\";\n\nimport Theme from \"../Theme\";\nimport { StatelessComponent } from \"react\";\n\nconst Form:\n  | React.ComponentClass<FormProps<any>>\n  | StatelessComponent<FormProps<any>> = withTheme(Theme);\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}