{"ast":null,"code":"import { utils, withTheme } from '@rjsf/core';\nimport React from 'react';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport AddIcon from '@material-ui/icons/Add';\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Remove from '@material-ui/icons/Remove';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { makeStyles } from '@material-ui/styles';\nimport Divider from '@material-ui/core/Divider';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport TextField from '@material-ui/core/TextField';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Slider from '@material-ui/core/Slider';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure undefined\");\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar AddButton = function AddButton(props) {\n  return React.createElement(Button, Object.assign({}, props, {\n    color: \"secondary\"\n  }), React.createElement(AddIcon, null), \" Add Item\");\n};\n\nvar mappings = {\n  remove: Remove,\n  plus: AddIcon,\n  \"arrow-up\": ArrowUpward,\n  \"arrow-down\": ArrowDownward\n};\n\nvar IconButton = function IconButton(props) {\n  var icon = props.icon,\n      iconProps = props.iconProps,\n      otherProps = _objectWithoutPropertiesLoose(props, [\"icon\", \"className\", \"iconProps\"]);\n\n  var IconComp = mappings[icon];\n  return React.createElement(Button, Object.assign({}, otherProps, {\n    size: \"small\"\n  }), React.createElement(IconComp, Object.assign({}, iconProps)));\n};\n\nvar isMultiSelect = utils.isMultiSelect,\n    getDefaultRegistry = utils.getDefaultRegistry;\n\nvar ArrayFieldTemplate = function ArrayFieldTemplate(props) {\n  var schema = props.schema,\n      _props$registry = props.registry,\n      registry = _props$registry === void 0 ? getDefaultRegistry() : _props$registry; // TODO: update types so we don't have to cast registry as any\n\n  if (isMultiSelect(schema, registry.rootSchema)) {\n    return React.createElement(DefaultFixedArrayFieldTemplate, Object.assign({}, props));\n  } else {\n    return React.createElement(DefaultNormalArrayFieldTemplate, Object.assign({}, props));\n  }\n};\n\nvar ArrayFieldTitle = function ArrayFieldTitle(_ref) {\n  var TitleField = _ref.TitleField,\n      idSchema = _ref.idSchema,\n      title = _ref.title,\n      required = _ref.required;\n\n  if (!title) {\n    return null;\n  }\n\n  var id = idSchema.$id + \"__title\";\n  return React.createElement(TitleField, {\n    id: id,\n    title: title,\n    required: required\n  });\n};\n\nvar ArrayFieldDescription = function ArrayFieldDescription(_ref2) {\n  var DescriptionField = _ref2.DescriptionField,\n      idSchema = _ref2.idSchema,\n      description = _ref2.description;\n\n  if (!description) {\n    return null;\n  }\n\n  var id = idSchema.$id + \"__description\";\n  return React.createElement(DescriptionField, {\n    id: id,\n    description: description\n  });\n}; // Used in the two templates\n\n\nvar DefaultArrayItem = function DefaultArrayItem(props) {\n  var btnStyle = {\n    flex: 1,\n    paddingLeft: 6,\n    paddingRight: 6,\n    fontWeight: 'bold',\n    minWidth: 0\n  };\n  return React.createElement(Grid, {\n    container: true,\n    key: props.key,\n    alignItems: \"center\"\n  }, React.createElement(Grid, {\n    item: true,\n    xs: true,\n    style: {\n      overflow: \"auto\"\n    }\n  }, React.createElement(Box, {\n    mb: 2\n  }, React.createElement(Paper, {\n    elevation: 2\n  }, React.createElement(Box, {\n    p: 2\n  }, props.children)))), props.hasToolbar && React.createElement(Grid, {\n    item: true\n  }, (props.hasMoveUp || props.hasMoveDown) && React.createElement(IconButton, {\n    icon: \"arrow-up\",\n    className: \"array-item-move-up\",\n    tabIndex: -1,\n    style: btnStyle,\n    iconProps: {\n      fontSize: 'small'\n    },\n    disabled: props.disabled || props.readonly || !props.hasMoveUp,\n    onClick: props.onReorderClick(props.index, props.index - 1)\n  }), (props.hasMoveUp || props.hasMoveDown) && React.createElement(IconButton, {\n    icon: \"arrow-down\",\n    tabIndex: -1,\n    style: btnStyle,\n    iconProps: {\n      fontSize: 'small'\n    },\n    disabled: props.disabled || props.readonly || !props.hasMoveDown,\n    onClick: props.onReorderClick(props.index, props.index + 1)\n  }), props.hasRemove && React.createElement(IconButton, {\n    icon: \"remove\",\n    tabIndex: -1,\n    style: btnStyle,\n    iconProps: {\n      fontSize: 'small'\n    },\n    disabled: props.disabled || props.readonly,\n    onClick: props.onDropIndexClick(props.index)\n  })));\n};\n\nvar DefaultFixedArrayFieldTemplate = function DefaultFixedArrayFieldTemplate(props) {\n  return React.createElement(\"fieldset\", {\n    className: props.className\n  }, React.createElement(ArrayFieldTitle, {\n    key: \"array-field-title-\" + props.idSchema.$id,\n    TitleField: props.TitleField,\n    idSchema: props.idSchema,\n    title: props.uiSchema['ui:title'] || props.title,\n    required: props.required\n  }), (props.uiSchema['ui:description'] || props.schema.description) && React.createElement(\"div\", {\n    className: \"field-description\",\n    key: \"field-description-\" + props.idSchema.$id\n  }, props.uiSchema['ui:description'] || props.schema.description), React.createElement(\"div\", {\n    className: \"row array-item-list\",\n    key: \"array-item-list-\" + props.idSchema.$id\n  }, props.items && props.items.map(DefaultArrayItem)), props.canAdd && React.createElement(AddButton, {\n    className: \"array-item-add\",\n    onClick: props.onAddClick,\n    disabled: props.disabled || props.readonly\n  }));\n};\n\nvar DefaultNormalArrayFieldTemplate = function DefaultNormalArrayFieldTemplate(props) {\n  return React.createElement(Paper, {\n    elevation: 2\n  }, React.createElement(Box, {\n    p: 2\n  }, React.createElement(ArrayFieldTitle, {\n    key: \"array-field-title-\" + props.idSchema.$id,\n    TitleField: props.TitleField,\n    idSchema: props.idSchema,\n    title: props.uiSchema['ui:title'] || props.title,\n    required: props.required\n  }), (props.uiSchema['ui:description'] || props.schema.description) && React.createElement(ArrayFieldDescription, {\n    key: \"array-field-description-\" + props.idSchema.$id,\n    DescriptionField: props.DescriptionField,\n    idSchema: props.idSchema,\n    description: props.uiSchema['ui:description'] || props.schema.description\n  }), React.createElement(Grid, {\n    container: true,\n    key: \"array-item-list-\" + props.idSchema.$id\n  }, props.items && props.items.map(function (p) {\n    return DefaultArrayItem(p);\n  }), props.canAdd && React.createElement(Grid, {\n    container: true,\n    justify: \"flex-end\"\n  }, React.createElement(Grid, {\n    item: true\n  }, React.createElement(Box, {\n    mt: 2\n  }, React.createElement(AddButton, {\n    className: \"array-item-add\",\n    onClick: props.onAddClick,\n    disabled: props.disabled || props.readonly\n  })))))));\n};\n\nvar ErrorList = function ErrorList(_ref) {\n  var errors = _ref.errors;\n  return React.createElement(Paper, {\n    elevation: 2\n  }, React.createElement(Box, {\n    mb: 2,\n    p: 2\n  }, React.createElement(Typography, {\n    variant: \"h6\"\n  }, \"Errors\"), React.createElement(List, {\n    dense: true\n  }, errors.map(function (error, i) {\n    return React.createElement(ListItem, {\n      key: i\n    }, React.createElement(ListItemIcon, null, React.createElement(ErrorIcon, {\n      color: \"error\"\n    })), React.createElement(ListItemText, {\n      primary: error.stack\n    }));\n  }))));\n};\n\nvar useStyles = /*#__PURE__*/makeStyles({\n  root: {\n    marginTop: 5\n  }\n});\n\nvar DescriptionField = function DescriptionField(_ref) {\n  var description = _ref.description;\n\n  if (description) {\n    var classes = useStyles();\n    return React.createElement(Typography, {\n      variant: \"subtitle2\",\n      className: classes.root\n    }, description);\n  }\n\n  return null;\n};\n\nvar TitleField = function TitleField(_ref) {\n  var title = _ref.title;\n  return React.createElement(React.Fragment, null, React.createElement(Box, {\n    mb: 1,\n    mt: 1\n  }, React.createElement(Typography, {\n    variant: \"h5\"\n  }, title), React.createElement(Divider, null)));\n};\n\nvar Fields = {\n  DescriptionField: DescriptionField,\n  TitleField: TitleField\n};\nvar ADDITIONAL_PROPERTY_FLAG = utils.ADDITIONAL_PROPERTY_FLAG;\n\nvar WrapIfAdditional = function WrapIfAdditional(_ref) {\n  var children = _ref.children,\n      disabled = _ref.disabled,\n      id = _ref.id,\n      label = _ref.label,\n      onDropPropertyClick = _ref.onDropPropertyClick,\n      onKeyChange = _ref.onKeyChange,\n      readonly = _ref.readonly,\n      required = _ref.required,\n      schema = _ref.schema;\n  var keyLabel = label + \" Key\"; // i18n ?\n\n  var additional = schema.hasOwnProperty(ADDITIONAL_PROPERTY_FLAG);\n  var btnStyle = {\n    flex: 1,\n    paddingLeft: 6,\n    paddingRight: 6,\n    fontWeight: \"bold\"\n  };\n\n  if (!additional) {\n    return React.createElement(React.Fragment, null, children);\n  }\n\n  var handleBlur = function handleBlur(_ref2) {\n    var target = _ref2.target;\n    return onKeyChange(target.value);\n  };\n\n  return React.createElement(Grid, {\n    container: true,\n    key: id + \"-key\",\n    alignItems: \"center\",\n    spacing: 2\n  }, React.createElement(Grid, {\n    item: true,\n    xs: true\n  }, React.createElement(FormControl, {\n    fullWidth: true,\n    required: required\n  }, React.createElement(InputLabel, null, keyLabel), React.createElement(Input, {\n    defaultValue: label,\n    disabled: disabled || readonly,\n    id: id + \"-key\",\n    name: id + \"-key\",\n    onBlur: !readonly ? handleBlur : undefined,\n    type: \"text\"\n  }))), React.createElement(Grid, {\n    item: true,\n    xs: true\n  }, children), React.createElement(Grid, {\n    item: true\n  }, React.createElement(IconButton, {\n    icon: \"remove\",\n    tabIndex: -1,\n    style: btnStyle,\n    disabled: disabled || readonly,\n    onClick: onDropPropertyClick(label)\n  })));\n};\n\nvar FieldTemplate = function FieldTemplate(_ref) {\n  var id = _ref.id,\n      children = _ref.children,\n      classNames = _ref.classNames,\n      disabled = _ref.disabled,\n      displayLabel = _ref.displayLabel,\n      hidden = _ref.hidden,\n      label = _ref.label,\n      onDropPropertyClick = _ref.onDropPropertyClick,\n      onKeyChange = _ref.onKeyChange,\n      readonly = _ref.readonly,\n      required = _ref.required,\n      _ref$rawErrors = _ref.rawErrors,\n      rawErrors = _ref$rawErrors === void 0 ? [] : _ref$rawErrors,\n      rawHelp = _ref.rawHelp,\n      rawDescription = _ref.rawDescription,\n      schema = _ref.schema;\n\n  if (hidden) {\n    return children;\n  }\n\n  return React.createElement(WrapIfAdditional, {\n    classNames: classNames,\n    disabled: disabled,\n    id: id,\n    label: label,\n    onDropPropertyClick: onDropPropertyClick,\n    onKeyChange: onKeyChange,\n    readonly: readonly,\n    required: required,\n    schema: schema\n  }, React.createElement(FormControl, {\n    fullWidth: true,\n    error: rawErrors.length ? true : false,\n    required: required\n  }, children, displayLabel && rawDescription ? React.createElement(Typography, {\n    variant: \"caption\",\n    color: \"textSecondary\"\n  }, rawDescription) : null, rawErrors.length > 0 && React.createElement(List, {\n    dense: true,\n    disablePadding: true\n  }, rawErrors.map(function (error, i) {\n    return React.createElement(ListItem, {\n      key: i,\n      disableGutters: true\n    }, React.createElement(FormHelperText, {\n      id: id\n    }, error));\n  })), rawHelp && React.createElement(FormHelperText, {\n    id: id\n  }, rawHelp)));\n};\n\nvar canExpand = utils.canExpand;\nvar useStyles$1 = /*#__PURE__*/makeStyles({\n  root: {\n    marginTop: 10\n  }\n});\n\nvar ObjectFieldTemplate = function ObjectFieldTemplate(_ref) {\n  var DescriptionField = _ref.DescriptionField,\n      description = _ref.description,\n      TitleField = _ref.TitleField,\n      title = _ref.title,\n      properties = _ref.properties,\n      required = _ref.required,\n      disabled = _ref.disabled,\n      readonly = _ref.readonly,\n      uiSchema = _ref.uiSchema,\n      idSchema = _ref.idSchema,\n      schema = _ref.schema,\n      formData = _ref.formData,\n      onAddClick = _ref.onAddClick;\n  var classes = useStyles$1();\n  return React.createElement(React.Fragment, null, (uiSchema['ui:title'] || title) && React.createElement(TitleField, {\n    id: idSchema.$id + \"-title\",\n    title: title,\n    required: required\n  }), description && React.createElement(DescriptionField, {\n    id: idSchema.$id + \"-description\",\n    description: description\n  }), React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    className: classes.root\n  }, properties.map(function (element, index) {\n    return (// Remove the <Grid> if the inner element is hidden as the <Grid>\n      // itself would otherwise still take up space.\n      element.hidden ? element.content : React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        key: index,\n        style: {\n          marginBottom: \"10px\"\n        }\n      }, element.content)\n    );\n  }), canExpand(schema, uiSchema, formData) && React.createElement(Grid, {\n    container: true,\n    justify: 'flex-end'\n  }, React.createElement(Grid, {\n    item: true\n  }, React.createElement(AddButton, {\n    className: 'object-property-expand',\n    onClick: onAddClick(schema),\n    disabled: disabled || readonly\n  })))));\n};\n\nvar schemaRequiresTrueValue = utils.schemaRequiresTrueValue;\n\nvar CheckboxWidget = function CheckboxWidget(props) {\n  var schema = props.schema,\n      id = props.id,\n      value = props.value,\n      disabled = props.disabled,\n      readonly = props.readonly,\n      label = props.label,\n      autofocus = props.autofocus,\n      onChange = props.onChange,\n      onBlur = props.onBlur,\n      onFocus = props.onFocus; // Because an unchecked checkbox will cause html5 validation to fail, only add\n  // the \"required\" attribute if the field value must be \"true\", due to the\n  // \"const\" or \"enum\" keywords\n\n  var required = schemaRequiresTrueValue(schema);\n\n  var _onChange = function _onChange(_ref, checked) {\n    _objectDestructuringEmpty(_ref);\n\n    return onChange(checked);\n  };\n\n  var _onBlur = function _onBlur(_ref2) {\n    var value = _ref2.target.value;\n    return onBlur(id, value);\n  };\n\n  var _onFocus = function _onFocus(_ref3) {\n    var value = _ref3.target.value;\n    return onFocus(id, value);\n  };\n\n  return React.createElement(FormControlLabel, {\n    control: React.createElement(Checkbox, {\n      id: id,\n      checked: typeof value === \"undefined\" ? false : value,\n      required: required,\n      disabled: disabled || readonly,\n      autoFocus: autofocus,\n      onChange: _onChange,\n      onBlur: _onBlur,\n      onFocus: _onFocus\n    }),\n    label: label\n  });\n};\n\nvar selectValue = function selectValue(value, selected, all) {\n  var at = all.indexOf(value);\n  var updated = selected.slice(0, at).concat(value, selected.slice(at)); // As inserting values at predefined index positions doesn't work with empty\n  // arrays, we need to reorder the updated selection to match the initial order\n\n  return updated.sort(function (a, b) {\n    return all.indexOf(a) > all.indexOf(b);\n  });\n};\n\nvar deselectValue = function deselectValue(value, selected) {\n  return selected.filter(function (v) {\n    return v !== value;\n  });\n};\n\nvar CheckboxesWidget = function CheckboxesWidget(_ref) {\n  var schema = _ref.schema,\n      label = _ref.label,\n      id = _ref.id,\n      disabled = _ref.disabled,\n      options = _ref.options,\n      value = _ref.value,\n      autofocus = _ref.autofocus,\n      readonly = _ref.readonly,\n      required = _ref.required,\n      onChange = _ref.onChange,\n      onBlur = _ref.onBlur,\n      onFocus = _ref.onFocus;\n  var enumOptions = options.enumOptions,\n      enumDisabled = options.enumDisabled,\n      inline = options.inline;\n\n  var _onChange = function _onChange(option) {\n    return function (_ref2) {\n      var checked = _ref2.target.checked;\n      var all = enumOptions.map(function (_ref3) {\n        var value = _ref3.value;\n        return value;\n      });\n\n      if (checked) {\n        onChange(selectValue(option.value, value, all));\n      } else {\n        onChange(deselectValue(option.value, value));\n      }\n    };\n  };\n\n  var _onBlur = function _onBlur(_ref4) {\n    var value = _ref4.target.value;\n    return onBlur(id, value);\n  };\n\n  var _onFocus = function _onFocus(_ref5) {\n    var value = _ref5.target.value;\n    return onFocus(id, value);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(FormLabel, {\n    required: required,\n    htmlFor: id\n  }, label || schema.title), React.createElement(FormGroup, {\n    row: !!inline\n  }, enumOptions.map(function (option, index) {\n    var checked = value.indexOf(option.value) !== -1;\n    var itemDisabled = enumDisabled && enumDisabled.indexOf(option.value) != -1;\n    var checkbox = React.createElement(Checkbox, {\n      id: id + \"_\" + index,\n      checked: checked,\n      disabled: disabled || itemDisabled || readonly,\n      autoFocus: autofocus && index === 0,\n      onChange: _onChange(option),\n      onBlur: _onBlur,\n      onFocus: _onFocus\n    });\n    return React.createElement(FormControlLabel, {\n      control: checkbox,\n      key: index,\n      label: option.label\n    });\n  })));\n};\n\nvar getDisplayLabel = utils.getDisplayLabel;\n\nvar TextWidget = function TextWidget(_ref) {\n  var id = _ref.id,\n      placeholder = _ref.placeholder,\n      required = _ref.required,\n      readonly = _ref.readonly,\n      disabled = _ref.disabled,\n      type = _ref.type,\n      label = _ref.label,\n      value = _ref.value,\n      onChange = _ref.onChange,\n      onBlur = _ref.onBlur,\n      onFocus = _ref.onFocus,\n      autofocus = _ref.autofocus,\n      options = _ref.options,\n      schema = _ref.schema,\n      uiSchema = _ref.uiSchema,\n      _ref$rawErrors = _ref.rawErrors,\n      rawErrors = _ref$rawErrors === void 0 ? [] : _ref$rawErrors,\n      textFieldProps = _objectWithoutPropertiesLoose(_ref, [\"id\", \"placeholder\", \"required\", \"readonly\", \"disabled\", \"type\", \"label\", \"value\", \"onChange\", \"onBlur\", \"onFocus\", \"autofocus\", \"options\", \"schema\", \"uiSchema\", \"rawErrors\", \"formContext\"]);\n\n  var _onChange = function _onChange(_ref2) {\n    var value = _ref2.target.value;\n    return onChange(value === \"\" ? options.emptyValue : value);\n  };\n\n  var _onBlur = function _onBlur(_ref3) {\n    var value = _ref3.target.value;\n    return onBlur(id, value);\n  };\n\n  var _onFocus = function _onFocus(_ref4) {\n    var value = _ref4.target.value;\n    return onFocus(id, value);\n  };\n\n  var displayLabel = getDisplayLabel(schema, uiSchema\n  /* TODO: , rootSchema */\n  );\n  var inputType = (type || schema.type) === 'string' ? 'text' : \"\" + (type || schema.type);\n  return React.createElement(TextField, Object.assign({\n    id: id,\n    placeholder: placeholder,\n    label: displayLabel ? label || schema.title : false,\n    autoFocus: autofocus,\n    required: required,\n    disabled: disabled || readonly,\n    type: inputType,\n    value: value || value === 0 ? value : \"\",\n    error: rawErrors.length > 0,\n    onChange: _onChange,\n    onBlur: _onBlur,\n    onFocus: _onFocus\n  }, textFieldProps));\n};\n\nvar ColorWidget = function ColorWidget(props) {\n  return React.createElement(TextWidget, Object.assign({\n    type: \"color\"\n  }, props));\n};\n\nvar DateWidget = function DateWidget(props) {\n  return React.createElement(TextWidget, Object.assign({\n    type: \"date\",\n    InputLabelProps: {\n      shrink: true\n    }\n  }, props));\n};\n\nvar localToUTC = utils.localToUTC,\n    utcToLocal = utils.utcToLocal;\n\nvar DateTimeWidget = function DateTimeWidget(props) {\n  var value = utcToLocal(props.value);\n\n  var onChange = function onChange(value) {\n    props.onChange(localToUTC(value));\n  };\n\n  return React.createElement(TextWidget, Object.assign({\n    type: \"datetime-local\",\n    InputLabelProps: {\n      shrink: true\n    }\n  }, props, {\n    value: value,\n    onChange: onChange\n  }));\n};\n\nvar EmailWidget = function EmailWidget(props) {\n  return React.createElement(TextWidget, Object.assign({\n    type: \"email\"\n  }, props));\n};\n\nvar PasswordWidget = function PasswordWidget(_ref) {\n  var id = _ref.id,\n      required = _ref.required,\n      readonly = _ref.readonly,\n      disabled = _ref.disabled,\n      value = _ref.value,\n      label = _ref.label,\n      onFocus = _ref.onFocus,\n      onBlur = _ref.onBlur,\n      onChange = _ref.onChange,\n      options = _ref.options,\n      autofocus = _ref.autofocus,\n      schema = _ref.schema,\n      _ref$rawErrors = _ref.rawErrors,\n      rawErrors = _ref$rawErrors === void 0 ? [] : _ref$rawErrors;\n\n  var _onChange = function _onChange(_ref2) {\n    var value = _ref2.target.value;\n    return onChange(value === \"\" ? options.emptyValue : value);\n  };\n\n  var _onBlur = function _onBlur(_ref3) {\n    var value = _ref3.target.value;\n    return onBlur(id, value);\n  };\n\n  var _onFocus = function _onFocus(_ref4) {\n    var value = _ref4.target.value;\n    return onFocus(id, value);\n  };\n\n  return React.createElement(TextField, {\n    id: id,\n    label: label || schema.title,\n    autoFocus: autofocus,\n    required: required,\n    disabled: disabled || readonly,\n    type: \"password\",\n    value: value ? value : \"\",\n    error: rawErrors.length > 0,\n    onFocus: _onFocus,\n    onBlur: _onBlur,\n    onChange: _onChange\n  });\n};\n\nvar RadioWidget = function RadioWidget(_ref) {\n  var id = _ref.id,\n      schema = _ref.schema,\n      options = _ref.options,\n      value = _ref.value,\n      required = _ref.required,\n      disabled = _ref.disabled,\n      readonly = _ref.readonly,\n      label = _ref.label,\n      onChange = _ref.onChange,\n      onBlur = _ref.onBlur,\n      onFocus = _ref.onFocus;\n  var enumOptions = options.enumOptions,\n      enumDisabled = options.enumDisabled;\n\n  var _onChange = function _onChange(_ref2, value) {\n    _objectDestructuringEmpty(_ref2);\n\n    return onChange(schema.type == \"boolean\" ? value !== \"false\" : value);\n  };\n\n  var _onBlur = function _onBlur(_ref3) {\n    var value = _ref3.target.value;\n    return onBlur(id, value);\n  };\n\n  var _onFocus = function _onFocus(_ref4) {\n    var value = _ref4.target.value;\n    return onFocus(id, value);\n  };\n\n  var row = options ? options.inline : false;\n  return React.createElement(React.Fragment, null, React.createElement(FormLabel, {\n    required: required,\n    htmlFor: id\n  }, label || schema.title), React.createElement(RadioGroup, {\n    value: \"\" + value,\n    row: row,\n    onChange: _onChange,\n    onBlur: _onBlur,\n    onFocus: _onFocus\n  }, enumOptions.map(function (option, i) {\n    var itemDisabled = enumDisabled && enumDisabled.indexOf(option.value) != -1;\n    var radio = React.createElement(FormControlLabel, {\n      control: React.createElement(Radio, {\n        color: \"primary\",\n        key: i\n      }),\n      label: \"\" + option.label,\n      value: \"\" + option.value,\n      key: i,\n      disabled: disabled || itemDisabled || readonly\n    });\n    return radio;\n  })));\n};\n\nvar rangeSpec = utils.rangeSpec;\n\nvar RangeWidget = function RangeWidget(_ref) {\n  var value = _ref.value,\n      readonly = _ref.readonly,\n      disabled = _ref.disabled,\n      onBlur = _ref.onBlur,\n      onFocus = _ref.onFocus,\n      options = _ref.options,\n      schema = _ref.schema,\n      onChange = _ref.onChange,\n      required = _ref.required,\n      label = _ref.label,\n      id = _ref.id;\n\n  var sliderProps = _extends({\n    value: value,\n    label: label,\n    id: id\n  }, rangeSpec(schema));\n\n  var _onChange = function _onChange(_ref2, value) {\n    _objectDestructuringEmpty(_ref2);\n\n    return onChange(value === \"\" ? options.emptyValue : value);\n  };\n\n  var _onBlur = function _onBlur(_ref3) {\n    var value = _ref3.target.value;\n    return onBlur(id, value);\n  };\n\n  var _onFocus = function _onFocus(_ref4) {\n    var value = _ref4.target.value;\n    return onFocus(id, value);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(FormLabel, {\n    required: required,\n    id: id\n  }, label), React.createElement(Slider, Object.assign({\n    disabled: disabled || readonly,\n    onChange: _onChange,\n    onBlur: _onBlur,\n    onFocus: _onFocus,\n    valueLabelDisplay: \"auto\"\n  }, sliderProps)));\n};\n\nvar asNumber = utils.asNumber,\n    guessType = utils.guessType;\nvar nums = /*#__PURE__*/new Set([\"number\", \"integer\"]);\n/**\r\n * This is a silly limitation in the DOM where option change event values are\r\n * always retrieved as strings.\r\n */\n\nvar processValue = function processValue(schema, value) {\n  // \"enum\" is a reserved word, so only \"type\" and \"items\" can be destructured\n  var type = schema.type,\n      items = schema.items;\n\n  if (value === \"\") {\n    return undefined;\n  } else if (type === \"array\" && items && nums.has(items.type)) {\n    return value.map(asNumber);\n  } else if (type === \"boolean\") {\n    return value === \"true\";\n  } else if (type === \"number\") {\n    return asNumber(value);\n  } // If type is undefined, but an enum is present, try and infer the type from\n  // the enum values\n\n\n  if (schema[\"enum\"]) {\n    if (schema[\"enum\"].every(function (x) {\n      return guessType(x) === \"number\";\n    })) {\n      return asNumber(value);\n    } else if (schema[\"enum\"].every(function (x) {\n      return guessType(x) === \"boolean\";\n    })) {\n      return value === \"true\";\n    }\n  }\n\n  return value;\n};\n\nvar SelectWidget = function SelectWidget(_ref) {\n  var schema = _ref.schema,\n      id = _ref.id,\n      options = _ref.options,\n      label = _ref.label,\n      required = _ref.required,\n      disabled = _ref.disabled,\n      readonly = _ref.readonly,\n      value = _ref.value,\n      multiple = _ref.multiple,\n      autofocus = _ref.autofocus,\n      onChange = _ref.onChange,\n      onBlur = _ref.onBlur,\n      onFocus = _ref.onFocus,\n      _ref$rawErrors = _ref.rawErrors,\n      rawErrors = _ref$rawErrors === void 0 ? [] : _ref$rawErrors;\n  var enumOptions = options.enumOptions,\n      enumDisabled = options.enumDisabled;\n  var emptyValue = multiple ? [] : \"\";\n\n  var _onChange = function _onChange(_ref2) {\n    var value = _ref2.target.value;\n    return onChange(processValue(schema, value));\n  };\n\n  var _onBlur = function _onBlur(_ref3) {\n    var value = _ref3.target.value;\n    return onBlur(id, processValue(schema, value));\n  };\n\n  var _onFocus = function _onFocus(_ref4) {\n    var value = _ref4.target.value;\n    return onFocus(id, processValue(schema, value));\n  };\n\n  return React.createElement(TextField, {\n    id: id,\n    label: label || schema.title,\n    select: true,\n    value: typeof value === \"undefined\" ? emptyValue : value,\n    required: required,\n    disabled: disabled || readonly,\n    autoFocus: autofocus,\n    error: rawErrors.length > 0,\n    onChange: _onChange,\n    onBlur: _onBlur,\n    onFocus: _onFocus,\n    InputLabelProps: {\n      shrink: true\n    },\n    SelectProps: {\n      multiple: typeof multiple === \"undefined\" ? false : multiple\n    }\n  }, enumOptions.map(function (_ref5, i) {\n    var value = _ref5.value,\n        label = _ref5.label;\n    var disabled = enumDisabled && enumDisabled.indexOf(value) != -1;\n    return React.createElement(MenuItem, {\n      key: i,\n      value: value,\n      disabled: disabled\n    }, label);\n  }));\n};\n\nvar TextareaWidget = function TextareaWidget(_ref) {\n  var id = _ref.id,\n      placeholder = _ref.placeholder,\n      value = _ref.value,\n      required = _ref.required,\n      disabled = _ref.disabled,\n      autofocus = _ref.autofocus,\n      label = _ref.label,\n      readonly = _ref.readonly,\n      onBlur = _ref.onBlur,\n      onFocus = _ref.onFocus,\n      onChange = _ref.onChange,\n      options = _ref.options,\n      schema = _ref.schema,\n      _ref$rawErrors = _ref.rawErrors,\n      rawErrors = _ref$rawErrors === void 0 ? [] : _ref$rawErrors;\n\n  var _onChange = function _onChange(_ref2) {\n    var value = _ref2.target.value;\n    return onChange(value === \"\" ? options.emptyValue : value);\n  };\n\n  var _onBlur = function _onBlur(_ref3) {\n    var value = _ref3.target.value;\n    return onBlur(id, value);\n  };\n\n  var _onFocus = function _onFocus(_ref4) {\n    var value = _ref4.target.value;\n    return onFocus(id, value);\n  };\n\n  return React.createElement(TextField, {\n    id: id,\n    label: label || schema.title,\n    placeholder: placeholder,\n    disabled: disabled || readonly,\n    value: value,\n    required: required,\n    autoFocus: autofocus,\n    multiline: true,\n    rows: options.rows || 5,\n    error: rawErrors.length > 0,\n    onChange: _onChange,\n    onBlur: _onBlur,\n    onFocus: _onFocus\n  });\n};\n\nvar UpDownWidget = function UpDownWidget(_ref) {\n  var id = _ref.id,\n      required = _ref.required,\n      readonly = _ref.readonly,\n      disabled = _ref.disabled,\n      label = _ref.label,\n      value = _ref.value,\n      onChange = _ref.onChange,\n      onBlur = _ref.onBlur,\n      onFocus = _ref.onFocus,\n      autofocus = _ref.autofocus;\n\n  var _onChange = function _onChange(_ref2) {\n    var value = _ref2.target.value;\n    return onChange(value);\n  };\n\n  var _onBlur = function _onBlur(_ref3) {\n    var value = _ref3.target.value;\n    return onBlur(id, value);\n  };\n\n  var _onFocus = function _onFocus(_ref4) {\n    var value = _ref4.target.value;\n    return onFocus(id, value);\n  };\n\n  return React.createElement(FormControl, {\n    fullWidth: true,\n    //error={!!rawErrors}\n    required: required\n  }, React.createElement(InputLabel, null, label), React.createElement(Input, {\n    id: id,\n    autoFocus: autofocus,\n    required: required,\n    type: \"number\",\n    disabled: disabled || readonly,\n    value: value || value === 0 ? value : '',\n    onChange: _onChange,\n    onBlur: _onBlur,\n    onFocus: _onFocus\n  }));\n};\n\nvar URLWidget = function URLWidget(props) {\n  return React.createElement(TextWidget, Object.assign({\n    type: \"url\"\n  }, props));\n};\n\nvar Widgets = {\n  CheckboxWidget: CheckboxWidget,\n  CheckboxesWidget: CheckboxesWidget,\n  ColorWidget: ColorWidget,\n  DateWidget: DateWidget,\n  DateTimeWidget: DateTimeWidget,\n  EmailWidget: EmailWidget,\n  PasswordWidget: PasswordWidget,\n  RadioWidget: RadioWidget,\n  RangeWidget: RangeWidget,\n  SelectWidget: SelectWidget,\n  TextareaWidget: TextareaWidget,\n  TextWidget: TextWidget,\n  UpDownWidget: UpDownWidget,\n  URLWidget: URLWidget\n};\nvar getDefaultRegistry$1 = utils.getDefaultRegistry;\n\nvar _getDefaultRegistry = /*#__PURE__*/getDefaultRegistry$1(),\n    fields = _getDefaultRegistry.fields,\n    widgets = _getDefaultRegistry.widgets;\n\nvar DefaultChildren = function DefaultChildren() {\n  return React.createElement(Box, {\n    marginTop: 3\n  }, React.createElement(Button, {\n    type: \"submit\",\n    variant: \"contained\",\n    color: \"primary\"\n  }, \"Submit\"));\n};\n\nvar Theme = {\n  children: /*#__PURE__*/React.createElement(DefaultChildren, null),\n  ArrayFieldTemplate: ArrayFieldTemplate,\n  fields: /*#__PURE__*/_extends({}, fields, Fields),\n  FieldTemplate: FieldTemplate,\n  ObjectFieldTemplate: ObjectFieldTemplate,\n  widgets: /*#__PURE__*/_extends({}, widgets, Widgets),\n  ErrorList: ErrorList\n};\nvar MuiForm = /*#__PURE__*/withTheme(Theme);\nexport default MuiForm;\nexport { ArrayFieldTemplate, FieldTemplate, Fields, MuiForm, ObjectFieldTemplate, Theme, Widgets };","map":{"version":3,"sources":["../src/AddButton/AddButton.tsx","../src/IconButton/IconButton.tsx","../src/ArrayFieldTemplate/ArrayFieldTemplate.tsx","../src/ErrorList/ErrorList.tsx","../src/DescriptionField/DescriptionField.tsx","../src/TitleField/TitleField.tsx","../src/Fields/Fields.ts","../src/FieldTemplate/WrapIfAdditional.tsx","../src/FieldTemplate/FieldTemplate.tsx","../src/ObjectFieldTemplate/ObjectFieldTemplate.tsx","../src/CheckboxWidget/CheckboxWidget.tsx","../src/CheckboxesWidget/CheckboxesWidget.tsx","../src/TextWidget/TextWidget.tsx","../src/ColorWidget/ColorWidget.tsx","../src/DateWidget/DateWidget.tsx","../src/DateTimeWidget/DateTimeWidget.tsx","../src/EmailWidget/EmailWidget.tsx","../src/PasswordWidget/PasswordWidget.tsx","../src/RadioWidget/RadioWidget.tsx","../src/RangeWidget/RangeWidget.tsx","../src/SelectWidget/SelectWidget.tsx","../src/TextareaWidget/TextareaWidget.tsx","../src/UpDownWidget/UpDownWidget.tsx","../src/URLWidget/URLWidget.tsx","../src/Widgets/Widgets.ts","../src/Theme/Theme.tsx","../src/MuiForm/MuiForm.tsx"],"names":["AddButton","props","color","React","mappings","remove","plus","ArrowDownward","IconButton","icon","iconProps","otherProps","IconComp","size","isMultiSelect","getDefaultRegistry","utils","ArrayFieldTemplate","schema","registry","ArrayFieldTitle","TitleField","idSchema","title","required","id","ArrayFieldDescription","DescriptionField","description","DefaultArrayItem","btnStyle","flex","paddingLeft","paddingRight","fontWeight","minWidth","container","key","alignItems","item","xs","style","overflow","mb","elevation","p","className","tabIndex","fontSize","disabled","hasMoveUp","onClick","hasMoveDown","readonly","DefaultFixedArrayFieldTemplate","$id","onAddClick","DefaultNormalArrayFieldTemplate","justify","mt","ErrorList","errors","variant","dense","i","primary","error","stack","useStyles","makeStyles","root","marginTop","classes","ADDITIONAL_PROPERTY_FLAG","WrapIfAdditional","children","label","onDropPropertyClick","onKeyChange","keyLabel","additional","handleBlur","target","spacing","fullWidth","defaultValue","name","onBlur","undefined","type","FieldTemplate","classNames","displayLabel","hidden","rawErrors","rawHelp","rawDescription","disablePadding","disableGutters","canExpand","ObjectFieldTemplate","properties","uiSchema","formData","element","index","marginBottom","schemaRequiresTrueValue","CheckboxWidget","value","autofocus","onChange","onFocus","_onChange","_onBlur","_onFocus","control","checked","autoFocus","selectValue","at","all","updated","selected","deselectValue","v","CheckboxesWidget","options","enumOptions","enumDisabled","inline","option","htmlFor","row","itemDisabled","checkbox","getDisplayLabel","TextWidget","placeholder","textFieldProps","inputType","ColorWidget","DateWidget","InputLabelProps","shrink","localToUTC","utcToLocal","DateTimeWidget","EmailWidget","PasswordWidget","RadioWidget","radio","rangeSpec","RangeWidget","sliderProps","valueLabelDisplay","asNumber","guessType","nums","processValue","items","SelectWidget","multiple","emptyValue","select","SelectProps","TextareaWidget","multiline","rows","UpDownWidget","URLWidget","fields","widgets","DefaultChildren","Theme","MuiForm","withTheme"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { AddButtonProps } from '@rjsf/core';\n\nimport Button from '@material-ui/core/Button';\nimport AddIcon from '@material-ui/icons/Add';\n\nconst AddButton: React.FC<AddButtonProps> = props => (\n  <Button {...props} color=\"secondary\">\n    <AddIcon /> Add Item\n  </Button>\n);\n\nexport default AddButton;\n","import React from \"react\";\n\nimport Button from \"@material-ui/core/Button\";\nimport Add from \"@material-ui/icons/Add\";\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\nimport ArrowDownward from \"@material-ui/icons/ArrowDownward\";\nimport Remove from \"@material-ui/icons/Remove\";\nimport { IconButtonProps as MuiIconButtonProps } from \"@material-ui/core/IconButton\";\n\nconst mappings: any = {\n  remove: Remove,\n  plus: Add,\n  \"arrow-up\": ArrowUpward,\n  \"arrow-down\": ArrowDownward,\n};\n\ntype IconButtonProps = MuiIconButtonProps & {\n  icon: string;\n  iconProps?: object;\n};\n\nconst IconButton = (props: IconButtonProps) => {\n  const { icon, className, iconProps, ...otherProps } = props;\n  const IconComp = mappings[icon];\n  return (\n    <Button {...otherProps} size=\"small\">\n      <IconComp {...iconProps} />\n    </Button>\n  );\n};\n\nexport default IconButton;\n","import React from 'react';\n\nimport { utils } from '@rjsf/core';\n\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\n\nimport { ArrayFieldTemplateProps, IdSchema } from '@rjsf/core';\n\nimport AddButton from '../AddButton/AddButton';\nimport IconButton from '../IconButton/IconButton';\n\nconst {\n  isMultiSelect,\n  getDefaultRegistry,\n} = utils;\n\nconst ArrayFieldTemplate = (props: ArrayFieldTemplateProps) => {\n  const { schema, registry = getDefaultRegistry() } = props;\n\n  // TODO: update types so we don't have to cast registry as any\n  if (isMultiSelect(schema, (registry as any).rootSchema)) {\n    return <DefaultFixedArrayFieldTemplate {...props} />;\n  } else {\n    return <DefaultNormalArrayFieldTemplate {...props} />;\n  }\n};\n\ntype ArrayFieldTitleProps = {\n  TitleField: any;\n  idSchema: IdSchema;\n  title: string;\n  required: boolean;\n};\n\nconst ArrayFieldTitle = ({\n  TitleField,\n  idSchema,\n  title,\n  required,\n}: ArrayFieldTitleProps) => {\n  if (!title) {\n    return null;\n  }\n\n  const id = `${idSchema.$id}__title`;\n  return <TitleField id={id} title={title} required={required} />;\n};\n\ntype ArrayFieldDescriptionProps = {\n  DescriptionField: any;\n  idSchema: IdSchema;\n  description: string;\n};\n\nconst ArrayFieldDescription = ({\n  DescriptionField,\n  idSchema,\n  description,\n}: ArrayFieldDescriptionProps) => {\n  if (!description) {\n    return null;\n  }\n\n  const id = `${idSchema.$id}__description`;\n  return <DescriptionField id={id} description={description} />;\n};\n\n// Used in the two templates\nconst DefaultArrayItem = (props: any) => {\n  const btnStyle = {\n    flex: 1,\n    paddingLeft: 6,\n    paddingRight: 6,\n    fontWeight: 'bold',\n    minWidth: 0\n  };\n  return (\n    <Grid container={true} key={props.key} alignItems=\"center\">\n      <Grid item={true} xs style={{ overflow: \"auto\" }}>\n        <Box mb={2}>\n          <Paper elevation={2}>\n            <Box p={2}>{props.children}</Box>\n          </Paper>\n        </Box>\n      </Grid>\n\n      {props.hasToolbar && (\n        <Grid item={true}>\n          {(props.hasMoveUp || props.hasMoveDown) && (\n            <IconButton\n              icon=\"arrow-up\"\n              className=\"array-item-move-up\"\n              tabIndex={-1}\n              style={btnStyle as any}\n              iconProps={{ fontSize: 'small' }}\n              disabled={props.disabled || props.readonly || !props.hasMoveUp}\n              onClick={props.onReorderClick(props.index, props.index - 1)}\n            />\n          )}\n\n          {(props.hasMoveUp || props.hasMoveDown) && (\n            <IconButton\n              icon=\"arrow-down\"\n              tabIndex={-1}\n              style={btnStyle as any}\n              iconProps={{ fontSize: 'small' }}\n              disabled={props.disabled || props.readonly || !props.hasMoveDown}\n              onClick={props.onReorderClick(props.index, props.index + 1)}\n            />\n          )}\n\n          {props.hasRemove && (\n            <IconButton\n              icon=\"remove\"\n              tabIndex={-1}\n              style={btnStyle as any}\n              iconProps={{ fontSize: 'small' }}\n              disabled={props.disabled || props.readonly}\n              onClick={props.onDropIndexClick(props.index)}\n            />\n          )}\n        </Grid>\n      )}\n    </Grid>\n  );\n};\n\nconst DefaultFixedArrayFieldTemplate = (props: ArrayFieldTemplateProps) => {\n  return (\n    <fieldset className={props.className}>\n      <ArrayFieldTitle\n        key={`array-field-title-${props.idSchema.$id}`}\n        TitleField={props.TitleField}\n        idSchema={props.idSchema}\n        title={props.uiSchema['ui:title'] || props.title}\n        required={props.required}\n      />\n\n      {(props.uiSchema['ui:description'] || props.schema.description) && (\n        <div\n          className=\"field-description\"\n          key={`field-description-${props.idSchema.$id}`}\n        >\n          {props.uiSchema['ui:description'] || props.schema.description}\n        </div>\n      )}\n\n      <div\n        className=\"row array-item-list\"\n        key={`array-item-list-${props.idSchema.$id}`}\n      >\n        {props.items && props.items.map(DefaultArrayItem)}\n      </div>\n\n      {props.canAdd && (\n        <AddButton\n          className=\"array-item-add\"\n          onClick={props.onAddClick}\n          disabled={props.disabled || props.readonly}\n        />\n      )}\n    </fieldset>\n  );\n};\n\nconst DefaultNormalArrayFieldTemplate = (props: ArrayFieldTemplateProps) => {\n  return (\n    <Paper elevation={2}>\n      <Box p={2}>\n        <ArrayFieldTitle\n          key={`array-field-title-${props.idSchema.$id}`}\n          TitleField={props.TitleField}\n          idSchema={props.idSchema}\n          title={props.uiSchema['ui:title'] || props.title}\n          required={props.required}\n        />\n\n        {(props.uiSchema['ui:description'] || props.schema.description) && (\n          <ArrayFieldDescription\n            key={`array-field-description-${props.idSchema.$id}`}\n            DescriptionField={props.DescriptionField}\n            idSchema={props.idSchema}\n            description={\n              props.uiSchema['ui:description'] || props.schema.description\n            }\n          />\n        )}\n\n        <Grid container={true} key={`array-item-list-${props.idSchema.$id}`}>\n          {props.items && props.items.map(p => DefaultArrayItem(p))}\n\n          {props.canAdd && (\n            <Grid container justify=\"flex-end\">\n              <Grid item={true}>\n                <Box mt={2}>\n                  <AddButton\n                    className=\"array-item-add\"\n                    onClick={props.onAddClick}\n                    disabled={props.disabled || props.readonly}\n                  />\n                </Box>\n              </Grid>\n            </Grid>\n          )}\n        </Grid>\n      </Box>\n    </Paper>\n  );\n};\n\nexport default ArrayFieldTemplate;\n","import React from 'react';\n\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Paper from '@material-ui/core/Paper';\n\nimport { ErrorListProps } from '@rjsf/core';\n\nconst ErrorList = ({ errors }: ErrorListProps) => (\n  <Paper elevation={2}>\n    <Box mb={2} p={2}>\n      <Typography variant=\"h6\">\n        Errors\n      </Typography>\n      <List dense={true}>\n        {errors.map((error, i: number) => {\n          return (\n            <ListItem key={i}>\n              <ListItemIcon>\n                <ErrorIcon color=\"error\" />\n              </ListItemIcon>\n              <ListItemText primary={error.stack} />\n            </ListItem>\n          );\n        })}\n      </List>\n    </Box>\n  </Paper>\n);\n\nexport default ErrorList;\n","import React from 'react';\n\nimport { FieldProps } from '@rjsf/core';\n\nimport { makeStyles } from '@material-ui/styles';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n  root: {\n    marginTop: 5,\n  },\n});\n\nconst DescriptionField = ({ description }: FieldProps) => {\n  if (description) {\n    const classes = useStyles();\n\n    return (\n      <Typography variant=\"subtitle2\" className={classes.root}>\n        {description}\n      </Typography>\n    );\n  }\n\n  return null;\n};\n\nexport default DescriptionField;\n","import React from 'react';\n\nimport { FieldProps } from '@rjsf/core';\n\nimport Box from '@material-ui/core/Box';\nimport Divider from '@material-ui/core/Divider';\nimport Typography from '@material-ui/core/Typography';\n\nconst TitleField = ({ title }: FieldProps) => (\n  <>\n    <Box mb={1} mt={1}>\n      <Typography variant=\"h5\">{title}</Typography>\n      <Divider />\n    </Box>\n  </>\n);\n\nexport default TitleField;\n","import DescriptionField from '../DescriptionField/DescriptionField';\nimport TitleField from '../TitleField/TitleField';\n\nexport default {\n  DescriptionField,\n  TitleField,\n};\n","import React from \"react\";\n\nimport { utils } from \"@rjsf/core\";\nimport { JSONSchema7 } from \"json-schema\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\n\nimport IconButton from \"../IconButton/IconButton\";\n\nconst { ADDITIONAL_PROPERTY_FLAG } = utils;\n\ntype WrapIfAdditionalProps = {\n  children: React.ReactElement;\n  classNames: string;\n  disabled: boolean;\n  id: string;\n  label: string;\n  onDropPropertyClick: (index: string) => (event?: any) => void;\n  onKeyChange: (index: string) => (event?: any) => void;\n  readonly: boolean;\n  required: boolean;\n  schema: JSONSchema7;\n};\n\nconst WrapIfAdditional = ({\n  children,\n  disabled,\n  id,\n  label,\n  onDropPropertyClick,\n  onKeyChange,\n  readonly,\n  required,\n  schema,\n}: WrapIfAdditionalProps) => {\n  const keyLabel = `${label} Key`; // i18n ?\n  const additional = schema.hasOwnProperty(ADDITIONAL_PROPERTY_FLAG);\n  const btnStyle = {\n    flex: 1,\n    paddingLeft: 6,\n    paddingRight: 6,\n    fontWeight: \"bold\",\n  };\n\n  if (!additional) {\n    return <>{children}</>;\n  }\n\n  const handleBlur = ({ target }: React.FocusEvent<HTMLInputElement>) =>\n    onKeyChange(target.value);\n\n  return (\n    <Grid container={true} key={`${id}-key`} alignItems=\"center\" spacing={2}>\n      <Grid item={true} xs>\n        <FormControl fullWidth={true} required={required}>\n          <InputLabel>{keyLabel}</InputLabel>\n          <Input\n            defaultValue={label}\n            disabled={disabled || readonly}\n            id={`${id}-key`}\n            name={`${id}-key`}\n            onBlur={!readonly ? handleBlur : undefined}\n            type=\"text\"\n          />\n        </FormControl>\n      </Grid>\n      <Grid item={true} xs>\n        {children}\n      </Grid>\n      <Grid item={true}>\n        <IconButton\n          icon=\"remove\"\n          tabIndex={-1}\n          style={btnStyle as any}\n          disabled={disabled || readonly}\n          onClick={onDropPropertyClick(label)}\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default WrapIfAdditional;\n","import React from \"react\";\n\nimport { FieldTemplateProps } from \"@rjsf/core\";\n\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport WrapIfAdditional from \"./WrapIfAdditional\";\n\nconst FieldTemplate = ({\n  id,\n  children,\n  classNames,\n  disabled,\n  displayLabel,\n  hidden,\n  label,\n  onDropPropertyClick,\n  onKeyChange,\n  readonly,\n  required,\n  rawErrors = [],\n  rawHelp,\n  rawDescription,\n  schema,\n}: FieldTemplateProps) => {\n  if (hidden) {\n    return children;\n  }\n\n  return (\n    <WrapIfAdditional\n      classNames={classNames}\n      disabled={disabled}\n      id={id}\n      label={label}\n      onDropPropertyClick={onDropPropertyClick}\n      onKeyChange={onKeyChange}\n      readonly={readonly}\n      required={required}\n      schema={schema}>\n      <FormControl\n        fullWidth={true}\n        error={rawErrors.length ? true : false}\n        required={required}>\n        {children}\n        {displayLabel && rawDescription ? (\n          <Typography variant=\"caption\" color=\"textSecondary\">\n            {rawDescription}\n          </Typography>\n        ) : null}\n        {rawErrors.length > 0 && (\n          <List dense={true} disablePadding={true}>\n            {rawErrors.map((error, i: number) => {\n              return (\n                <ListItem key={i} disableGutters={true}>\n                  <FormHelperText id={id}>{error}</FormHelperText>\n                </ListItem>\n              );\n            })}\n          </List>\n        )}\n        {rawHelp && <FormHelperText id={id}>{rawHelp}</FormHelperText>}\n      </FormControl>\n    </WrapIfAdditional>\n  );\n};\n\nexport default FieldTemplate;\n","import React from 'react';\n\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/styles';\n\nimport { ObjectFieldTemplateProps } from '@rjsf/core';\nimport { utils } from '@rjsf/core';\n\nimport AddButton from '../AddButton/AddButton';\n\nconst { canExpand } = utils;\n\nconst useStyles = makeStyles({\n  root: {\n    marginTop: 10,\n  },\n});\n\nconst ObjectFieldTemplate = ({\n  DescriptionField,\n  description,\n  TitleField,\n  title,\n  properties,\n  required,\n  disabled,\n  readonly,\n  uiSchema,\n  idSchema,\n  schema,\n  formData,\n  onAddClick,\n}: ObjectFieldTemplateProps) => {\n  const classes = useStyles();\n\n  return (\n    <>\n      {(uiSchema['ui:title'] || title) && (\n        <TitleField\n          id={`${idSchema.$id}-title`}\n          title={title}\n          required={required}\n        />\n      )}\n      {description && (\n        <DescriptionField\n          id={`${idSchema.$id}-description`}\n          description={description}\n        />\n      )}\n      <Grid container={true} spacing={2} className={classes.root}>\n        {properties.map((element, index) =>\n          // Remove the <Grid> if the inner element is hidden as the <Grid>\n          // itself would otherwise still take up space.\n          element.hidden ? (\n            element.content\n          ) : (\n            <Grid\n              item={true}\n              xs={12}\n              key={index}\n              style={{ marginBottom: \"10px\" }}>\n              {element.content}\n            </Grid>\n          )\n        )}\n        {canExpand(schema, uiSchema, formData) && (\n          <Grid container justify='flex-end'>\n            <Grid item={true}>\n              <AddButton\n                className='object-property-expand'\n                onClick={onAddClick(schema)}\n                disabled={disabled || readonly}\n              />\n            </Grid>\n          </Grid>\n        )}\n      </Grid>\n    </>\n  );\n};\n\nexport default ObjectFieldTemplate;\n","import React from \"react\";\n\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\n\nimport { WidgetProps } from \"@rjsf/core\";\nimport { utils } from \"@rjsf/core\";\n\nconst { schemaRequiresTrueValue } = utils;\n\nconst CheckboxWidget = (props: WidgetProps) => {\n  const {\n    schema,\n    id,\n    value,\n    disabled,\n    readonly,\n    label,\n    autofocus,\n    onChange,\n    onBlur,\n    onFocus,\n  } = props;\n\n  // Because an unchecked checkbox will cause html5 validation to fail, only add\n  // the \"required\" attribute if the field value must be \"true\", due to the\n  // \"const\" or \"enum\" keywords\n  const required = schemaRequiresTrueValue(schema);\n\n  const _onChange = ({}, checked: boolean) => onChange(checked);\n  const _onBlur = ({\n    target: { value },\n  }: React.FocusEvent<HTMLButtonElement>) => onBlur(id, value);\n  const _onFocus = ({\n    target: { value },\n  }: React.FocusEvent<HTMLButtonElement>) => onFocus(id, value);\n\n  return (\n    <FormControlLabel\n      control={\n        <Checkbox\n          id={id}\n          checked={typeof value === \"undefined\" ? false : value}\n          required={required}\n          disabled={disabled || readonly}\n          autoFocus={autofocus}\n          onChange={_onChange}\n          onBlur={_onBlur}\n          onFocus={_onFocus}\n        />\n      }\n      label={label}\n    />\n  );\n};\n\nexport default CheckboxWidget;\n","import React from \"react\";\n\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n\nimport { WidgetProps } from \"@rjsf/core\";\n\nconst selectValue = (value: any, selected: any, all: any) => {\n  const at = all.indexOf(value);\n  const updated = selected.slice(0, at).concat(value, selected.slice(at));\n\n  // As inserting values at predefined index positions doesn't work with empty\n  // arrays, we need to reorder the updated selection to match the initial order\n  return updated.sort((a: any, b: any) => all.indexOf(a) > all.indexOf(b));\n};\n\nconst deselectValue = (value: any, selected: any) => {\n  return selected.filter((v: any) => v !== value);\n};\n\nconst CheckboxesWidget = ({\n  schema,\n  label,\n  id,\n  disabled,\n  options,\n  value,\n  autofocus,\n  readonly,\n  required,\n  onChange,\n  onBlur,\n  onFocus,\n}: WidgetProps) => {\n  const { enumOptions, enumDisabled, inline } = options;\n\n  const _onChange = (option: any) => ({\n    target: { checked },\n  }: React.ChangeEvent<HTMLInputElement>) => {\n    const all = (enumOptions as any).map(({ value }: any) => value);\n\n    if (checked) {\n      onChange(selectValue(option.value, value, all));\n    } else {\n      onChange(deselectValue(option.value, value));\n    }\n  };\n\n  const _onBlur = ({\n    target: { value },\n  }: React.FocusEvent<HTMLButtonElement>) => onBlur(id, value);\n  const _onFocus = ({\n    target: { value },\n  }: React.FocusEvent<HTMLButtonElement>) => onFocus(id, value);\n\n  return (\n    <>\n      <FormLabel required={required} htmlFor={id}>\n        {label || schema.title}\n      </FormLabel>\n      <FormGroup row={!!inline}>\n        {(enumOptions as any).map((option: any, index: number) => {\n          const checked = value.indexOf(option.value) !== -1;\n          const itemDisabled =\n            enumDisabled && (enumDisabled as any).indexOf(option.value) != -1;\n          const checkbox = (\n            <Checkbox\n              id={`${id}_${index}`}\n              checked={checked}\n              disabled={disabled || itemDisabled || readonly}\n              autoFocus={autofocus && index === 0}\n              onChange={_onChange(option)}\n              onBlur={_onBlur}\n              onFocus={_onFocus}\n            />\n          );\n          return (\n            <FormControlLabel\n              control={checkbox}\n              key={index}\n              label={option.label}\n            />\n          );\n        })}\n      </FormGroup>\n    </>\n  );\n};\n\nexport default CheckboxesWidget;\n","import React from \"react\";\n\nimport TextField, {\n  StandardTextFieldProps as TextFieldProps,\n} from \"@material-ui/core/TextField\";\n\nimport { WidgetProps, utils } from \"@rjsf/core\";\n\nconst { getDisplayLabel } = utils;\n\nexport type TextWidgetProps = WidgetProps & Pick<TextFieldProps, Exclude<keyof TextFieldProps, 'onBlur' | 'onFocus'>>;\n\nconst TextWidget = ({\n  id,\n  placeholder,\n  required,\n  readonly,\n  disabled,\n  type,\n  label,\n  value,\n  onChange,\n  onBlur,\n  onFocus,\n  autofocus,\n  options,\n  schema,\n  uiSchema,\n  rawErrors = [],\n  formContext,\n  ...textFieldProps\n}: TextWidgetProps) => {\n  const _onChange = ({\n    target: { value },\n  }: React.ChangeEvent<HTMLInputElement>) =>\n    onChange(value === \"\" ? options.emptyValue : value);\n  const _onBlur = ({ target: { value } }: React.FocusEvent<HTMLInputElement>) =>\n    onBlur(id, value);\n  const _onFocus = ({\n    target: { value },\n  }: React.FocusEvent<HTMLInputElement>) => onFocus(id, value);\n\n  const displayLabel = getDisplayLabel(\n    schema,\n    uiSchema\n    /* TODO: , rootSchema */\n  );\n  const inputType = (type || schema.type) === 'string' ?  'text' : `${type || schema.type}`\n\n  return (\n    <TextField\n      id={id}\n      placeholder={placeholder}\n      label={displayLabel ? label || schema.title : false}\n      autoFocus={autofocus}\n      required={required}\n      disabled={disabled || readonly}\n      type={inputType as string}\n      value={value || value === 0 ? value : \"\"}\n      error={rawErrors.length > 0}\n      onChange={_onChange}\n      onBlur={_onBlur}\n      onFocus={_onFocus}\n      {...(textFieldProps as TextFieldProps)}\n    />\n  );\n};\n\nexport default TextWidget;\n","import React from \"react\";\nimport TextWidget, { TextWidgetProps } from \"../TextWidget\";\n\nconst ColorWidget = (props: TextWidgetProps) => {\n  return <TextWidget type=\"color\" {...props} />;\n};\n\nexport default ColorWidget;\n","import React from \"react\";\nimport TextWidget, { TextWidgetProps } from \"../TextWidget\";\n\nconst DateWidget = (props: TextWidgetProps) => {\n  return (\n    <TextWidget\n      type=\"date\"\n      InputLabelProps={{\n        shrink: true,\n      }}\n      {...props}\n    />\n  );\n};\n\nexport default DateWidget;\n","import React from \"react\";\nimport { utils } from \"@rjsf/core\";\nimport TextWidget, { TextWidgetProps } from \"../TextWidget\";\n\nconst { localToUTC, utcToLocal } = utils;\n\nconst DateTimeWidget = (props: TextWidgetProps) => {\n  const value = utcToLocal(props.value);\n  const onChange = (value: any) => {\n    props.onChange(localToUTC(value));\n  };\n\n  return (\n    <TextWidget\n      type=\"datetime-local\"\n      InputLabelProps={{\n        shrink: true,\n      }}\n      {...props}\n      value={value}\n      onChange={onChange}\n    />\n  );\n};\n\nexport default DateTimeWidget;\n","import React from \"react\";\nimport TextWidget, { TextWidgetProps } from \"../TextWidget\";\n\nconst EmailWidget = (props: TextWidgetProps) => {\n  return <TextWidget type=\"email\" {...props} />;\n};\n\nexport default EmailWidget;\n","import React from \"react\";\n\nimport TextField from \"@material-ui/core/TextField\";\n\nimport { WidgetProps } from \"@rjsf/core\";\n\nconst PasswordWidget = ({\n  id,\n  required,\n  readonly,\n  disabled,\n  value,\n  label,\n  onFocus,\n  onBlur,\n  onChange,\n  options,\n  autofocus,\n  schema,\n  rawErrors = [],\n}: WidgetProps) => {\n  const _onChange = ({\n    target: { value },\n  }: React.ChangeEvent<HTMLInputElement>) =>\n    onChange(value === \"\" ? options.emptyValue : value);\n  const _onBlur = ({ target: { value } }: React.FocusEvent<HTMLInputElement>) =>\n    onBlur(id, value);\n  const _onFocus = ({\n    target: { value },\n  }: React.FocusEvent<HTMLInputElement>) => onFocus(id, value);\n\n  return (\n    <TextField\n      id={id}\n      label={label || schema.title}\n      autoFocus={autofocus}\n      required={required}\n      disabled={disabled || readonly}\n      type=\"password\"\n      value={value ? value : \"\"}\n      error={rawErrors.length > 0}\n      onFocus={_onFocus}\n      onBlur={_onBlur}\n      onChange={_onChange}\n    />\n  );\n};\n\nexport default PasswordWidget;\n","import React from \"react\";\n\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\n\nimport { WidgetProps } from \"@rjsf/core\";\n\nconst RadioWidget = ({\n  id,\n  schema,\n  options,\n  value,\n  required,\n  disabled,\n  readonly,\n  label,\n  onChange,\n  onBlur,\n  onFocus,\n}: WidgetProps) => {\n  const { enumOptions, enumDisabled } = options;\n\n  const _onChange = ({}, value: any) =>\n    onChange(schema.type == \"boolean\" ? value !== \"false\" : value);\n  const _onBlur = ({ target: { value } }: React.FocusEvent<HTMLInputElement>) =>\n    onBlur(id, value);\n  const _onFocus = ({\n    target: { value },\n  }: React.FocusEvent<HTMLInputElement>) => onFocus(id, value);\n\n  const row = options ? options.inline : false;\n\n  return (\n    <>\n      <FormLabel required={required} htmlFor={id}>\n        {label || schema.title}\n      </FormLabel>\n      <RadioGroup\n        value={`${value}`}\n        row={row as boolean}\n        onChange={_onChange}\n        onBlur={_onBlur}\n        onFocus={_onFocus}>\n        {(enumOptions as any).map((option: any, i: number) => {\n          const itemDisabled =\n            enumDisabled && (enumDisabled as any).indexOf(option.value) != -1;\n\n          const radio = (\n            <FormControlLabel\n              control={<Radio color=\"primary\" key={i} />}\n              label={`${option.label}`}\n              value={`${option.value}`}\n              key={i}\n              disabled={disabled || itemDisabled || readonly}\n            />\n          );\n\n          return radio;\n        })}\n      </RadioGroup>\n    </>\n  );\n};\n\nexport default RadioWidget;\n","import React from \"react\";\n\nimport Slider from \"@material-ui/core/Slider\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\n\nimport { utils } from \"@rjsf/core\";\nimport { WidgetProps } from \"@rjsf/core\";\n\nconst { rangeSpec } = utils;\n\nconst RangeWidget = ({\n  value,\n  readonly,\n  disabled,\n  onBlur,\n  onFocus,\n  options,\n  schema,\n  onChange,\n  required,\n  label,\n  id,\n}: WidgetProps) => {\n  let sliderProps = { value, label, id, ...rangeSpec(schema) };\n\n  const _onChange = ({}, value: any) =>\n    onChange(value === \"\" ? options.emptyValue : value);\n  const _onBlur = ({ target: { value } }: React.FocusEvent<HTMLInputElement>) =>\n    onBlur(id, value);\n  const _onFocus = ({\n    target: { value },\n  }: React.FocusEvent<HTMLInputElement>) => onFocus(id, value);\n\n  return (\n    <>\n      <FormLabel required={required} id={id}>\n        {label}\n      </FormLabel>\n      <Slider\n        disabled={disabled || readonly}\n        onChange={_onChange}\n        onBlur={_onBlur}\n        onFocus={_onFocus}\n        valueLabelDisplay=\"auto\"\n        {...sliderProps}\n      />\n    </>\n  );\n};\n\nexport default RangeWidget;\n","import React from \"react\";\n\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport { WidgetProps } from \"@rjsf/core\";\nimport { utils } from \"@rjsf/core\";\n\nconst { asNumber, guessType } = utils;\n\nconst nums = new Set([\"number\", \"integer\"]);\n\n/**\n * This is a silly limitation in the DOM where option change event values are\n * always retrieved as strings.\n */\nconst processValue = (schema: any, value: any) => {\n  // \"enum\" is a reserved word, so only \"type\" and \"items\" can be destructured\n  const { type, items } = schema;\n  if (value === \"\") {\n    return undefined;\n  } else if (type === \"array\" && items && nums.has(items.type)) {\n    return value.map(asNumber);\n  } else if (type === \"boolean\") {\n    return value === \"true\";\n  } else if (type === \"number\") {\n    return asNumber(value);\n  }\n\n  // If type is undefined, but an enum is present, try and infer the type from\n  // the enum values\n  if (schema.enum) {\n    if (schema.enum.every((x: any) => guessType(x) === \"number\")) {\n      return asNumber(value);\n    } else if (schema.enum.every((x: any) => guessType(x) === \"boolean\")) {\n      return value === \"true\";\n    }\n  }\n\n  return value;\n};\n\nconst SelectWidget = ({\n  schema,\n  id,\n  options,\n  label,\n  required,\n  disabled,\n  readonly,\n  value,\n  multiple,\n  autofocus,\n  onChange,\n  onBlur,\n  onFocus,\n  rawErrors = [],\n}: WidgetProps) => {\n  const { enumOptions, enumDisabled } = options;\n\n  const emptyValue = multiple ? [] : \"\";\n\n  const _onChange = ({\n    target: { value },\n  }: React.ChangeEvent<{ name?: string; value: unknown }>) =>\n    onChange(processValue(schema, value));\n  const _onBlur = ({ target: { value } }: React.FocusEvent<HTMLInputElement>) =>\n    onBlur(id, processValue(schema, value));\n  const _onFocus = ({\n    target: { value },\n  }: React.FocusEvent<HTMLInputElement>) =>\n    onFocus(id, processValue(schema, value));\n\n  return (\n    <TextField\n      id={id}\n      label={label || schema.title}\n      select\n      value={typeof value === \"undefined\" ? emptyValue : value}\n      required={required}\n      disabled={disabled || readonly}\n      autoFocus={autofocus}\n      error={rawErrors.length > 0}\n      onChange={_onChange}\n      onBlur={_onBlur}\n      onFocus={_onFocus}\n      InputLabelProps={{\n        shrink: true,\n      }}\n      SelectProps={{\n        multiple: typeof multiple === \"undefined\" ? false : multiple,\n      }}>\n      {(enumOptions as any).map(({ value, label }: any, i: number) => {\n        const disabled: any =\n          enumDisabled && (enumDisabled as any).indexOf(value) != -1;\n        return (\n          <MenuItem key={i} value={value} disabled={disabled}>\n            {label}\n          </MenuItem>\n        );\n      })}\n    </TextField>\n  );\n};\n\nexport default SelectWidget;\n","import React from \"react\";\n\nimport { WidgetProps } from \"@rjsf/core\";\n\nimport TextField from \"@material-ui/core/TextField\";\n\ntype CustomWidgetProps = WidgetProps & {\n  options: any;\n};\n\nconst TextareaWidget = ({\n  id,\n  placeholder,\n  value,\n  required,\n  disabled,\n  autofocus,\n  label,\n  readonly,\n  onBlur,\n  onFocus,\n  onChange,\n  options,\n  schema,\n  rawErrors = [],\n}: CustomWidgetProps) => {\n  const _onChange = ({\n    target: { value },\n  }: React.ChangeEvent<HTMLInputElement>) =>\n    onChange(value === \"\" ? options.emptyValue : value);\n  const _onBlur = ({ target: { value } }: React.FocusEvent<HTMLInputElement>) =>\n    onBlur(id, value);\n  const _onFocus = ({\n    target: { value },\n  }: React.FocusEvent<HTMLInputElement>) => onFocus(id, value);\n\n  return (\n    <TextField\n      id={id}\n      label={label || schema.title}\n      placeholder={placeholder}\n      disabled={disabled || readonly}\n      value={value}\n      required={required}\n      autoFocus={autofocus}\n      multiline={true}\n      rows={options.rows || 5}\n      error={rawErrors.length > 0}\n      onChange={_onChange}\n      onBlur={_onBlur}\n      onFocus={_onFocus}\n    />\n  );\n};\n\nexport default TextareaWidget;\n","import React from 'react';\n\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\n\nimport { WidgetProps } from '@rjsf/core';\n\nconst UpDownWidget = ({\n  id,\n  required,\n  readonly,\n  disabled,\n  label,\n  value,\n  onChange,\n  onBlur,\n  onFocus,\n  autofocus,\n}: WidgetProps) => {\n  const _onChange = ({\n    target: { value },\n  }: React.ChangeEvent<HTMLInputElement>) => onChange(value);\n  const _onBlur = ({ target: { value } }: React.FocusEvent<HTMLInputElement>) =>\n    onBlur(id, value);\n  const _onFocus = ({\n    target: { value },\n  }: React.FocusEvent<HTMLInputElement>) => onFocus(id, value);\n\n  return (\n    <FormControl\n      fullWidth={true}\n      //error={!!rawErrors}\n      required={required}\n    >\n      <InputLabel>{label}</InputLabel>\n      <Input\n        id={id}\n        autoFocus={autofocus}\n        required={required}\n        type=\"number\"\n        disabled={disabled || readonly}\n        value={value || value === 0 ? value : ''}\n        onChange={_onChange}\n        onBlur={_onBlur}\n        onFocus={_onFocus}\n      />\n    </FormControl>\n  );\n};\n\nexport default UpDownWidget;\n","import React from \"react\";\nimport TextWidget, { TextWidgetProps } from \"../TextWidget\";\n\nconst URLWidget = (props: TextWidgetProps) => {\n  return <TextWidget type=\"url\" {...props} />;\n};\n\nexport default URLWidget;\n","import CheckboxWidget from \"../CheckboxWidget/CheckboxWidget\";\nimport CheckboxesWidget from \"../CheckboxesWidget/CheckboxesWidget\";\nimport ColorWidget from \"../ColorWidget/ColorWidget\";\nimport DateWidget from \"../DateWidget/DateWidget\";\nimport DateTimeWidget from \"../DateTimeWidget/DateTimeWidget\";\nimport EmailWidget from \"../EmailWidget/EmailWidget\";\nimport PasswordWidget from \"../PasswordWidget/PasswordWidget\";\nimport RadioWidget from \"../RadioWidget/RadioWidget\";\nimport RangeWidget from \"../RangeWidget/RangeWidget\";\nimport SelectWidget from \"../SelectWidget/SelectWidget\";\nimport TextareaWidget from \"../TextareaWidget/TextareaWidget\";\nimport TextWidget from \"../TextWidget/TextWidget\";\nimport UpDownWidget from \"../UpDownWidget/UpDownWidget\";\nimport URLWidget from \"../URLWidget/URLWidget\";\n\nexport default {\n  CheckboxWidget,\n  CheckboxesWidget,\n  ColorWidget,\n  DateWidget,\n  DateTimeWidget,\n  EmailWidget,\n  PasswordWidget,\n  RadioWidget,\n  RangeWidget,\n  SelectWidget,\n  TextareaWidget,\n  TextWidget,\n  UpDownWidget,\n  URLWidget,\n};\n","import React from \"react\";\n\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\n\nimport ArrayFieldTemplate from \"../ArrayFieldTemplate\";\nimport ErrorList from \"../ErrorList\";\nimport Fields from \"../Fields\";\nimport FieldTemplate from \"../FieldTemplate\";\nimport ObjectFieldTemplate from \"../ObjectFieldTemplate\";\nimport Widgets from \"../Widgets\";\n\nimport { ThemeProps } from \"@rjsf/core\";\nimport { utils } from \"@rjsf/core\";\nconst { getDefaultRegistry } = utils;\n\nconst { fields, widgets } = getDefaultRegistry();\n\nconst DefaultChildren = () => (\n  <Box marginTop={3}>\n    <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n      Submit\n    </Button>\n  </Box>\n);\n\nconst Theme: ThemeProps = {\n  children: <DefaultChildren />,\n  ArrayFieldTemplate,\n  fields: { ...fields, ...Fields },\n  FieldTemplate,\n  ObjectFieldTemplate,\n  widgets: { ...widgets, ...Widgets },\n  ErrorList,\n};\n\nexport default Theme;\n","import { withTheme, FormProps } from '@rjsf/core';\n\nimport Theme from '../Theme';\nimport { StatelessComponent } from 'react';\n\nconst MuiForm: React.ComponentClass<FormProps<any>> | StatelessComponent<FormProps<any>>  = withTheme(Theme);\n\nexport default MuiForm;\n"]},"metadata":{},"sourceType":"module"}